---
title: "Filtering with .where()"
subtitle: "From Lecture 08"
---

## .take() with Arrays

- Incidentally, the .take method works on arrays too, not just tables.
- That means you can reverse the order of .take and .column and still get the same result.
- ⚠️ This interchangeability does not generally hold true with other methods, so be careful!

## Filtering with .where()

- 1. Review: .take()
- 2. Booleans
- 3. Filtering with .where()
- ➤

## Review: Filtering Rows

- Often times, we will have a table and will want to access only the rows where some condition is true. For example, given our SAT data, we may want all of the rows where…
- The combined SAT score is above 1800 (remember, this data is on the old 2400 scale).
- The state name is equal to “California”.
- The state name contains “Dakota”.
- The math SAT score is between 580 and 600.
- Accessing a subset of our data is called filtering. The method t.where will help us filter.
- .where is the most important table method we will learn in this class.
- ✅ Exact Match .where()

## Review: Filtering Rows

- Often times, we will have a table and will want to access only the rows where some condition is true. For example, given our SAT data, we may want all of the rows where…
- The combined SAT score is above 1800 (remember, this data is on the old 2400 scale).
- The state name is equal to “California”.
- The state name contains “Dakota”.
- The math SAT score is between 580 and 600.
- Accessing a subset of our data is called filtering. The method t.where will help us filter.
- .where is the most important table method we will learn in this class.
- ✅ Exact Match .where()
- We will now use .where to performconditional match, meaning we get rows whose columns meet a particular condition!

## Table.where Predicates

- The method t.where(label, value) returns a new table that contains only the rows whose label field/attribute exactly matches value.
- This method is shorthand for the Table.where predicate structure: 	t.where(label, are.equal\_to(value))
- This structure chooses the rows for which the “predicate” is True,and filters out the rows for which the predicate is False.
- A couple of examples will make this syntax easier to understand.

## Table.where Predicates Reference

- The method t.where(column, pred) creates a new table with only the rows from t  where column satisfies the predicate pred. See the Python Reference™ for all possible predicates; here are some of the main ones:
- Adding not\_ to any of the above to negates the predicate, e.g. are.not\_equal\_to(z).

## Multiple Predicates with Method Chaining

- Sometimes we may want only the rows where multiple conditions are true. For instance, we may want all rows where…
- The participation rate is above 20% and the combined SAT score is above 1500.
- The participation rate is below 10%, the combined SAT score is above 1600, and the state is in the Deep South.
- No problem: just method chain .where multiple times!


