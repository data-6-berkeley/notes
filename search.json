[
  {
    "objectID": "03-arrays/numpy.html",
    "href": "03-arrays/numpy.html",
    "title": "NumPy and Array Functions",
    "section": "",
    "text": "This note has the following goals:",
    "crumbs": [
      "L03: Arrays",
      "NumPy and Array Functions"
    ]
  },
  {
    "objectID": "03-arrays/numpy.html#array-functions",
    "href": "03-arrays/numpy.html#array-functions",
    "title": "NumPy and Array Functions",
    "section": "Array Functions",
    "text": "Array Functions\nAs data scientists we may find it useful to perform operations on arrays beyond simple element-wise arithmetic operations. We can do so via a range of functions from different sources.\nHere are some starter arrays to get us going. What arrays are created?\n\nfrom datascience import *\n\nint_arr = make_array(3, -4, 0, 5, 2)\nstr_arr = make_array(\"cm\", \"m\", \"in\", \"ft\", \"yd\")\nempty_arr = make_array() # challenge\n\n\n\n\n\n\n\nArrays created\n\n\n\n\n\n\nint_arr\n\narray([ 3, -4,  0,  5,  2])\n\n\n\nstr_arr\n\narray(['cm', 'm', 'in', 'ft', 'yd'],\n      dtype='&lt;U2')\n\n\nAn empty array is one with no elements:\n\nempty_arr\n\narray([], dtype=float64)\n\n\n\n\n\nWe will describe the syntax and terminology of built-in and NumPy functions below, then provide a table of operations. Here’s how we suggest working through this section:\n\nDon’t memorize these functions!\nInstead, remember there are two types of functions for arrays: built-in functions and NumPy functions.\nGet familiar with two tables, copied below. Get familiar with reading this tabl documentation to understand how each function works.\nWhen writing your programs, look through these functions and see which function(s) can compose your solution.\n\n\nBuilt-in functions\nSome built-in functions (i.e., included with Python) can take in arrays as arguments.\nHere is a table of example built-in functions for arrays. Again, don’t memorize the functions. Rather, get familiar with reading and predicting their outputs.\n\nBuilt-in Python functions that take in array arguments.\n\n\n\n\n\n\nExpression and Return value\nExample(s)\n\n\n\n\nlen(arr) Length of an array, providing the number of elements it contains. Useful for determining the size of an array dynamically.\nlen(str_arr)   # 5  len(empty_arr) # 0\n\n\nmax(arr) The largest value within an array.\nmax(int_arr)    # 5  max(str_arr)   # 'yd'\n\n\nmin(arr) The smallest value within an array.\nmin(int_arr)\n\n\nsum(arr) Sum of all values in an array.\nsum(int_arr)   # 6  sum(str_arr)   # TypeError\n\n\n\n\n\n\n\n\n\nNote 1: Argument data types\n\n\n\n\n\nRemember that even though function names can be identical, call expressions can evaluate differently depending on the argument data type. len(arg), for example, returns an integer value indicating the “length” of the argument arg. If arg is a string, it returns the number of characters; if arg is an array, it returns the number of elements.\n\nlen(str_arr)\n\n5\n\n\n\nlen(str_arr.item(0)) # what is the argument here?\n\n2\n\n\n\n\n\n\n\n\n\n\n\nNote 2: Expressions with string arrays\n\n\n\n\n\nAs you may have noticed above, calling these functions on strings return some seemingly bizarre values. After all, what does it mean to get the maximum value of an array of strings?\nInstead of erroring out, the Pythonic convention is to consider alphabetic sorting as a way of ordering elements—hence, \"yd\" comes alphabetically after \"cm\" and \"ft\", and so on.\nWe will not cover string comparisons in detail in this course. If you are curious about these algorithms, we encourage you to take a Data Structures course!\n\n\n\nLet’s use these built-in functions to compute the average (mean) value of the below array. We will discuss measures of average much later in this course.\n\narr = make_array(30, -40, -4.5, 0, 35)\navg = sum(arr)/len(arr)\navg\n\n4.0999999999999996\n\n\nDue to approximations in how the computer stores and operates on floats, the above number is as close to 4.1 (the true numeric average) as we can get with our Python calculator. Take a computer systems or computer architecture course for more information!\n\n\nNumPy functions\nNumPy (pronounced “NUM-pie”) is a Python library with convenient and powerful modules and functions for manipulating arrays. Any time we want to use NumPy, we must write an import statement:\n\nimport numpy as np\n\narr = make_array(30, -40, -4.5, 0, 35)\narr\n\narray([ 30. , -40. ,  -4.5,   0. ,  35. ])\n\n\nAfter putting this statement at the top of our notebook, we can then prepend np. to call a NumPy function. The below NumPy function call computes averages much more conveniently than our clever (but verbose) expression with built-in function calls, though it still suffers from floating point approximations:\n\nnp.average(arr)\n\n4.0999999999999996\n\n\n\n\n\n\n\n\nImport aliases\n\n\n\n\n\nIn Python, you can name imported packages anything you like using the as keyword. However, it’s customary to use standard aliases so that your code is easier for others (and your future self) to read.\nFor example, the NumPy library is conventionally imported as:\n\nimport numpy as np\n\nThis is not required, you could write the import statement as:\n\nimport numpy as magic\n\nThough this would confuse most readers. Since instead of prepending np, you would use magic.\n\nmagic.average(arr)\n\n4.0999999999999996\n\n\nSo while np isn’t a special keyword, it’s a widely accepted community convention.\n\n\n\n\n\nNumPy Array Function Table\nThere are many, many types of NumPy array functions; the below table only scratches the surface of what is possible. Again, instead of memorizing functions, we encourage you to learn how to read documentation by considering the following:\n\nWhat is the function name? How does this name inform the function description?\nWhat is the return value of this function?\n\nIf the data type of the return value is an array, is it the same length as the original array? Is the function therefore operating element-wise on the original array?\nIf the data type of the return value is a single value, how is this value computed from the different elements of the original array?\n\nIs the function changing the contents of the original array?\n\n\nA subset of NumPy array functions. A full reference is in the Data 6 reference sheet.\n\n\n\n\n\n\nNumPy function\nDescription\n\n\n\n\nnp.average(arr)  np.mean(arr)\nThe average (i.e., mean) value of arr\n\n\nnp.sum(arr)\nThe sum of all elements in arr\n\n\nnp.prod(arr)\nThe product of all elements in arr\n\n\nnp.count_nonzero(arr)\nThe number of elements in arr that are not equal to 0\n\n\nnp.diff(arr)\nThe difference between each element and the previous one value of arr. Returns an array of length 1 less than the original.\n\n\nnp.cumsum(arr)\nThe cumulative sum of all elements in arr.\n\n\nnp.sqrt(arr)\nThe square roots of each element in arr.\n\n\nnp.log(arr)\nThe natural logarithm of each element in arr.\n\n\nnp.log10(arr)\nThe base-10 logarithm of each element in arr.\n\n\nnp.sort(arr)\nSort the elements in arr.\n\n\n\nRefer to the lecture notebook for example call expressions involving these NumPy functions. Refer to the Data 6 reference sheet for all functions we will expect you to be familiar with (not memorize!) in this course.",
    "crumbs": [
      "L03: Arrays",
      "NumPy and Array Functions"
    ]
  },
  {
    "objectID": "03-arrays/numpy.html#external-reading",
    "href": "03-arrays/numpy.html#external-reading",
    "title": "NumPy and Array Functions",
    "section": "External Reading",
    "text": "External Reading\n\n(mentioned in notes) Computational and Inferential Thinking, Ch 5.1\n(optional) Tomas Beuzen. Python Programming for Data Science Ch 1.2.",
    "crumbs": [
      "L03: Arrays",
      "NumPy and Array Functions"
    ]
  },
  {
    "objectID": "03-arrays/numpy.html#references",
    "href": "03-arrays/numpy.html#references",
    "title": "NumPy and Array Functions",
    "section": "References",
    "text": "References\nU.S. Census Bureau, “EDUCATIONAL ATTAINMENT,” American Community Survey 5-Year Estimates Subject Tables, Table S1501, 2020, https://data.census.gov/table/ACSST5Y2020.S1501?q=2020+education&t=Age+and+Sex:Educational+Attainment&g=010XX00US$0400000, accessed on August 24, 2025.",
    "crumbs": [
      "L03: Arrays",
      "NumPy and Array Functions"
    ]
  },
  {
    "objectID": "five-things.html",
    "href": "five-things.html",
    "title": "Five things you need to know to pass this class",
    "section": "",
    "text": "Here they are, in no particular order.",
    "crumbs": [
      "5 Things to Know"
    ]
  },
  {
    "objectID": "five-things.html#read-instructions-carefully",
    "href": "five-things.html#read-instructions-carefully",
    "title": "Five things you need to know to pass this class",
    "section": "1) Read Instructions Carefully",
    "text": "1) Read Instructions Carefully\nYou must carefully read the instructions provided for each assignment. Read, not skim! They contain information vital for the completion of the assigned work.",
    "crumbs": [
      "5 Things to Know"
    ]
  },
  {
    "objectID": "five-things.html#do-all-the-assigned-work",
    "href": "five-things.html#do-all-the-assigned-work",
    "title": "Five things you need to know to pass this class",
    "section": "2) Do all the assigned work",
    "text": "2) Do all the assigned work\nThis course is a very hands-on course and requires many hours of practical work outside class and lab. It also requires reviewing ALL the learning materials shared on this website and on the course website.\nIt goes without saying that you should do all the assigned work: attend lecture and section, review the practice material discussed in lab, and of course do all HW assignments. Keep in mind that the activities and assignments build upon earlier work. So it’s important not to fall behind and avoid leaving gaps along the semester.\nOn the technical side, you should have your own computer, (good) internet connection, and also know how to record a video of both 1) computer’s screen capture, and 2) face capture (e.g. a zoom recording makes this easy). We will provide more detailed instructions about the required tools as we move forward with the semester.",
    "crumbs": [
      "5 Things to Know"
    ]
  },
  {
    "objectID": "five-things.html#no-need-to-memorize-all-commands",
    "href": "five-things.html#no-need-to-memorize-all-commands",
    "title": "Five things you need to know to pass this class",
    "section": "3) No need to memorize all commands",
    "text": "3) No need to memorize all commands\nDo you need to memorize all commands? No! We don’t expect that you memorize all commands. In fact, you can find a series of cheatsheets that you can (and should) use at all times (even during quizzes and tests). We will release these soon.\nHowever, we do expect that you learn the most common types of functions in Python and Jupyter notebooks: e.g. print(), ?, etc. More important, we expect that you understand the “logic” and working principles of certain data objects, common programming structures, good practices, etc.",
    "crumbs": [
      "5 Things to Know"
    ]
  },
  {
    "objectID": "five-things.html#study-for-tests",
    "href": "five-things.html#study-for-tests",
    "title": "Five things you need to know to pass this class",
    "section": "4) Study for tests",
    "text": "4) Study for tests\nThe exams are a way to test your understanding of the various concepts presented in the course. The exams are also a way to test whether you are really doing all the practical work by yourself.\nIn theory, students who do an honest effort in completing all the assignments (e.g. writing commands, understanding commands, learning the syntax, etc) should be able to get a passing score in these tests.",
    "crumbs": [
      "5 Things to Know"
    ]
  },
  {
    "objectID": "five-things.html#what-else-do-you-recommend-to-succeed-in-this-course",
    "href": "five-things.html#what-else-do-you-recommend-to-succeed-in-this-course",
    "title": "Five things you need to know to pass this class",
    "section": "5) What else do you recommend to succeed in this course?",
    "text": "5) What else do you recommend to succeed in this course?\nThis one is hard to answer, in part because it depends on your personal definition of “success”. Simply put, I don’t think there’s a unique recipe for success. Instead, let me answer this question by telling you about the typical factors that may negatively affect your performance:\n\nnot attending lecture and/or lab,\nnot submitting assignments,\nlooking at the solutions of other students and “inadvertently” copy them,\npoor studying/working habits\nbeing afraid/scared/ashamed of asking the teaching staff for help\nyou’ve been doing work of passing quality and you cannot complete the course due to circumstances beyond your control\n\nDon’t underestimate the second to last item. Coding (in any programming language) can be extremely frustrating at times. You would be surprised to hear my collection of student stories about all sorts of bugs, typos, misspellings, and the like, that gave them a fair amount of frustration. So please, ask the teaching staff for help in a timely and respectful manner.\nAs for the last item, please let us know you’ve been affected by circumstances beyond your control as soon as possible. While we cannot guarantee any outcome, we will do what is within our reach to help you in this class.",
    "crumbs": [
      "5 Things to Know"
    ]
  },
  {
    "objectID": "five-things.html#acknowledgments",
    "href": "five-things.html#acknowledgments",
    "title": "Five things you need to know to pass this class",
    "section": "Acknowledgments",
    "text": "Acknowledgments\nThe original version of this text was written by Gaston Sanchez for Stat 133 Spring 2025.",
    "crumbs": [
      "5 Things to Know"
    ]
  },
  {
    "objectID": "02-datatypes/rates-incidence.html",
    "href": "02-datatypes/rates-incidence.html",
    "title": "Case Study: Rates",
    "section": "",
    "text": "How can Python help us understand numerical data? Let’s explore a case study in the context of a public health data report!",
    "crumbs": [
      "L02: Data Types",
      "Application: Rates and Incidence"
    ]
  },
  {
    "objectID": "02-datatypes/rates-incidence.html#definitions",
    "href": "02-datatypes/rates-incidence.html#definitions",
    "title": "Case Study: Rates",
    "section": "Definitions",
    "text": "Definitions\nBefore we dive into the case study, let’s describe some key data science terms: tables and rates.\n\nTables\nIn this course, we will describe many examples of data structures, which are ways to store and organize data, often for computational processing. One of the most common examples is a table:\n\nA rectangular data structure composed of rows and columns. Columns are labeled.\n\nWe will expand on this definition of table over the next few lectures.\n\n\nRates\nA rate is a measure of one quantity per unit of some other quantity. A few examples: 6 miles per hour, 4.8 parts per million. Rates are often expressed as a percentage, fraction with a numerator and a denominator, or a decimal number.\nData scientists often use and define rates to compare different situations or events. For example, it is easy to compare 60 mph to 40 mph, but harder to compare 15 mph to 10 km/s. Occasionally, it’s unclear why a rate is necessary until we dig into the data. Let’s inspect a particular case below.",
    "crumbs": [
      "L02: Data Types",
      "Application: Rates and Incidence"
    ]
  },
  {
    "objectID": "02-datatypes/rates-incidence.html#rates-incidence",
    "href": "02-datatypes/rates-incidence.html#rates-incidence",
    "title": "Case Study: Rates",
    "section": "Rates: Incidence",
    "text": "Rates: Incidence\nThe U.S. Center for Disease Control (CDC) regularly examines disease data nationwide and publishes reports for the public. These reports help inform public health policy and consequent responses to disease epidemics at the national and global levels. One such disease is Tuberculosis (TB), a highly contagious respiratory infection.\nConsider the reported U.S. TB cases in 2021 (CDC Morbidity and Mortality Weekly Report (MMWR) 03/25/2022, source). The report summary states:\n\nReported TB incidence (cases per 100,000 persons) increased 9.4%, from 2.2 during 2020 to 2.4 during 2021 but was lower than incidence during 2019 (2.7). Increases occurred among both U.S.-born and non–U.S.-born persons.\n\nWhile the report discusses possible interpretations as to why this occurred, let’s focus on this particular numeric summary by answering the following questions:\n\nDefine: What is incidence? Incidence is a rate. Why use this rate for comparison, and not the total number of cases?\nVerify: Consider Table 1. How can we use Python to verify that the TB incidence column can be computed from the TB cases column? How can use Python to verify the reported percent change in incidence?\n\n\n\n\n\n\n\nLook at the tabular data\n\n\n\nThere is a lot of information on the CDC website—more than we can cover in this example. Our main goal is to understand the numeric data presented in the summary statement quoted above. There are two sources of information relevant to us:\n\nThe quote above, taken from the webpage summary.\nTable 1, located at the bottom of the webpage.\n\nBefore continuing, try reading Table 1. Hint: Read the footnotes!",
    "crumbs": [
      "L02: Data Types",
      "Application: Rates and Incidence"
    ]
  },
  {
    "objectID": "02-datatypes/rates-incidence.html#define-incidence",
    "href": "02-datatypes/rates-incidence.html#define-incidence",
    "title": "Case Study: Rates",
    "section": "Define: Incidence",
    "text": "Define: Incidence\nIn epidemiology, incidence is a rate that measures the number of cases of a disease in a population, within a given time period, as shown in Equation 1:\n\\[ \\text{TB incidence} = \\frac{\\text{\\# TB cases}}{\\text{population}} \\tag{1}\\]\nThis rate can be interpreted as the number of cases (i.e., the number of reported individuals diagnosed with TB) per person (the number of people in the population).\nWhy not use TB cases? Why scale by population size? Based on the CDC summary, the intention of this report was to highlight a drop in TB cases in 2020, compared to adjacent years. The report accomplished this by reporting and comparing the TB incidence in 2019, 2020, and 2021.\nSimply reporting the total number of TB cases has several pitfalls, including the inability to compare the prevalence of TB in different scenarios.\nWhile the precise explanation requires a strong understanding of probability (see Data 140), intuitively, incidence is a proxy for the prevalence, or rate of occurrence, of TB cases occurring in a population. As an example, Hawaii reported much fewer TB cases than California, but had a much higher TB incidence, across all three years. After all, Hawaii has a much smaller population than California (1.5 million vs. 39 million), so each case of reported TB matters more.\n\nNext, let’s consider how the CDC defines TB incidence in this report. From the Table 1 footnote:\n\nCases per 100,000 persons using midyear population estimates from the U.S. Census Bureau.\n\nIncorrect interpretation. First, consider the following (incorrect) ratio in Equation 2:\n\\[ \\frac{\\text{\\# TB cases}}{100,000 \\text{ persons}} \\tag{2}\\]\nThis rate does not account for different states having different population sizes. In other words, the population denominator in Equation 1 has disappeared.\nCorrect interpretation. Incidence is a measure of the rate of occurrence of a disease across a population. The Table 1 footnote translates Equation 1 to consider different ways of measuring the population.\nIf TB incidence in Equation 1 was defined as number of TB cases per person, we scale up by 100,000 to define TB cases per group, where the group is defined as 100,000 persons. \\[\n\\frac{\\text{cases}}{\\text{1 person}} \\times \\frac{100,000 \\text{ persons}}{\\text{group}}\n\\]\nThe CDC definition of TB incidence is therefore represented by Equation 3:\n\\[\n\\frac{\\text{\\# TB cases}}{\\# \\text{people in population}} \\times 100,000\n\\tag{3}\\]",
    "crumbs": [
      "L02: Data Types",
      "Application: Rates and Incidence"
    ]
  },
  {
    "objectID": "02-datatypes/rates-incidence.html#verifying-incidence",
    "href": "02-datatypes/rates-incidence.html#verifying-incidence",
    "title": "Case Study: Rates",
    "section": "Verifying Incidence",
    "text": "Verifying Incidence\nTo compute TB incidence, we need to source two pieces of data: the number of TB cases from Table 1, and the midyear population estimates from the U.S. Census. For your convenience, we’ve included a few data points on each U.S. jurisdiction in the two tables below (click to expand).\n\n\n\n\n\n\nSnippet of Table 1, U.S. CDC\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNo. of TB cases\nTB incidence\n\n\nU.S. jurisdiction\n2019\n2020\n2021\n2019\n2020\n2021\n\n\n\n\nTotal\n8,900\n7,173\n7,860\n2.71\n2.16\n2.37\n\n\nAlabama\n87\n72\n92\n1.77\n1.43\n1.83\n\n\nAlaska\n58\n58\n58\n7.91\n7.92\n7.92\n\n\nArizona\n183\n136\n129\n2.51\n1.89\n1.77\n\n\nArkansas\n64\n59\n69\n2.12\n1.96\n2.28\n\n\nCalifornia\n2,111\n1,706\n1,750\n5.35\n4.32\n4.46\n\n\n…\n…\n…\n…\n…\n…\n…\n\n\n\n\n\n\n\n\n\n\n\n\nSnippet of midyear population estimates, U.S. Census Bureau\n\n\n\n\n\nHere are the population estimates for the corresponding years, sourced from the U.S. Census Bureau:\n\n\n\n\n\n\n\n\n\nU.S. jurisdiction\n2019 pop\n2020 pop\n2021 pop\n\n\n\n\nTotal\n328,239,523\n331,501,080\n331,893,745\n\n\nAlabama\n4,903,185\n5,024,803\n5,039,877\n\n\nCalifornia\n39,512,223\n39,499,738\n39,237,836\n\n\n\n\n\n\nLet’s use Equation 3 to compute TB incidence in the U.S. in 2020:\n\n7173 / 331501080 * 100000\n\n2.1637938555132306\n\n\nRounding to the nearest tenth spot, we get the original quoted rate, 2.2!\nThe previous cell makes little sense without the prior intense exposition. Python names and comments make everything more understandable:\n\n# compute incidence as cases per 100k\npop_2020 = 331501080\ntb_2020 = 7173\nincidence_2020 = tb_2020 / pop_2020 * 100000\nincidence_2020\n\n2.1637938555132306\n\n\nIf we need to verify all incidences in the 2020 column, you might be tempted to edit the cell above, manually inputting the values for each U.S. jurisdiction. This approach is both tedious and error-prone (what if you input incorrect numbers); in a few lectures, we will show you a much easier way using data structures: arrays and tables.",
    "crumbs": [
      "L02: Data Types",
      "Application: Rates and Incidence"
    ]
  },
  {
    "objectID": "02-datatypes/rates-incidence.html#references",
    "href": "02-datatypes/rates-incidence.html#references",
    "title": "Case Study: Rates",
    "section": "References",
    "text": "References\nFilardo TD, Feng P, Pratt RH, Price SF, Self JL. Tuberculosis — United States, 2021. MMWR Morb Mortal Wkly Rep 2022;71:441–446. DOI: http://dx.doi.org/10.15585/mmwr.mm7112a1\nU.S. Census, 2024. State Population Totals and Components of Change: 2010-2019, https://www.census.gov/data/tables/time-series/demo/popest/2010s-state-total.html\nU.S. Census, 2025. State Population Totals and Components of Change: 2020-2024. https://www.census.gov/data/tables/time-series/demo/popest/2020s-state-total.html.",
    "crumbs": [
      "L02: Data Types",
      "Application: Rates and Incidence"
    ]
  },
  {
    "objectID": "08-histograms/index.html",
    "href": "08-histograms/index.html",
    "title": "Histograms and Ranges",
    "section": "",
    "text": "There is an existing chapter that fully describes histograms. We highly recommend you read the textbook, then review the Data 6 lecture notebook.",
    "crumbs": [
      "L08: Histograms"
    ]
  },
  {
    "objectID": "08-histograms/index.html#ranges",
    "href": "08-histograms/index.html#ranges",
    "title": "Histograms and Ranges",
    "section": "Ranges",
    "text": "Ranges\nnp.arange is a NumPy function useful for producing sequences of equally spaced numbers. Read the chapter for more details.\n\n\n\n\n\n\nRead Inferential Thinking\n\n\n\nRead Ch 5.2, which describes the np.arange function.\n\n\nBefore continuing, make sure that you:\n\nKnow that the full function signature of np.arange(start, end, step).\nKnow what the default arguments for start and/or step are when you pass in one or two arguments.\nRemember that a range always includes its start value, but does not include its end value. It counts up by step, and it stops before it gets to the end.",
    "crumbs": [
      "L08: Histograms"
    ]
  },
  {
    "objectID": "08-histograms/index.html#histograms",
    "href": "08-histograms/index.html#histograms",
    "title": "Histograms and Ranges",
    "section": "Histograms",
    "text": "Histograms\n\n\n\n\n\n\nRead Inferential Thinking\n\n\n\nRead Ch 7.2, which describes histograms in detail.\n\n\nBefore continuing, make sure that you:\n\nUnderstand terminology related to histograms:\n\nBins (lower bound, upper bound)\nDensity, area, proportion.\n\nCan use the area principle to explain histogram shape and bar density, area, and dimensions.\nCan compute area and proportion from bar dimensions.\nCan determine use cases for using bar charts over histograms, and vice versa.\nCan use the hist method and specify the optional parameter density as True or False",
    "crumbs": [
      "L08: Histograms"
    ]
  },
  {
    "objectID": "08-histograms/index.html#lecture-notebook",
    "href": "08-histograms/index.html#lecture-notebook",
    "title": "Histograms and Ranges",
    "section": "Lecture Notebook",
    "text": "Lecture Notebook\nThis notebook mostly covers the hist Table method in the datascience package. See the Data 6 Python Reference for full information.\ntbl.hist(column): This table method has many optional arguments, but we highlight the most important ones here:\n\nbins: Specify bounds of bins, as an array. All but the last element of the array specifies bin lower bounds; the last element specifies the upper bound of the rightmost bin. If not specified, the default produces 10 equally spaced bins.\ndensity: Boolean value (True or False). True by default calculates height as percent per unit. If False, calculates height as count in bin.",
    "crumbs": [
      "L08: Histograms"
    ]
  },
  {
    "objectID": "08-histograms/index.html#external-reading",
    "href": "08-histograms/index.html#external-reading",
    "title": "Histograms and Ranges",
    "section": "External Reading",
    "text": "External Reading\n\n(mentioned in notes) Computational and Inferential Thinking, Ch 5.2\n(mentioned in notes) Computational and Inferential Thinking, Ch 2.1",
    "crumbs": [
      "L08: Histograms"
    ]
  },
  {
    "objectID": "04-tables/exercises.html",
    "href": "04-tables/exercises.html",
    "title": "Table Exercises",
    "section": "",
    "text": "We work with the schools table from before.\nfrom datascience import *\nimport numpy as np\n\nschools = Table.read_table('data/cal_unis.csv')\nschools.show(3)\n\n\n\n\nName\nInstitution\nCity\nCounty\nEnrollment\nFounded\n\n\n\n\nCalifornia State Polytechnic University, Humboldt\nCSU\nArcata\nHumboldt\n6025\n1913\n\n\nCalifornia State University, Bakersfield\nCSU\nBakersfield\nKern\n9613\n1965\n\n\nUniversity of California, Berkeley\nUC\nBerkeley\nAlameda\n45307\n1869\n\n\n\n\n... (29 rows omitted)\nPull up the Python Reference and try these exercises yourself! They are roughly in order of increasing difficulty.",
    "crumbs": [
      "L04: Table Fundamentals",
      "Table Exercises"
    ]
  },
  {
    "objectID": "04-tables/exercises.html#exercise-1-variable-names",
    "href": "04-tables/exercises.html#exercise-1-variable-names",
    "title": "Table Exercises",
    "section": "Exercise 1: Variable names",
    "text": "Exercise 1: Variable names\nHow do we get all the column labels of schools?\n\n\n\n\n\n\nShow Answer\n\n\n\n\n\n\nschools.labels\n\n('Name', 'Institution', 'City', 'County', 'Enrollment', 'Founded')",
    "crumbs": [
      "L04: Table Fundamentals",
      "Table Exercises"
    ]
  },
  {
    "objectID": "04-tables/exercises.html#exercise-2-reorder-columns",
    "href": "04-tables/exercises.html#exercise-2-reorder-columns",
    "title": "Table Exercises",
    "section": "Exercise 2: Reorder columns",
    "text": "Exercise 2: Reorder columns\nHow do we reorder the columns, as below?\n\n\n\n\n\n\n\n\n\n\n\nName\nFounded\nInstitution\nCity\nCounty\nEnrollment\n\n\n\n\n…\n…\n…\n…\n…\n…\n\n\n\nHint: use one of select, drop, or with_columns.\n\n\n\n\n\n\nShow Answer\n\n\n\n\n\n\nschools.select(\n  \"Name\", \"Founded\",\n  \"Institution\", \"City\",\n  \"County\", \"Enrollment\"\n)\n\n\n\n\nName\nFounded\nInstitution\nCity\nCounty\nEnrollment\n\n\n\n\nCalifornia State Polytechnic University, Humboldt\n1913\nCSU\nArcata\nHumboldt\n6025\n\n\nCalifornia State University, Bakersfield\n1965\nCSU\nBakersfield\nKern\n9613\n\n\nUniversity of California, Berkeley\n1869\nUC\nBerkeley\nAlameda\n45307\n\n\nCalifornia State University Channel Islands\n2002\nCSU\nCamarillo\nVentura\n6128\n\n\nCalifornia State University, Dominguez Hills\n1960\nCSU\nCarson\nLos Angeles\n16426\n\n\nCalifornia State University, Chico\n1887\nCSU\nChico\nButte\n14183\n\n\nUniversity of California, Davis\n1905\nUC\nDavis\nYolo\n39679\n\n\nCalifornia State University, Fresno\n1911\nCSU\nFresno\nFresno\n23999\n\n\nCalifornia State University, Fullerton\n1957\nCSU\nFullerton\nOrange\n40386\n\n\nCalifornia State University, East Bay\n1957\nCSU\nHayward\nAlameda\n13673\n\n\n\n\n... (22 rows omitted)",
    "crumbs": [
      "L04: Table Fundamentals",
      "Table Exercises"
    ]
  },
  {
    "objectID": "04-tables/exercises.html#exercise-3-filtering",
    "href": "04-tables/exercises.html#exercise-3-filtering",
    "title": "Table Exercises",
    "section": "Exercise 3: Filtering",
    "text": "Exercise 3: Filtering\n\n\n\n\n\n\nThe schools table for reference, if you need it\n\n\n\n\n\n\nschools.show(3)\n\n\n\n\nName\nInstitution\nCity\nCounty\nEnrollment\nFounded\n\n\n\n\nCalifornia State Polytechnic University, Humboldt\nCSU\nArcata\nHumboldt\n6025\n1913\n\n\nCalifornia State University, Bakersfield\nCSU\nBakersfield\nKern\n9613\n1965\n\n\nUniversity of California, Berkeley\nUC\nBerkeley\nAlameda\n45307\n1869\n\n\n\n\n... (29 rows omitted)\n\n\n\n\n\n\nHow do we get a table with only UC schools?\n\n\n\n\n\n\n\nShow Answer\n\n\n\n\n\n\nschools.where(\"Institution\", \"UC\")\n\n\n\n\nName\nInstitution\nCity\nCounty\nEnrollment\nFounded\n\n\n\n\nUniversity of California, Berkeley\nUC\nBerkeley\nAlameda\n45307\n1869\n\n\nUniversity of California, Davis\nUC\nDavis\nYolo\n39679\n1905\n\n\nUniversity of California, Irvine\nUC\nIrvine\nOrange\n35937\n1965\n\n\nUniversity of California, Los Angeles\nUC\nLos Angeles\nLos Angeles\n46430\n1882\n\n\nUniversity of California, Merced\nUC\nMerced\nMerced\n9110\n2005\n\n\nUniversity of California, Riverside\nUC\nRiverside\nRiverside\n26809\n1954\n\n\nUniversity of California, San Diego\nUC\nSan Diego\nSan Diego\n42006\n1960\n\n\nUniversity of California, Santa Barbara\nUC\nSanta Barbara\nSanta Barbara\n26420\n1891\n\n\nUniversity of California, Santa Cruz\nUC\nSanta Cruz\nSanta Cruz\n19478\n1965\n\n\n\n\n\n\n\n\n\nHow do we get a table with all the schools in Los Angeles?\n\n\n\n\n\n\n\nShow Answer\n\n\n\n\n\n\nschools.where(\"City\", \"Los Angeles\")\n\n\n\n\nName\nInstitution\nCity\nCounty\nEnrollment\nFounded\n\n\n\n\nUniversity of California, Los Angeles\nUC\nLos Angeles\nLos Angeles\n46430\n1882\n\n\nCalifornia State University, Los Angeles\nCSU\nLos Angeles\nLos Angeles\n26460\n1947",
    "crumbs": [
      "L04: Table Fundamentals",
      "Table Exercises"
    ]
  },
  {
    "objectID": "04-tables/exercises.html#exercise-4-rename-columns",
    "href": "04-tables/exercises.html#exercise-4-rename-columns",
    "title": "Table Exercises",
    "section": "Exercise 4: Rename Columns",
    "text": "Exercise 4: Rename Columns\nHow do we update schools such that the column Name is renamed University? Hint: Check out the method relabeled.\n\n\n\n\n\n\nShow Answer\n\n\n\n\n\n\nschools = schools.relabeled(\"Name\", \"University\")\nschools.show(3)\n\n\n\n\nUniversity\nInstitution\nCity\nCounty\nEnrollment\nFounded\n\n\n\n\nCalifornia State Polytechnic University, Humboldt\nCSU\nArcata\nHumboldt\n6025\n1913\n\n\nCalifornia State University, Bakersfield\nCSU\nBakersfield\nKern\n9613\n1965\n\n\nUniversity of California, Berkeley\nUC\nBerkeley\nAlameda\n45307\n1869\n\n\n\n\n... (29 rows omitted)\n\n\n\n\n\nThere are many ways to approach a problem. Suppose you didn’t know the method relabeled existed:\n\n\n\n\n\n\nAlternate Answer\n\n\n\n\n\n\nschools = schools.with_column(\"University\", schools.column(\"Name\")).drop(\"Name\")\nschools.show(3)\n\n\n\n\nInstitution\nCity\nCounty\nEnrollment\nFounded\nUniversity\n\n\n\n\nCSU\nArcata\nHumboldt\n6025\n1913\nCalifornia State Polytechnic University, Humboldt\n\n\nCSU\nBakersfield\nKern\n9613\n1965\nCalifornia State University, Bakersfield\n\n\nUC\nBerkeley\nAlameda\n45307\n1869\nUniversity of California, Berkeley\n\n\n\n\n... (29 rows omitted)\n\n\nQuestions for you as you read the above code:\n\nWhat methods are being chained together here? Which is executed first, with_column or drop?\nWhen is the column method being called?\nWhat would happen if you switched the two methods? (try it out)\nWhy is University now the last column?",
    "crumbs": [
      "L04: Table Fundamentals",
      "Table Exercises"
    ]
  },
  {
    "objectID": "04-tables/exercises.html#exercise-5-debugging-show",
    "href": "04-tables/exercises.html#exercise-5-debugging-show",
    "title": "Table Exercises",
    "section": "Exercise 5: Debugging show",
    "text": "Exercise 5: Debugging show\nThe following cells exhibit a tricky, but potentially common bug. First, check out the Python Reference to understand what show does.\n\nschools = Table.read_table('data/cal_unis.csv')\n\n\nschools = schools.show(3)\n\n\n\n\nName\nInstitution\nCity\nCounty\nEnrollment\nFounded\n\n\n\n\nCalifornia State Polytechnic University, Humboldt\nCSU\nArcata\nHumboldt\n6025\n1913\n\n\nCalifornia State University, Bakersfield\nCSU\nBakersfield\nKern\n9613\n1965\n\n\nUniversity of California, Berkeley\nUC\nBerkeley\nAlameda\n45307\n1869\n\n\n\n\n... (29 rows omitted)\n\n\n\nschools = schools.show(4)\n\n\n---------------------------------------------------------------------------\nAttributeError                            Traceback (most recent call last)\nCell In[12], line 1\n----&gt; 1 schools = schools.show(4)\n\nAttributeError: 'NoneType' object has no attribute 'show'\n\n\n\nLike print, show is for display purposes. It does not return anything—i.e., it returns None. The second cell above therefore assigns schools to None!\nDespite this, show—just like print—is useful when you want to display intermediate output for debugging purposes.\n\nschools = Table.read_table('data/cal_unis.csv')\nschools.show(3) # just the first three rows\nschools = schools.relabeled(\"Name\", \"University\")\nschools.show(3) # and again\nschools = schools.with_columns(\"Name\", \"City\")\nschools         # the last evaluated value in a cell\n                # is displayed by default\n\n\n\n\nName\nInstitution\nCity\nCounty\nEnrollment\nFounded\n\n\n\n\nCalifornia State Polytechnic University, Humboldt\nCSU\nArcata\nHumboldt\n6025\n1913\n\n\nCalifornia State University, Bakersfield\nCSU\nBakersfield\nKern\n9613\n1965\n\n\nUniversity of California, Berkeley\nUC\nBerkeley\nAlameda\n45307\n1869\n\n\n\n\n... (29 rows omitted)\n\n\n\n\n\nUniversity\nInstitution\nCity\nCounty\nEnrollment\nFounded\n\n\n\n\nCalifornia State Polytechnic University, Humboldt\nCSU\nArcata\nHumboldt\n6025\n1913\n\n\nCalifornia State University, Bakersfield\nCSU\nBakersfield\nKern\n9613\n1965\n\n\nUniversity of California, Berkeley\nUC\nBerkeley\nAlameda\n45307\n1869\n\n\n\n\n... (29 rows omitted)\n\n\n\n\n\nUniversity\nInstitution\nCity\nCounty\nEnrollment\nFounded\nName\n\n\n\n\nCalifornia State Polytechnic University, Humboldt\nCSU\nArcata\nHumboldt\n6025\n1913\nCity\n\n\nCalifornia State University, Bakersfield\nCSU\nBakersfield\nKern\n9613\n1965\nCity\n\n\nUniversity of California, Berkeley\nUC\nBerkeley\nAlameda\n45307\n1869\nCity\n\n\nCalifornia State University Channel Islands\nCSU\nCamarillo\nVentura\n6128\n2002\nCity\n\n\nCalifornia State University, Dominguez Hills\nCSU\nCarson\nLos Angeles\n16426\n1960\nCity\n\n\nCalifornia State University, Chico\nCSU\nChico\nButte\n14183\n1887\nCity\n\n\nUniversity of California, Davis\nUC\nDavis\nYolo\n39679\n1905\nCity\n\n\nCalifornia State University, Fresno\nCSU\nFresno\nFresno\n23999\n1911\nCity\n\n\nCalifornia State University, Fullerton\nCSU\nFullerton\nOrange\n40386\n1957\nCity\n\n\nCalifornia State University, East Bay\nCSU\nHayward\nAlameda\n13673\n1957\nCity\n\n\n\n\n... (22 rows omitted)",
    "crumbs": [
      "L04: Table Fundamentals",
      "Table Exercises"
    ]
  },
  {
    "objectID": "06-variables-ii/deprecated-eda.html",
    "href": "06-variables-ii/deprecated-eda.html",
    "title": "Exploratory Data Analysis - consider removing",
    "section": "",
    "text": "If we’re not going to be studying causal relationships in this class, what will we be looking at? In this course we will look deeply at a core component of Data Science: Exploratory Data Analysis, or EDA."
  },
  {
    "objectID": "06-variables-ii/deprecated-eda.html#what-is-eda",
    "href": "06-variables-ii/deprecated-eda.html#what-is-eda",
    "title": "Exploratory Data Analysis - consider removing",
    "section": "What is EDA?",
    "text": "What is EDA?\nExploratory Data Analysis (EDA) is like detective work. As coined by the famous American statistician and mathematician John Tukey (we will discuss Tukey numbers soon):\n\nExploratory data analysis is an attitude, a state of flexibility, a willingness to look for those things that we believe are not there, as well as those that we believe to be there.\n\nMore formally, Exploratory Data Analysis (EDA) is the process of understanding a new dataset. It is an open-ended, informal analysis that involves familiarizing ourselves with the variables present in the data, discovering potential hypotheses, and identifying possible issues with the data.\n\nWhat is Data Wrangling?\nA process very closely related to EDA is data wrangling, often called data cleaning. Data wrangling is the process of transforming raw data to facilitate subsequent analysis and can address issues like unclear structure or formatting, missing or corrupted values, unit conversions, and so on.\nEDA and data cleaning are often thought of as an “infinite loop,” with each process driving the other.\nFortunately, in our classes we will try our best to work with “clean” datasets. These datasets will often have already been preprocessed for cleaner analysis, allowing us to explore and ask questions much more easily than if we were stuck with messier data."
  },
  {
    "objectID": "06-variables-ii/deprecated-index.html",
    "href": "06-variables-ii/deprecated-index.html",
    "title": "Intro to Social Science Research",
    "section": "",
    "text": "Theory\nHypothesis\nData Collection\nData Analysis\nResults\n(and back)"
  },
  {
    "objectID": "06-variables-ii/deprecated-index.html#the-scientific-method",
    "href": "06-variables-ii/deprecated-index.html#the-scientific-method",
    "title": "Intro to Social Science Research",
    "section": "",
    "text": "Theory\nHypothesis\nData Collection\nData Analysis\nResults\n(and back)"
  },
  {
    "objectID": "06-variables-ii/deprecated-index.html#theory-vs.-hypothesis",
    "href": "06-variables-ii/deprecated-index.html#theory-vs.-hypothesis",
    "title": "Intro to Social Science Research",
    "section": "Theory vs. Hypothesis",
    "text": "Theory vs. Hypothesis\nTheory: A systematic set of related statements that accord with a worldview.\nWhen (social) scientists do research, we use theories 3 different ways: * Theories prevent us from being taken in by flukes. * Theories help us make sense of observed patterns in ways that can suggest other possibilities. * Theories direct our research efforts, pointing us toward likely discoveries through empirical observation.\nElements of a scientific sociological theory: * Concepts * Relations between concepts * Causal mechanisms\nHypothesis: The empirical instantiation of a theory, i.e., a testable statement of a relationship involving two concepts. * Hypotheses therefore involve variables, which are representations that capture the different dimensions, categories, or levels of a concept.\ninsert images of concept 1, concept 2, variable 1, variable 2"
  },
  {
    "objectID": "01-intro/programming-basics.html",
    "href": "01-intro/programming-basics.html",
    "title": "Programming Basics",
    "section": "",
    "text": "Let’s get programming!\nThe first goal of this lecture is to demonstrate that some Python programming is as familiar as using a calculator, which you have likely used before.\nThe second goal is to introduce programming terminology—expressions, names, assignments, data types, etc. Learning this terminology is like learning grammar; these terms help us describe precisely what our programs are doing. Getting a handle on the terminology earlier will make it easier to describe the programming concepts. But it does take some memorization…!",
    "crumbs": [
      "L01: Introduction",
      "Programming Basics"
    ]
  },
  {
    "objectID": "01-intro/programming-basics.html#expressions",
    "href": "01-intro/programming-basics.html#expressions",
    "title": "Programming Basics",
    "section": "Expressions",
    "text": "Expressions\n\n\n\n\n\n\nRead Inferential Thinking\n\n\n\nRead Ch 3.1, which describes in detail how Python evaluates numeric expressions.\nBefore continuing, make sure you understand the terminology:\n\nexpression\nevaluation\nsyntax\noperators\noperands\n\n\n\n\nSummary of Numeric Operators\n\nCommon Python operators for numeric data types\n\n\n\n\n\n\n\n\nOperator\nSymbol\nExample Expression\nExpression Value\n\n\n\n\nAddition\n+\n2 + 3\n5\n\n\nSubtraction\n-\n15 - 4\n11\n\n\nMultiplication\n*\n-2 * 9\n-18\n\n\nDivision\n/\n15 / 2\n7.5\n\n\nInteger division(Cuts off remainder)\n//\n15 // 2\n7\n\n\nRemainder/Modulo\n%\n19 % 3\n1  (19 ÷ 3 = 6 Remainder 1)\n\n\nExponentiation\n**\n3 ** 2\n9",
    "crumbs": [
      "L01: Introduction",
      "Programming Basics"
    ]
  },
  {
    "objectID": "01-intro/programming-basics.html#names-and-call-expressions",
    "href": "01-intro/programming-basics.html#names-and-call-expressions",
    "title": "Programming Basics",
    "section": "Names and Call Expressions",
    "text": "Names and Call Expressions\n\n\n\n\n\n\nRead Inferential Thinking\n\n\n\nRead Ch 3.2 and Ch 3.3, which define names and call expressions.\nBefore continuing, make sure you understand the following:\n\nIn Python, a name can be given to a value using an assignment statement (which involves the assignment operator, =).\nA function is a named operation.\nA call expression invokes functions: a function is called on arguments, the argument values are passed into the function; the function then returns the final value to the larger call expression.\nIn Jupyter Notebooks, placing a ? after a function name will bring up a built-in description of that function.\nMost functions in Python are stored in modules (e.g., math) that can be imported via import then called with a dot (e.g., math.log(10)).\n\nTerminology:\n\nname\nassignment statement\nfunction, arguments, return value\ncall expression\n\n\n\nOne analogy for names is suitcase tags. Consider the following assignment statement:\n\nx = 3\n\nThis statement assigns the name x to the value 3. Like a suitcase tag, the name x is bound to the value 3.\n\nx\n\n3\n\n\nPython first evaluates the expression on the right-hand side of the = assignment operator, then binds the name x to the resulting value.\nThe below statement re-assigns the name x. Think of this as moving the suitcase tag to a different suitcase.\n\nx = 1 + 2 * 3 - 4 // 5\nx\n\n7\n\n\n\nA note on function calls\nWe will use the term function call interchangeably with call expression. You will see why when we talk more about defining our own functions\n\n\n\n\n\n\nAssignment statements are not expressions!\n\n\n\nStatements, when executed, do something. Expressions are a type of statement that, when executed, evaluate to values. In Jupyter Notebook code cells, if the last statement in a cell is not an expression, executing that last statement will not produce an output.\nThe first cell above does not end in an expression and therefore does not produce output. The second cell above has two statements; the last one is an expression, which is displayed in the cell output.\n\n\nConsider the below Python code:\n\nx = 4\ny = max(-2, 9) + x\n\nPython executes these two statements sequentially: first, Line 1 is an assignment statement that assigns the name x to 4. Then, Line 2 assigns the name y to the result of evaluating the right-hand-side.",
    "crumbs": [
      "L01: Introduction",
      "Programming Basics"
    ]
  },
  {
    "objectID": "01-intro/programming-basics.html#style-and-debugging",
    "href": "01-intro/programming-basics.html#style-and-debugging",
    "title": "Programming Basics",
    "section": "Style and Debugging",
    "text": "Style and Debugging\nYou may have noticed by now that Jupyter Notebooks are not just by computers to run code. Data scientists also use notebooks to understand how the code facilitates data analysis. We’d therefore like to establish two habits early:\n\nProgramming Style and Comments\nProgramming style involves writing code that is self-evident and understandable by other human beings. It is not sufficient for your code to be functional, i.e., perform the correct computation. It should also be readable and interpretable, for others to reuse and adapt.\nGood style practices can involve comments, meaningful names, whitespace, markdown cells interspersed with code cells, etc. Ch 3.2 of Inferential Thinking describes meaningful names; we discuss comments below.\nComments are used to explain what code does. Good programmers write code that is self-evident and use comments only where necessary.\nIn Python, you can write comments in the same line as code (“in-line” comments) using #:\n\n3 + 4     # simple arithmetic\n\n7\n\n\nThe above shows that both code and comments can be on the same line. In that line, anything after # is a comment and is not evaluated.\n\n\nDebugging\nDebugging is the process of fixing errors, i.e., bugs, in code. Debugging is a huge process and can take up the majority of your coding time.\nErrors in your code can pop up for any number of reasons! Here are some tips:\nTest your code early and often. If you write a lot of code before testing, then you have that much more code to debug and check. Instead, write a bit, test and check, and keep writing. This will require you to know how to decompose, or break down, your solutions into multiple steps that you can test individually. Once you’re comfortable with one step, move onto the next step. That’s right—it’s abstraction!_ Debugging your code will help you better understand computational concepts.\nGet familiar with reading error messages. When Python errors, it may give messages that are initially cryptic. Try the following.\n\nTake a deep breath.\nActually read the message—don’t just focus on what you think it might say. The error message will often include a meaningful name (e.g., SyntaxError or ZeroDivisionError), the line, and an arrow (marked by ^) to where the error occurred.\nThen, try to explain to yourself why this error occurred, before fixing the error. Many beginning programmers will want skip this step, opting to throw everything at the wall and then, once things are fixed, explain what happened. Instead, slow down and try to understand the problem first. Then the solution will be straightforward.\n\nTrace your code, but not at the expense of testing. Code tracing is the process of analyzing Python code, statement by statement and line by line, to understand program execution. This is a visual process and can sometimes be helped along by diagrams. Learning to trace code is learning procedural thinking—it is a key skill that helps break down exactly what your code is doing. Once you get the hang of tracing your code, you may be tempted to debug by just staring at your code—don’t do this! Instead, develop a healthy balance between developing an understanding of your code and testing if your code does what you expect.\n\n\nPractice with Errors\nTry these on for size:\nSyntax errors are errors in writing “valid” Python that cannot even create nonsensical Python code.\n\n3 ** / 4\n\n\n  Cell In[6], line 1\n    3 ** / 4\n         ^\nSyntaxError: invalid syntax\n\n\n\n\nWhy might the below code not error? (Hint: What does - represent?)\n\n9 ** - .5\n\n0.3333333333333333\n\n\nOnce you fix syntax errors, you may still encounter functionality errors, which can be errors caused during execution that leads to your program crashing. Here’s one common one:\n\n5 / 0\n\n\n---------------------------------------------------------------------------\nZeroDivisionError                         Traceback (most recent call last)\nCell In[8], line 1\n----&gt; 1 5 / 0\n\nZeroDivisionError: division by zero\n\n\n\n```",
    "crumbs": [
      "L01: Introduction",
      "Programming Basics"
    ]
  },
  {
    "objectID": "01-intro/programming-basics.html#summary",
    "href": "01-intro/programming-basics.html#summary",
    "title": "Programming Basics",
    "section": "Summary",
    "text": "Summary\nWe write code to tell our computer what to do.\n\nIn this class, and in many other settings, we use the Python programming language.\nWe write all of our code in Jupyter Notebooks, which allow us to see the output of our code in the same document in which we wrote our code. They’re commonly used in data science.\n\nBasic Python can be thought of as a calculator language, that takes expressions and computes their values.\n\nWe learned several different arithmetic operators, each of which can be used in an expression.\nPython stores integers and decimals in different ways.\n\nDebugging and good style make good programmers.\n\nComments help make our code more readable and sustainable.\nChoose names that are concise but descriptive.\nWhen our code has an error, the error message can help us fix it.\n\n\nCommon Python operators for numeric data types\n\n\n\n\n\n\n\n\nOperator\nSymbol\nExample Expression\nExpression Value\n\n\n\n\nAddition\n+\n2 + 3\n5\n\n\nSubtraction\n-\n15 - 4\n11\n\n\nMultiplication\n*\n-2 * 9\n-18\n\n\nDivision\n/\n15 / 2\n7.5\n\n\nInteger division(Cuts off remainder)\n//\n15 // 2\n7\n\n\nRemainder/Modulo\n%\n19 % 3\n1  (19 ÷ 3 = 6 Remainder 1)\n\n\nExponentiation\n**\n3 ** 2\n9",
    "crumbs": [
      "L01: Introduction",
      "Programming Basics"
    ]
  },
  {
    "objectID": "01-intro/programming-basics.html#external-reading",
    "href": "01-intro/programming-basics.html#external-reading",
    "title": "Programming Basics",
    "section": "External Reading",
    "text": "External Reading\n\n(mentioned in notes) Computational and Inferential Thinking, Ch 3.1, Ch 3.2, Ch 3.3\n(optional) Nick Parlante. Python Guide Python Math.",
    "crumbs": [
      "L01: Introduction",
      "Programming Basics"
    ]
  },
  {
    "objectID": "01-intro/deprecated-index.html",
    "href": "01-intro/deprecated-index.html",
    "title": "Course Introduction",
    "section": "",
    "text": "Consider this class as an application of computational thinking to data science. Naturally, Data Science can cover multiple contexts, and in this one we focus on social science contexts.\nThree pillars:\n\nComputer Science: Computational Thinking\nData Science: Exploratory data analysis.\nSocial Science: Computational Social Science\n\n(need to translate into learning objectives, but you get it)\nThis course can serve as a precursor to a statistics and inference course like Data 8 or as a standalone introduction to computational thinking for social scientists."
  },
  {
    "objectID": "01-intro/deprecated-index.html#what-will-i-learn-in-this-course",
    "href": "01-intro/deprecated-index.html#what-will-i-learn-in-this-course",
    "title": "Course Introduction",
    "section": "",
    "text": "Consider this class as an application of computational thinking to data science. Naturally, Data Science can cover multiple contexts, and in this one we focus on social science contexts.\nThree pillars:\n\nComputer Science: Computational Thinking\nData Science: Exploratory data analysis.\nSocial Science: Computational Social Science\n\n(need to translate into learning objectives, but you get it)\nThis course can serve as a precursor to a statistics and inference course like Data 8 or as a standalone introduction to computational thinking for social scientists."
  },
  {
    "objectID": "01-intro/deprecated-index.html#computational-thinking",
    "href": "01-intro/deprecated-index.html#computational-thinking",
    "title": "Course Introduction",
    "section": "Computational Thinking",
    "text": "Computational Thinking\n\nWhat is it?\n\nDefine computational thinking\n\nCommunications of the ACM, Jeanette Wing (PDF) and this follow-up article\n\nComputational Thinking is the thought processes involved in formulating problems and their solutions so that the solutions are represented in a form that can be effectively carried out by an information-processing agent (Cuny, Snyder, and Wing, 2010).\n\n\n\nAbstraction: A Core Concept\nWhat does this definition mean in the age of data?\n\nDefine abstraction\n\n\n“Abstraction gives us the power to scale and deal with complexity.” (Wing, 2010)"
  },
  {
    "objectID": "01-intro/deprecated-index.html#exploratory-data-analysis",
    "href": "01-intro/deprecated-index.html#exploratory-data-analysis",
    "title": "Course Introduction",
    "section": "Exploratory Data Analysis",
    "text": "Exploratory Data Analysis\nSee Data 8 book: Chapter 1\n\nData Science is about drawing useful conclusions from large and diverse data sets through exploration, prediction, and inference. Exploration involves identifying patterns in information. Prediction involves using information we know to make informed guesses about values we wish we knew. Inference involves quantifying our degree of certainty: will the patterns that we found in our data also appear in new observations? How accurate are our predictions? Our primary tools for exploration are visualizations and descriptive statistics, for prediction are machine learning and optimization, and for inference are statistical tests and models.\n\nFrom Data 8 (1.1 Introduction):\n\nData are descriptions of the world around us, collected through observation and stored on computers. Computers enable us to infer properties of the world from these descriptions. Data science is the discipline of drawing conclusions from data using computation."
  },
  {
    "objectID": "01-intro/deprecated-index.html#computational-social-science",
    "href": "01-intro/deprecated-index.html#computational-social-science",
    "title": "Course Introduction",
    "section": "Computational Social Science",
    "text": "Computational Social Science\nWhat does it mean to study social phenomena?\nResearch methodologies: quantitative data, qualitative data\nMost methods contain a mix of both\nHow Define experiments\nIn the real world"
  },
  {
    "objectID": "01-intro/deprecated-index.html#external-reading",
    "href": "01-intro/deprecated-index.html#external-reading",
    "title": "Course Introduction",
    "section": "External Reading",
    "text": "External Reading\n\nComputational and Inferential Thinking, Ch 1.1"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "About these Course Notes",
    "section": "",
    "text": "These course notes were compiled and created for Data 6: Introduction to Computational Thinking with Data Science and Society. This is an introductory, interdisciplinary course that focuses on the principles of computational thinking for the purposes exploratory data analysis and computational social science.",
    "crumbs": [
      "Home / About"
    ]
  },
  {
    "objectID": "index.html#disclaimer-is-this-a-textbook",
    "href": "index.html#disclaimer-is-this-a-textbook",
    "title": "About these Course Notes",
    "section": "Disclaimer: Is this a textbook?",
    "text": "Disclaimer: Is this a textbook?\nThese lecture notes are exactly that—lecture notes. That means that while they may follow the beats of class, they may not contain all the context needed to fully understand the course material and its theoretically underpinnings. This is a limitation of this curriculum being new and interdisciplinary. We source from many other foundational texts as needed; these textbook chapters are linked within the lecture notes themselves. You are expected to read these external links.",
    "crumbs": [
      "Home / About"
    ]
  },
  {
    "objectID": "index.html#course-links",
    "href": "index.html#course-links",
    "title": "About these Course Notes",
    "section": "Course Links",
    "text": "Course Links\ndata6.org: Syllabi and assignments for semesters at UC Berkeley.\nWe strongly recommend supplementing the notes presented here with the fantastic foundational texts prepared by UC Berkeley faculty instructors in Stat 20, Data 8, and CS 61A:\n\nData 8: Computational and Inferential Thinking: The Foundations of Data Science, 2nd Edition, by Ani Adhikari, John DeNero, David Wagner.\nCS 61A: Composing Programs, by John DeNero.\nStat 20: Course Notes by Andrew Bray.",
    "crumbs": [
      "Home / About"
    ]
  },
  {
    "objectID": "index.html#license",
    "href": "index.html#license",
    "title": "About these Course Notes",
    "section": "License",
    "text": "License\nThe contents of this work are licensed for free consumption under the following license: Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International",
    "crumbs": [
      "Home / About"
    ]
  },
  {
    "objectID": "index.html#acknowledgments",
    "href": "index.html#acknowledgments",
    "title": "About these Course Notes",
    "section": "Acknowledgments",
    "text": "Acknowledgments\nMany faculty instructors and teaching assistants have contributed to the creation of Data 6. Special thanks to Suraj Rampure for one of the early iterations of this course.\nThis material is based upon work supported by the U.S. National Science Foundation under award Nos. 2245877, 2245878, 2245879, and the California Learning Lab. Please read more about our DUBOIS project activities here: https://dubois-ctds.github.io/",
    "crumbs": [
      "Home / About"
    ]
  },
  {
    "objectID": "07-visualizations/encoding.html",
    "href": "07-visualizations/encoding.html",
    "title": "Encoding",
    "section": "",
    "text": "The theory behind creating effective visualizations lies in understanding encoding.",
    "crumbs": [
      "L07: Visualizations",
      "Encoding"
    ]
  },
  {
    "objectID": "07-visualizations/encoding.html#what-is-encoding",
    "href": "07-visualizations/encoding.html#what-is-encoding",
    "title": "Encoding",
    "section": "What is Encoding?",
    "text": "What is Encoding?\nEncoding is a mapping from a variable to a visual element.\nThink of encoding as the bridge between your data and what people see on the screen. It’s how we translate abstract numbers and categories into visual properties that humans can quickly understand.",
    "crumbs": [
      "L07: Visualizations",
      "Encoding"
    ]
  },
  {
    "objectID": "07-visualizations/encoding.html#basic-example-bar-charts",
    "href": "07-visualizations/encoding.html#basic-example-bar-charts",
    "title": "Encoding",
    "section": "Basic Example: Bar Charts",
    "text": "Basic Example: Bar Charts\nIn bar charts, length can visually encode a numerical variable.\n\n\n\n\n\n\n\nFigure 1: Bar Chart Example\n\n\n\n\nThis creates an intuitive mapping where the visual property (bar length) directly corresponds to the data value (average age).",
    "crumbs": [
      "L07: Visualizations",
      "Encoding"
    ]
  },
  {
    "objectID": "07-visualizations/encoding.html#multiple-variables-multiple-encodings",
    "href": "07-visualizations/encoding.html#multiple-variables-multiple-encodings",
    "title": "Encoding",
    "section": "Multiple Variables, Multiple Encodings",
    "text": "Multiple Variables, Multiple Encodings\nOther visualizations can include multiple variables encoded simultaneously.\n\n\n\n\n\n\n\nFigure 2: Multiple Encodings in a Scatter Plot\n\n\n\n\n\nQuick Check: How Many Variables?\nLook at the scatter plot above. How many different variables are being encoded? What visual properties are being used?\n\n\n\n\n\n\nAnswer\n\n\n\n\n\nFour variables are being encoded:\n\nX-position: Variable 1 (horizontal axis data)\nY-position: Variable 2 (vertical axis data)\n\nSize of the dot: Variable 3 (represented by different bubble sizes). Note that this is area. More later…\nColor of the dot: Variable 4 (represented by different colors/hues)",
    "crumbs": [
      "L07: Visualizations",
      "Encoding"
    ]
  },
  {
    "objectID": "07-visualizations/encoding.html#matching-encodings-to-variable-types",
    "href": "07-visualizations/encoding.html#matching-encodings-to-variable-types",
    "title": "Encoding",
    "section": "Matching Encodings to Variable Types",
    "text": "Matching Encodings to Variable Types\nAs we learned when studying variables, different variable types (numerical vs. categorical, discrete vs. continuous, ordinal vs. nominal) have different properties. When creating visualizations, we need to match our encoding choices to these variable types.\n\n\n\n\n\n\n\nFigure 3: Recall: Variable Types\n\n\n\n\n\n\n\n\n\n\nKey Principle\n\n\n\nNot all encodings work well with all variable types. The effectiveness depends on how well the visual property matches the data type.\n\n\nThe table below summarizes which visual encodings work best for different types of variables. Understanding these patterns will help you make better choices when designing your visualizations:\n\nEffectiveness of encodings by variable type\n\n\n\n\n\n\n\n\nVariable Type\nMost Effective Encodings\nLess Effective\nWhy\n\n\n\n\nNumerical\n• Position (X, Y)• Length• Area\n• Color hue• Shape\nHumans can judge quantity differences\n\n\nCategorical\n• Color hue• Shape• Position (grouping)\n• Length• Area\nAvoids implying false ordering",
    "crumbs": [
      "L07: Visualizations",
      "Encoding"
    ]
  },
  {
    "objectID": "07-visualizations/encoding.html#common-encoding-mistakes",
    "href": "07-visualizations/encoding.html#common-encoding-mistakes",
    "title": "Encoding",
    "section": "Common Encoding Mistakes",
    "text": "Common Encoding Mistakes\n\nWhat’s Wrong with This?\n\n\n\n\n\n\n\nFigure 4: Problematic Car Manufacturer Chart\n\n\n\n\nProblem: This graph implies that Swedish cars are “greater” than cars from other countries in some sense, when they’re not. If the variable is just “country of origin” (nominal categorical), using length encoding suggests an ordering that doesn’t exist.\n\n\n\n\n\n\nKey Principle\n\n\n\nThe variable type determines the types of plots (and hence, encodings) that are appropriate.",
    "crumbs": [
      "L07: Visualizations",
      "Encoding"
    ]
  },
  {
    "objectID": "07-visualizations/encoding.html#summary",
    "href": "07-visualizations/encoding.html#summary",
    "title": "Encoding",
    "section": "Summary",
    "text": "Summary\nEncodings translate variables into visual properties and serve as the fundamental building blocks of data visualization. However, not all encodings work for all variables - effectiveness depends on matching visual properties to data types. The power of encoding lies in how multiple variables can be encoded simultaneously, enabling rich, multidimensional visualizations. Success requires choosing encodings thoughtfully by considering your data types, audience, and message.\nOver the next few chapters, we’ll learn how to create several kinds of plots and learn when each encoding approach is most appropriate.",
    "crumbs": [
      "L07: Visualizations",
      "Encoding"
    ]
  },
  {
    "objectID": "05-variables/index.html",
    "href": "05-variables/index.html",
    "title": "Variables and Variable Types",
    "section": "",
    "text": "In data science, a variable is a measurable feature, attribute, and/or representation of a concept. It can have different values for different individuals.\nVariables are often empirical measurements; they are metrics that researchers create to approximate the specific dimensions of an abstract concept of a research question.\nThe process of going from a concept, which may often be unmeasurable, to a definition of variable(s) and methods of measurement of these variable(s) is a process broadly referred to as operationalization.\n\nExamples of operationalizing concepts into variables\n\n\n\n\n\n\nConcept\nVariable(s)\n\n\n\n\nEducation level\nHighest degree earned\n\n\nFamily background\nHousehold income, in thousands of dollarsHousehold sizeParental/guardian immigrant status\n\n\n\nFrom the above it should be evident that the operationalization process has pitfalls! Wikipedia describes this issue well with an example operationalizing the concept “anger.” One operation could be directly asking each participant their anger level. However, this self-evaluation process is not only subjective (individuals may define their own anger levels differently) but also often impractical (e.g., surveys or interviews may be impossible in an experimental setting).\nIn summary, operationalization necessarily highlights certain dimensions of a concept, constructing certain precise dimensions and measurements while hiding or obscuring others. However, operationalization makes research practical. Through operational definitions, it constructs procedures for measuring and collecting data. By translating immeasurable concepts into numeric or categorical quantities, one can then conduct statistical and graphical analysis on the data.",
    "crumbs": [
      "L05: Variables in Social Science"
    ]
  },
  {
    "objectID": "05-variables/index.html#variables-operationalization-of-concepts",
    "href": "05-variables/index.html#variables-operationalization-of-concepts",
    "title": "Variables and Variable Types",
    "section": "",
    "text": "In data science, a variable is a measurable feature, attribute, and/or representation of a concept. It can have different values for different individuals.\nVariables are often empirical measurements; they are metrics that researchers create to approximate the specific dimensions of an abstract concept of a research question.\nThe process of going from a concept, which may often be unmeasurable, to a definition of variable(s) and methods of measurement of these variable(s) is a process broadly referred to as operationalization.\n\nExamples of operationalizing concepts into variables\n\n\n\n\n\n\nConcept\nVariable(s)\n\n\n\n\nEducation level\nHighest degree earned\n\n\nFamily background\nHousehold income, in thousands of dollarsHousehold sizeParental/guardian immigrant status\n\n\n\nFrom the above it should be evident that the operationalization process has pitfalls! Wikipedia describes this issue well with an example operationalizing the concept “anger.” One operation could be directly asking each participant their anger level. However, this self-evaluation process is not only subjective (individuals may define their own anger levels differently) but also often impractical (e.g., surveys or interviews may be impossible in an experimental setting).\nIn summary, operationalization necessarily highlights certain dimensions of a concept, constructing certain precise dimensions and measurements while hiding or obscuring others. However, operationalization makes research practical. Through operational definitions, it constructs procedures for measuring and collecting data. By translating immeasurable concepts into numeric or categorical quantities, one can then conduct statistical and graphical analysis on the data.",
    "crumbs": [
      "L05: Variables in Social Science"
    ]
  },
  {
    "objectID": "05-variables/index.html#variables-in-tabular-data",
    "href": "05-variables/index.html#variables-in-tabular-data",
    "title": "Variables and Variable Types",
    "section": "Variables in Tabular Data",
    "text": "Variables in Tabular Data\nWe will see that as data scientists, we may often start with a dataset involving data that have already been collected for us. These datasets may have been constructed to answer specific questions (we’ll get into the research methods a bit later) and later shared to the broader public for transparency and reproducibility.\nIt is challenging to use another person’s data! The concepts have already been operationalized into variables; or the quality of data may vary widely; or multiple data sources may be needed to construct a reasonable first step towards a new research question. We’ll see more benefits and drawbacks in our examples this semester.\nFor now, we focus on variables as they exist in tabular data. In most of the tabular datasets we will examine, variables correspond to columns of features. Each row is a record of a datapoint, with different values of variables measured for that datapoint.\n\n\n\n\n\n\n\nFigure 1: Variables as columns.",
    "crumbs": [
      "L05: Variables in Social Science"
    ]
  },
  {
    "objectID": "05-variables/index.html#variable-types",
    "href": "05-variables/index.html#variable-types",
    "title": "Variables and Variable Types",
    "section": "Variable Types",
    "text": "Variable Types\nVariable types are different from Python data types like string, int, etc. Variable types help us make more informed decisions about how to measure and analyze variables: to make comparisons, create visualizations, and draw conclusions.\n\nNumerical/Quantitative Variable: a variable that takes numbers as values and where the magnitude of the number has a quantitative meaning.\n\nDiscrete: A numerical variable that takes values that have jumps between them.\nContinuous: A numerical variable that takes values on an interval of the real number line.\n\nCategorical/Qualitative Variable: a variable that takes categories as values. Each unique category is called a level.\n\nOrdinal: A categorical variable with levels that have a natural ordering.\nNominal: A categorical variable with levels that have no ordering.\n\n\nFigure 2 has examples of each variable type.\n\n\n\n\n\n\n\nFigure 2: Variable Types.\n\n\n\n\nWhat do we mean by “meaningful” arithmetic? From Stat 20:\n\nWhat unites both types of numerical variables is that the magnitude of the numbers have meaning and you can perform mathematical operations on them and the result also has meaning. It is possible and meaningful to talk about the average air temperature across three locations. It is also possible and meaningful to talk about the sum total number of people across ten households.\n\nJust because a variable has numbers for values does not make it numerical. Consider phone area codes: Berkeley is 510, San Francisco is 415, Palo Alto is 650, and so on. While area codes are numbers, you can’t do any arithmetic—comparative or otherwise—with them that “makes sense”: what does it mean to add area codes? have one area code (650) that is “larger” than another (510)? Area codes are therefore an example of a nominal categorical variable.\nVariable types are closely tied to measurement. Consider the following survey item from Stat 20, which describes a common ordinal categorical variable in opinion surveys:\n\nConsider the question:“Do you strongly agree, agree, feel neutral about, disagree, or strongly disagree with the following statement: Dogs are better than cats?” When you record answers to this question, you’re recording measurements on a categorical variable that takes values “strongly agree”, “agree”, “neutral”, “disagree”, “strongly disagree”. Those are the levels of the categorical variable and they have a natural ordering: “strongly agree” is closer to “agree” than it is to “strongly disagree”.\n\nThe above is an example of a Likert item. The researcher likely wanted a way to measure respondents’ sentiment of dogs and cats—an abstract concept. To do so, the researcher distributed a survey to respondents that operationalized this concept as a 5-point ordinal categorical variable. (There are of course other ways to measure this sentiment, such as by interviewing respondents and asking the open-ended question, “Dogs or cats?” but these yield a different set of possible responses and, consequently a different set of variables.)\nAside: What is a discrete variable type, really? If you think about it deeply from a Computer Science perspective, there will be cases in which continuous numerical variables may seem discrete: after all, price (in U.S. dollars) is counted to the cent, and so there are a discrete number of prices for, say, a pound of apples (we hope). However, in the data world we consider how the variable type may inform how we construct informative visualizations of the variable itself and compare it to other values. In short, variable typing informs our choice of using histograms vs. scatter plots, and so on. More later on this.",
    "crumbs": [
      "L05: Variables in Social Science"
    ]
  },
  {
    "objectID": "05-variables/index.html#external-reading",
    "href": "05-variables/index.html#external-reading",
    "title": "Variables and Variable Types",
    "section": "External Reading",
    "text": "External Reading\n\n(mentioned in notes) “Chapter 4: From Concepts to Models.” Elizabeth Heger Boyle, Deborah Carr, Benjamin Cornwell, Shelley Correll, Robert Crosnoe, Jeremy Freese, and Waters, Mary C. 2017. The Art and Science of Social Research. New York: W. W. Norton & Company.\n(mentioned in notes) Stat 20 notes, Taxonomy of Data",
    "crumbs": [
      "L05: Variables in Social Science"
    ]
  },
  {
    "objectID": "05-variables/index.html#references",
    "href": "05-variables/index.html#references",
    "title": "Variables and Variable Types",
    "section": "References",
    "text": "References\nU.S. Census Bureau, “EDUCATIONAL ATTAINMENT,” American Community Survey 5-Year Estimates Subject Tables, Table S1501, 2020, https://data.census.gov/table/ACSST5Y2020.S1501?q=2020+education&t=Age+and+Sex:Educational+Attainment&g=010XX00US$0400000, accessed on August 24, 2025.\nU.S. Census Bureau, “Design and Methodology Report.” https://www.census.gov/programs-surveys/acs/methodology/design-and-methodology.html, accessed on September 2, 2025.\nU.S. Census Bureau, “Public Use Microdata Sample (PUMS).” https://www.census.gov/programs-surveys/acs/microdata.html, accessed on September 2, 2025.",
    "crumbs": [
      "L05: Variables in Social Science"
    ]
  },
  {
    "objectID": "reference.html",
    "href": "reference.html",
    "title": "🐍 Data 6 Python Reference",
    "section": "",
    "text": "If you’re new to reading documentation, looking at this page might feel a little overwhelming, but don’t worry — the point of this class is not to memorize all of these functions or their arguments. For exams and quizzes, you will be provided with a reference sheet that contains all of the functions you may need on the exam.\nHowever, we do expect you to understand how to use this Python Reference to understand new functions, and to help with debugging when things go wrong. Learning how to read and understand documentation is a key to becoming a good data scientist. In fact, even course staff continue to use the Python Reference to refresh their memory about certain functions.\nOf course, the Python Reference can only provide information about the basics of the functions you’ll use in Data 6. The best knowledge about functions comes from using these functions in code you write in labs or homeworks. If you get stuck when using a certain function, we encourage you to come to office hours or ask a question on Ed.\n\n\n\ndef my_function(num):\n    return num ** 3\n\nIn the function above, my_function is the name of the function, which takes one argument called num. The data type of the input is an int or float, and the function returns the number raised to the power 3, which is also an int or float.\n\n\n\n\nThe Function column tells you how to call the function and what arguments it accepts. Everything written in this font is code or refers to a particular argument in the function (e.g. num in np.sqrt(num)).\nThe Description column gives you a brief description of what the function does, including what each argument is used for\nThe Input column tells you what data type each argument needs to be. If you’re getting a TypeError, it might be because your inputs are of the wrong type. Data types are indicated in bold (e.g. string or Table).\nThe Output column tells you what the function returns and what data type it is.",
    "crumbs": [
      "Data 6 Python Reference"
    ]
  },
  {
    "objectID": "reference.html#understanding-this-documentation-page",
    "href": "reference.html#understanding-this-documentation-page",
    "title": "🐍 Data 6 Python Reference",
    "section": "",
    "text": "If you’re new to reading documentation, looking at this page might feel a little overwhelming, but don’t worry — the point of this class is not to memorize all of these functions or their arguments. For exams and quizzes, you will be provided with a reference sheet that contains all of the functions you may need on the exam.\nHowever, we do expect you to understand how to use this Python Reference to understand new functions, and to help with debugging when things go wrong. Learning how to read and understand documentation is a key to becoming a good data scientist. In fact, even course staff continue to use the Python Reference to refresh their memory about certain functions.\nOf course, the Python Reference can only provide information about the basics of the functions you’ll use in Data 6. The best knowledge about functions comes from using these functions in code you write in labs or homeworks. If you get stuck when using a certain function, we encourage you to come to office hours or ask a question on Ed.\n\n\n\ndef my_function(num):\n    return num ** 3\n\nIn the function above, my_function is the name of the function, which takes one argument called num. The data type of the input is an int or float, and the function returns the number raised to the power 3, which is also an int or float.\n\n\n\n\nThe Function column tells you how to call the function and what arguments it accepts. Everything written in this font is code or refers to a particular argument in the function (e.g. num in np.sqrt(num)).\nThe Description column gives you a brief description of what the function does, including what each argument is used for\nThe Input column tells you what data type each argument needs to be. If you’re getting a TypeError, it might be because your inputs are of the wrong type. Data types are indicated in bold (e.g. string or Table).\nThe Output column tells you what the function returns and what data type it is.",
    "crumbs": [
      "Data 6 Python Reference"
    ]
  },
  {
    "objectID": "reference.html#built-in-python-functions",
    "href": "reference.html#built-in-python-functions",
    "title": "🐍 Data 6 Python Reference",
    "section": "Built-In Python Functions",
    "text": "Built-In Python Functions\n\n\n\n\n\n\n\n\n\nFunction\nDescription\nInput\nOutput\n\n\n\n\nstr(val)\nConverts val to a string\nA value of any type (int, float, NoneType, etc.)\nThe value as a string\n\n\nint(num)\nConverts num to an int\nA numerical value (represented as a string or float)\nThe value as an int\n\n\nfloat(num)\nConverts num to a float\nA numerical value (represented as a string or int)\nThe value as a float\n\n\nlen(arr)\nReturns the length of arr\narray or list\nint: the length of the array or list\n\n\nmax(arr)\nReturns the maximum value in arr\narray or list\nThe maximum value the array (usually an int)\n\n\nmin(arr)\nReturns the minimum value in arr\narray or list\nThe minimum value the array (usually an int)\n\n\nsum(arr)\nReturns the sum of the values in arr\narray or list\nint or float: the sum of the values in the array\n\n\nabs(num)\nReturns the absolute value of num\nint or float\nint or float\n\n\nround(number) or round(number, ndigits)\nReturns number rounded to the nearest integer. If optional ndigits is provided, rounds to ndigits precision after the decimal point.\nint or float\nint or float\n\n\nprint(input, ...)\nPrints the input. Multiple inputs can be passed, and they will be separated by spaces by default.\ninput: any inputs to print \nNone\n\n\ntype(object)\nReturns the type of object.\nobject: the object whose type is to be determined\ntype: the type of the object",
    "crumbs": [
      "Data 6 Python Reference"
    ]
  },
  {
    "objectID": "reference.html#numpy-array-functions",
    "href": "reference.html#numpy-array-functions",
    "title": "🐍 Data 6 Python Reference",
    "section": "NumPy Array Functions",
    "text": "NumPy Array Functions\n\n\n\n\n\n\n\n\n\nFunction\nDescription\nInput\nOutput\n\n\n\n\nmake_array(val1, val2, ...)\nMakes a NumPy array with the inputted values\nA sequence of values\nAn array with those values\n\n\nnp.mean(arr) or np.average(arr)\nCalculates the average value of arr\nAn array of numbers\nfloat: The average of the array\n\n\nnp.sum(arr)\nReturns the sum of the values in arr\narray\nint or float: the sum of the values in the array\n\n\nnp.prod(arr)\nReturns the product of the values in arr\narray\nint or float: the product of the values in the array\n\n\nnp.sqrt(num)\nCalculates the square root of num\nint or float\nfloat : the square root of the number\n\n\nnp.arange(stop), np.arange(start, stop), or np.arange(start, stop, step)\nCreates an array of sequential numbers starting at start, going up in increments of step, and going up to but excluding stop. Default start is 0, default step is 1\nint or float\narray\n\n\nnp.count_nonzero(arr)\nReturns the number of non-zero (or True) elements in an array\nAn array of values\nint: the number of non-zero values in arr\n\n\nnp.append(arr, item)\nAppends item to the end of arr. Does not modify the original array.\n1. array to append to  2. item to append (any type)\narray: a new array with the appended item\n\n\nnp.cumsum(arr)\nReturns the cumulative sum of the elements in arr, where each element is the sum of all preceding elements including itself\narray\narray: the cumulative sum of the values in the array\n\n\nnp.diff(arr)\nComputes the difference between consecutive elements in arr.\narray\narray: the differences between consecutive elements in the array containing len(arr) - 1 elements\n\n\nnp.sort(arr)\nSorts an array in ascending order.\narray\nNone (arr is sorted; no copy is made)\n\n\npercentile(p, arr)\nReturns the corresponding percentile p of an array arr.\n1. value between 0 and 100  2. array of ints or floats\nint or float",
    "crumbs": [
      "Data 6 Python Reference"
    ]
  },
  {
    "objectID": "reference.html#string-methods",
    "href": "reference.html#string-methods",
    "title": "🐍 Data 6 Python Reference",
    "section": "String Methods",
    "text": "String Methods\n\n\n\n\n\n\n\n\n\nFunction\nDescription\nInput\nOutput\n\n\n\n\nstr.split(separator, maxsplit)\nSplits str into a list of substrings using the specified separator. If separator is not provided, splits at any whitespace. You can also use the optional argument maxsplit to limit the number of splits.\n1. (Optional) separator: the delimiter used to split str  2. (Optional) maxsplit: maximum number of splits\nlist of substrings\n\n\nstr.join(iterable)\nConcatenates the elements in iterable (usually a list or array) into a single string, with each element separated by str.\niterable: an iterable of strings to join (can be an array or list of strings)\nstring: a single string formed by joining the elements of iterable with the separator str\n\n\nstr.replace(old, new)\nReturns a copy of the string with all occurrences of the substring old replaced by new.\nold: the substring to be replaced.  new: the substring to replace old with.\nstring: a new string where occurrences of old have been replaced by new.",
    "crumbs": [
      "Data 6 Python Reference"
    ]
  },
  {
    "objectID": "reference.html#tables-and-table-methods",
    "href": "reference.html#tables-and-table-methods",
    "title": "🐍 Data 6 Python Reference",
    "section": "Tables and Table Methods",
    "text": "Tables and Table Methods\n\n\n\nFunction\nDescription\nInput\nOutput\n\n\n\n\nTable()\nCreates an empty table, usually to extend with data\nNone\nAn empty Table\n\n\nTable().read_table(filename)\nCreate a table from a data file\nstring: the name of the file\n\n\n\ntbl.with_column(name, values) or tbl.with_columns(n1, v1, n2, v2, ...)\nAdds an extra column onto tbl with the label name and values as the column values\n1. string: name of the new column  2. array: values in the column\nTable: a copy of the original table with the new column(s)\n\n\ntbl.column(col)\nReturns the values in a column in tbl\nstring or int: the column name or index\narray: the values in that column\n\n\ntbl.num_rows\nCompute the number of rows in tbl\nNone\nint: the number of rows in the table\n\n\ntbl.num_columns\nCompute the number of columns in tbl\nNone\nint: the number of columns in the table\n\n\ntbl.labels\nReturns the labels in tbl\nNone\narray: the names of each column as strings\n\n\ntbl.select(col1, col2, ...)\nCreates a copy of tbl only with the selected columns\nstring or int: the column name(s) or index(es) to be included in the table\nTable with the selected columns\n\n\ntbl.drop(col1, col2, ...)\nCreates a copy of tbl without the selected columns\nstring or int: the column name(s) or index(es) to be dropped from the table\nTable without the selected columns\n\n\ntbl.relabeled(old_label, new_label)\nCreates a new table, changing the column name specified by old_label to new_label, and leaves the original table unchanged.\n1. string: the old column name  2. string the new column name\nTable: a copy of the original table with the changed column name\n\n\ntbl.show(n)\nDisplays the first n rows of tbl. If no argument is specified, the function defaults to showing the entire table\n(Optional) int: number of rows to be displayed\nNone (table is displayed)\n\n\ntbl.sort(column_name)\nSorts the rows of tbl by the values in the column_name column. Defaults to ascending order unless the optional argument descending=True is included.\n1. string or int: name or index of the column to sort  2. (Optional) descending=True\nTable: a copy of the original table with the column sorted\n\n\ntbl.where(column, predicate)\nCreates a copy of tbl containing only the rows where the value of column matches the predicate. See Table.where predicates below.\n1. string or int: column name or index  2. are.(...) predicate or exact-match value.\nTable: a copy of the original table with only the rows that match the predicate\n\n\ntbl.take(row_indices)\nCreates a table with only the rows at the given indices. row_indices is either an array of indices or an integer corresponding to one index.\nint or array: indices of rows to be included in the table\nTable: a copy of the original table with only the rows at the given indices\n\n\ntbl.bin(column_name_or_index), tbl.bin(column_name_or_index, bins)\nGroups values into intervals, known as bins. Results in a two-column table that contains the number of rows in each bin. The first column lists the left endpoints of the bins, except in the last row. If the bins argument isn’t used, default is to produce 10 equally wide bins between the min and max values of the data.\n1. string or int: column name(s) or index(es)  2. (Optional) array of ints/floats denoting bin boundaries or an int of the number of bins you want\nTable: a new table of counts per bin\n\n\ntbl.apply(function) or tbl.apply(function, col1, col2, ...)\nReturns an array of values resulting from applying a function to each item in a column.\n1. Function: function to apply to column  2. (Optional) string or int: the column name(s) or index(es) to apply the function to\narray containing an element for each value in the original column after applying the function to it\n\n\ntbl.group(column_or_columns, function)\nGroups rows in tbl by unique values or combinations of values in a column(s). Multiple columns must be entered as an array of strings. Values in the other columns are aggregated by count (by default) or the optional argument function. You can visualize the group function here.\n1. string or array of strings: column(s) on which to group  2. (Optional) Function: function to aggregate values in cells (defaults to counting rows)\nTable a new groupped table\n\n\ntbl.pivot(col1, col2) or tbl.pivot(col1, col2, values, collect)\nCreates a pivot table where each unique value in col1 has its own column and each unique value in col2 has its own row. Counts or aggregates values from a third column, collected with some function. If the values and collect arguments are not included, pivot defaults to returning counts in the cells. You can visualize the pivot function here.\n1. string: name of the column in tbl whose unique values will make up the columns of the pivot table  2. string: name of column in tbl whose unique values will make up the rows of the pivot table  3. (Optional) string: name of the column in tbl that describes the values of cells in the pivot table  4. (Optional) Function: how the values are collected (e.g. sum or np.mean)\nTable: a new pivot table\n\n\ntblA.join(colA, tblB) or tblA.join(colA, tblB, colB)\nGenerate a table with the columns of tblA and tblB, containing rows for all values in colA and colB that appear in tblA and tblB, respectively. By default, colB is the same value as colA. colA and colB must be strings specifying column names.\n1. string: name of column in tblA with values to join on  2. Table: the other table  3. (Optional) string: the name of the shared column in tblB, if column names are different between the tables\nTable: a new combined table\n\n\ntbl.with_row(values)\nAdds a new row with the specified values to tbl\n1. list or array: values to add as a new row\nTable: a copy of the original table with the new row\n\n\ntbl.with_rows(list_of_rows)\nAdds multiple rows to tbl using a list of rows\n1. list of lists or arrays: each list/array represents a new row\nTable: a copy of the original table with the new rows",
    "crumbs": [
      "Data 6 Python Reference"
    ]
  },
  {
    "objectID": "reference.html#visualization-functions",
    "href": "reference.html#visualization-functions",
    "title": "🐍 Data 6 Python Reference",
    "section": "Visualization Functions",
    "text": "Visualization Functions\n\n\n\n\n\n\n\n\n\nFunction\nDescription\nInput\nOutput\n\n\n\n\ntbl.barh(categories) or tbl.barh(categories, values)\nDisplays a horizontal bar chart with bars for each category in the column categories. values specifies the column corresponding to the size of each bar, but is unnecessary if the table only has two columns. Optional argument overlay (default is True) specifies whether grouped bar charts should be overlaid or on separate plots.\n1. string: name of the column with categories  2. (Optional) string: name of the column with values corresponding to the categories\nNone: draws a bar chart\n\n\ntbl.hist(column)\nGenerates a histogram of the numerical values in column. Optional arguments density (False: plots counts; default True), group (to specify categorical column to group on), bins (to specify custom bins), and overlay to specify overlaid or separate histograms.\nstring: name of the column\nNone: draws a histogram\n\n\ntbl.plot(x_column, y_column) or tbl.plot(x_column) or tbl.plot(x_column, [y_column1, ...])\nDraws a line plot consisting of one point for each row in tbl. If only x_column is specified, plot will plot the rest of the columns on the y-axis with different colored lines. Optional argument overlay (default is True) specifies whether multiple lines should be overlaid or on separate plots.\n1. string: name of the column on the x-axis  2. string or array of strings: name of the column(s) on the y-axis\nNone: draws a line graph\n\n\ntbl.scatter(x_column, y_column)\nDraws a scatter plot consisting of one point for each row in tbl. The optional argument fit_line=True can be included to draw a line of best fit through the scatter plot. The optional arguments group (to specify categorical column to group on) and sizes (to specify a numerical column for bubble sizes) can also be used to encode additional variables.\n1. string: name of the column on the x-axis  2. string: name of the column on the y-axis  3. (Optional) fit_line=True\nNone: draws a scatter plot",
    "crumbs": [
      "Data 6 Python Reference"
    ]
  },
  {
    "objectID": "reference.html#table.where-predicates",
    "href": "reference.html#table.where-predicates",
    "title": "🐍 Data 6 Python Reference",
    "section": "Table.where Predicates",
    "text": "Table.where Predicates\nThese functions can be passed in as the second argument to tbl.where(..) and act as a condition by which to select rows from tbl.\n\n\n\n\n\n\n\nPredicate\nDescription\n\n\n\n\nare.equal_to(Z)\nEqual to Z (can be an int, float or string)\n\n\nare.not_equal_to(Z)\nNot equal to ‘Z’ can be a number (int or float) or a string)\n\n\nare.above(x)\nGreater than x\n\n\nare.above_or_equal_to(x)\nGreater than or equal to x\n\n\nare.below(x)\nLess than x\n\n\nare.below_or_equal_to(x)\nLess than or equal to x\n\n\nare.between(x,y)\nGreater than or equal to x and less than y\n\n\nare.between_or_equal_to(x,y)\nGreater than or equal to x, and less than or equal to y\n\n\nare.strictly_between(x,y)\nGreater than x and less than y\n\n\nare.contained_in(A)\nTrue if it is a substring of A (if A is a string) or an element of A (if A is an array)\n\n\nare.containing(S)\nContains the string S",
    "crumbs": [
      "Data 6 Python Reference"
    ]
  },
  {
    "objectID": "reference.html#more-documentation",
    "href": "reference.html#more-documentation",
    "title": "🐍 Data 6 Python Reference",
    "section": "More Documentation",
    "text": "More Documentation\nThe Data 6 Python reference guide is based on the Data 8 Python Reference. More detailed Python documentation is available here.",
    "crumbs": [
      "Data 6 Python Reference"
    ]
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/print.html",
    "href": "fa24/lectures_qmd_complete/lec04/print.html",
    "title": "print()",
    "section": "",
    "text": "NoneType\n\n\nArrays\n\n\nVariables in Data Science\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/print.html#print",
    "href": "fa24/lectures_qmd_complete/lec04/print.html#print",
    "title": "print()",
    "section": "",
    "text": "NoneType\n\n\nArrays\n\n\nVariables in Data Science\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/print.html#a-very-useful-function-for-human-display-print",
    "href": "fa24/lectures_qmd_complete/lec04/print.html#a-very-useful-function-for-human-display-print",
    "title": "print()",
    "section": "A very useful function for human display: print()",
    "text": "A very useful function for human display: print()\n\nThe print() function displays values.\nWorks even if it’s not thelast line of a cell!\nStrings are displayed without quotes"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/print.html#a-very-useful-function-for-human-display-print-1",
    "href": "fa24/lectures_qmd_complete/lec04/print.html#a-very-useful-function-for-human-display-print-1",
    "title": "print()",
    "section": "A very useful function for human display: print()",
    "text": "A very useful function for human display: print()\n\nTerminology going forward:\nPrint means display\nOutput means cell output\nThe print() function displays values.\nWorks even if it’s not thelast line of a cell!\nStrings are displayed without quotes\n⚠️ Note ⚠️\nPrint displays values.It does not produce cell output!"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/print.html#review-of-print-and-typecasting",
    "href": "fa24/lectures_qmd_complete/lec04/print.html#review-of-print-and-typecasting",
    "title": "print()",
    "section": "Review of print() and Typecasting",
    "text": "Review of print() and Typecasting\n\nIf your lines of code are too long, use the character to break code into multiple lines.\nThere are two common ways to print strings:\nMultiple arguments\nPython inserts a space character for display\nArguments can be different data types\nString concatenation\nProgrammer must insert space character for display\nOne string argument, so all values must be cast to string"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/array-operations.html",
    "href": "fa24/lectures_qmd_complete/lec04/array-operations.html",
    "title": "Array Operations",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 04\nStoring many values in a single name.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/array-operations.html#arrays-and-variables",
    "href": "fa24/lectures_qmd_complete/lec04/array-operations.html#arrays-and-variables",
    "title": "Array Operations",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 04\nStoring many values in a single name.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/array-operations.html#arrays",
    "href": "fa24/lectures_qmd_complete/lec04/array-operations.html#arrays",
    "title": "Array Operations",
    "section": "Arrays",
    "text": "Arrays\n\n\nNoneType\n\n\nArrays\n\n\nVariables in Data Science\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/array-operations.html#an-array-is-a-sequential-collection-of-values",
    "href": "fa24/lectures_qmd_complete/lec04/array-operations.html#an-array-is-a-sequential-collection-of-values",
    "title": "Array Operations",
    "section": "An Array Is a Sequential Collection of Values",
    "text": "An Array Is a Sequential Collection of Values\n\nmultiple values organized together\narranged like a line/queue\nUse make_array() to create arrays.\nValues in an array must all be of the same data type, and Python will cast appropriately.\nArray with 4 ints\nArray with 4 floats\nArray with 3 strs"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/array-operations.html#an-array-is-a-sequential-collection-of-values-1",
    "href": "fa24/lectures_qmd_complete/lec04/array-operations.html#an-array-is-a-sequential-collection-of-values-1",
    "title": "Array Operations",
    "section": "An Array Is a Sequential Collection of Values",
    "text": "An Array Is a Sequential Collection of Values\n\nArrays allow us to write code that performs computation on many pieces of data at once.\nPython can assign an entire arrayof values to a single name.\nThe order of a array is fixed (i.e., they will be arranged in the order specified when building the array), and values can be repeated.\nmultiple values organized together\narranged like a line/queue\nUse make_array() to create arrays.\nValues in an array must all be of the same data type, and Python will cast appropriately.\nArray with 4 ints\nArray with 4 floats\nArray with 3 strs"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/array-operations.html#array-operations",
    "href": "fa24/lectures_qmd_complete/lec04/array-operations.html#array-operations",
    "title": "Array Operations",
    "section": "Array Operations",
    "text": "Array Operations\n\n\nNoneType\n\n\nArrays\n\n\nVariables in Data Science\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/array-operations.html#arithmetic-on-arrays",
    "href": "fa24/lectures_qmd_complete/lec04/array-operations.html#arithmetic-on-arrays",
    "title": "Array Operations",
    "section": "Arithmetic on Arrays:",
    "text": "Arithmetic on Arrays:\nEvaluation Returns a New Array\n\n⚠️ Evaluating array expressions returns a new array; it does not change the original array."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/array-operations.html#arithmetic-on-arrays-1",
    "href": "fa24/lectures_qmd_complete/lec04/array-operations.html#arithmetic-on-arrays-1",
    "title": "Array Operations",
    "section": "Arithmetic on Arrays:",
    "text": "Arithmetic on Arrays:\nEvaluation Returns a New Array\n\n⚠️ Evaluating array expressions returns a new array; it does not change the original array.\nArray Arithmetic is Element-Wise\n\nArithmetic with an array and a numeric value"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/array-operations.html#arithmetic-on-arrays-2",
    "href": "fa24/lectures_qmd_complete/lec04/array-operations.html#arithmetic-on-arrays-2",
    "title": "Array Operations",
    "section": "Arithmetic on Arrays:",
    "text": "Arithmetic on Arrays:\nEvaluation Returns a New Array\n\n⚠️ Evaluating array expressions returns a new array; it does not change the original array.\nArray Arithmetic is Element-Wise\n\nArithmetic with an array and a numeric value\n\n\nArithmetic with two arrays of equal length (same number of values)."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/variables-in-data-science.html",
    "href": "fa24/lectures_qmd_complete/lec04/variables-in-data-science.html",
    "title": "Variables in Data Science",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 04\nStoring many values in a single name.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/variables-in-data-science.html#arrays-and-variables",
    "href": "fa24/lectures_qmd_complete/lec04/variables-in-data-science.html#arrays-and-variables",
    "title": "Variables in Data Science",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 04\nStoring many values in a single name.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/variables-in-data-science.html#python-data-types-summary",
    "href": "fa24/lectures_qmd_complete/lec04/variables-in-data-science.html#python-data-types-summary",
    "title": "Variables in Data Science",
    "section": "Python Data Types: Summary",
    "text": "Python Data Types: Summary\n\ncoming up\nour next topics\nso far"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/variables-in-data-science.html#side-note-datascience-package",
    "href": "fa24/lectures_qmd_complete/lec04/variables-in-data-science.html#side-note-datascience-package",
    "title": "Variables in Data Science",
    "section": "Side Note: datascience Package",
    "text": "Side Note: datascience Package\n\nfrom datascience import *\nThe datascience Python package was written by UC Berkeley specifically for data science education.\nWe generally put the import statement in a cell at the top of our notebook.\nAfter running the import statement, we can then call package functions without prepending datascience.\nThe make_array() functionis from this package!\n“Import everything from the data science package”"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/variables-in-data-science.html#variables-in-data-science",
    "href": "fa24/lectures_qmd_complete/lec04/variables-in-data-science.html#variables-in-data-science",
    "title": "Variables in Data Science",
    "section": "Variables in Data Science",
    "text": "Variables in Data Science\n\n\nNoneType\n\n\nArrays\n\n\nVariables in Data Science\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/variables-in-data-science.html#terminology-data-tabular-data-and-records",
    "href": "fa24/lectures_qmd_complete/lec04/variables-in-data-science.html#terminology-data-tabular-data-and-records",
    "title": "Variables in Data Science",
    "section": "Terminology: Data, Tabular Data, and Records",
    "text": "Terminology: Data, Tabular Data, and Records\n\nA dataset is a collection of data.\n“[Data] are systematically collected elements of information about the world.”\n– King, Keohane, and Verba. Designing Social Inquiry (1994).\nIn this course we will often use tabular data:\nColumns\nRows (also known as records).\nrow\ncolumn\n\n\n\nSpeaker notes\n\n“Data” are systematically collected elements of information about the world. They can be qualitative or quantitative in style. Sometimes data are collected to evaluate a very specific theory, but not so infrequently, scholars collect data before knowing precisely what they are interested in finding out. Moreover, even if data are collected to evaluate a specific hypothesis, researchers may ultimately be interested in questions that had not occurred to them previously."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/variables-in-data-science.html#terminology-variables",
    "href": "fa24/lectures_qmd_complete/lec04/variables-in-data-science.html#terminology-variables",
    "title": "Variables in Data Science",
    "section": "Terminology: Variables",
    "text": "Terminology: Variables\n\nIn data science, a variable is a measurable feature, attribute, and/or representation of a concept. It can have different values for different individuals.\nvariable\n\n\n\nSpeaker notes\n\n“Data” are systematically collected elements of information about the world. They can be qualitative or quantitative in style. Sometimes data are collected to evaluate a very specific theory, but not so infrequently, scholars collect data before knowing precisely what they are interested in finding out. Moreover, even if data are collected to evaluate a specific hypothesis, researchers may ultimately be interested in questions that had not occurred to them previously."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/variables-in-data-science.html#terminology-variables-1",
    "href": "fa24/lectures_qmd_complete/lec04/variables-in-data-science.html#terminology-variables-1",
    "title": "Variables in Data Science",
    "section": "Terminology: Variables",
    "text": "Terminology: Variables\n\nIn data science, a variable is a measurable feature, attribute, and/or representation of a concept. It can have different values for different individuals.\nA column contains/captures all measurements for a particular variable from our dataset.\nExample 1: This column represents the estimated number of people 25 years or older in each state. Values are positive integers.\nvariable\n\n\n\nSpeaker notes\n\n“Data” are systematically collected elements of information about the world. They can be qualitative or quantitative in style. Sometimes data are collected to evaluate a very specific theory, but not so infrequently, scholars collect data before knowing precisely what they are interested in finding out. Moreover, even if data are collected to evaluate a specific hypothesis, researchers may ultimately be interested in questions that had not occurred to them previously."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/variables-in-data-science.html#terminology-variables-2",
    "href": "fa24/lectures_qmd_complete/lec04/variables-in-data-science.html#terminology-variables-2",
    "title": "Variables in Data Science",
    "section": "Terminology: Variables",
    "text": "Terminology: Variables\n\nIn data science, a variable is a measurable feature, attribute, and/or representation of a concept. It can have different values for different individuals.\nA column contains/captures all measurements for a particular variable from our dataset.\nExample 2: This column represents the recorded sex of each respondent. Values are binary categories.\nvariable\n\n\n\nSpeaker notes\n\n“Data” are systematically collected elements of information about the world. They can be qualitative or quantitative in style. Sometimes data are collected to evaluate a very specific theory, but not so infrequently, scholars collect data before knowing precisely what they are interested in finding out. Moreover, even if data are collected to evaluate a specific hypothesis, researchers may ultimately be interested in questions that had not occurred to them previously."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/variables-in-data-science.html#terminology-variables-3",
    "href": "fa24/lectures_qmd_complete/lec04/variables-in-data-science.html#terminology-variables-3",
    "title": "Variables in Data Science",
    "section": "Terminology: Variables",
    "text": "Terminology: Variables\n\nIn data science, a variable is a measurable feature, attribute, and/or representation of a concept. It can have different values for different individuals.\nvariable\nVariables are empirical measurements; they are often metrics that researchers create to approximate the specific dimensions of an abstract concept of a research question.\nSide note: In computer science, Python names are also called variables. However, in this class we’ll always try to refer to Python names as names to avoid confusing it with the data science definition of a variable.\n\n\n\nSpeaker notes\n\n“Data” are systematically collected elements of information about the world. They can be qualitative or quantitative in style. Sometimes data are collected to evaluate a very specific theory, but not so infrequently, scholars collect data before knowing precisely what they are interested in finding out. Moreover, even if data are collected to evaluate a specific hypothesis, researchers may ultimately be interested in questions that had not occurred to them previously."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/variables-in-data-science.html#research-question-and-data-collection",
    "href": "fa24/lectures_qmd_complete/lec04/variables-in-data-science.html#research-question-and-data-collection",
    "title": "Variables in Data Science",
    "section": "Research Question and Data Collection",
    "text": "Research Question and Data Collection\n\nThe definition of variables is impacted not only by researchers’ interests, but also the process and limitations of data collection.\nWhat is the level of educational attainment in 2020 among US resident adults?\nPose the Research Question\nHousehold survey\nPrivate dataset by household\nPublic dataset by geographic region\naggregation\nTable 1\nTable 2\n(this lecture)"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/variables-in-data-science.html#identifying-confounding-variables",
    "href": "fa24/lectures_qmd_complete/lec04/variables-in-data-science.html#identifying-confounding-variables",
    "title": "Variables in Data Science",
    "section": "Identifying Confounding Variables",
    "text": "Identifying Confounding Variables\n\nConfounding variables can be linked to other concepts in a way that makes two concepts appear related (even when they are not).\nTranslate a concept into a variable\nDefine the variable domain (i.e., all possible values)\nConsider other factors that may influence the outcomes of the study, and repeat\nWhat is the level of educational attainment in 2020 among US resident adults?\nPose the Research Question\nUS geographic region\nEducational attainment level\n?\nOther social systems?"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/variables-in-data-science.html#identifying-confounding-variables-1",
    "href": "fa24/lectures_qmd_complete/lec04/variables-in-data-science.html#identifying-confounding-variables-1",
    "title": "Variables in Data Science",
    "section": "Identifying Confounding Variables",
    "text": "Identifying Confounding Variables\n\nThese are just a few confounding variables measured in the ACS. What kinds of confounding variables would likely not be measured in a government study?\nWhat is the level of educational attainment in 2020 among US resident adults?\nPose the Research Question\nRace/Ethnicity\nWhite alone\nWhite alone, not Hispanic or Latino\nBlack alone\nAmerican Indian or Alaska Native alone\nAsian alone\nNative Hawaiian and Other Pacific Islander Alone\nSome other race alone\nTwo or more races\nHispanic or Latino Origin\nSex\nMale\nFemale\nIncome/Earnings\n(numeric amount)\nUS geographic region\nEducational attainment level\n?\n\n\n\nSpeaker notes\n\nhttps://www.nationalgeographic.com/culture/article/race-ethnicity “Race” is usually associated with biology and linked with physical characteristics such as skin color or hair texture. “Ethnicity” is linked with cultural expression and identification. However, both are social constructs used to categorize and characterize seemingly distinct populations."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/arrays.html",
    "href": "fa24/lectures_qmd_complete/lec04/arrays.html",
    "title": "Arrays",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 04\nStoring many values in a single name.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/arrays.html#arrays-and-variables",
    "href": "fa24/lectures_qmd_complete/lec04/arrays.html#arrays-and-variables",
    "title": "Arrays",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 04\nStoring many values in a single name.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/arrays.html#arrays",
    "href": "fa24/lectures_qmd_complete/lec04/arrays.html#arrays",
    "title": "Arrays",
    "section": "Arrays",
    "text": "Arrays\n\n\nNoneType\n\n\nArrays\n\n\nVariables in Data Science\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/arrays.html#arithmetic-on-arrays",
    "href": "fa24/lectures_qmd_complete/lec04/arrays.html#arithmetic-on-arrays",
    "title": "Arrays",
    "section": "Arithmetic on Arrays:",
    "text": "Arithmetic on Arrays:\nEvaluation Returns a New Array\n\n⚠️ Evaluating array expressions returns a new array; it does not change the original array."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/arrays.html#arithmetic-on-arrays-1",
    "href": "fa24/lectures_qmd_complete/lec04/arrays.html#arithmetic-on-arrays-1",
    "title": "Arrays",
    "section": "Arithmetic on Arrays:",
    "text": "Arithmetic on Arrays:\nEvaluation Returns a New Array\n\n⚠️ Evaluating array expressions returns a new array; it does not change the original array.\nArray Arithmetic is Element-Wise\n\nArithmetic with an array and a numeric value"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/arrays.html#arithmetic-on-arrays-2",
    "href": "fa24/lectures_qmd_complete/lec04/arrays.html#arithmetic-on-arrays-2",
    "title": "Arrays",
    "section": "Arithmetic on Arrays:",
    "text": "Arithmetic on Arrays:\nEvaluation Returns a New Array\n\n⚠️ Evaluating array expressions returns a new array; it does not change the original array.\nArray Arithmetic is Element-Wise\n\nArithmetic with an array and a numeric value\n\n\nArithmetic with two arrays of equal length (same number of values)."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec03/index.html",
    "href": "fa24/lectures_qmd_complete/lec03/index.html",
    "title": "[Lab01 Lec03] Evaluation, Names, and Data Types",
    "section": "",
    "text": "This chapter covers the key concepts from Lecture 03."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/jupyter-shortcuts.html",
    "href": "fa24/lectures_qmd_complete/lec02/jupyter-shortcuts.html",
    "title": "Jupyter Shortcuts",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 02\nGetting familiar with our computing environment, and\nwriting our first Python programs.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University\ndata6.org/fa24/syllabus/#acknowledgements-"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/jupyter-shortcuts.html#jupyter-notebooks-arithmetic",
    "href": "fa24/lectures_qmd_complete/lec02/jupyter-shortcuts.html#jupyter-notebooks-arithmetic",
    "title": "Jupyter Shortcuts",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 02\nGetting familiar with our computing environment, and\nwriting our first Python programs.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University\ndata6.org/fa24/syllabus/#acknowledgements-"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/jupyter-shortcuts.html#a-brief-history-of-jupyter",
    "href": "fa24/lectures_qmd_complete/lec02/jupyter-shortcuts.html#a-brief-history-of-jupyter",
    "title": "Jupyter Shortcuts",
    "section": "A Brief History of Jupyter",
    "text": "A Brief History of Jupyter\n\nFernando Pérez’s Faculty Page"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/jupyter-shortcuts.html#two-ways-to-access-jupyter-notebooks",
    "href": "fa24/lectures_qmd_complete/lec02/jupyter-shortcuts.html#two-ways-to-access-jupyter-notebooks",
    "title": "Jupyter Shortcuts",
    "section": "Two ways to access Jupyter Notebooks",
    "text": "Two ways to access Jupyter Notebooks\n\nAccessing Jupyter Notebook\nGo to datahub.berkeley.edu (if you want to make your own notebook)\nFrom our course website: data6.org/fa24/"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/jupyter-shortcuts.html#jupyter-shortcuts",
    "href": "fa24/lectures_qmd_complete/lec02/jupyter-shortcuts.html#jupyter-shortcuts",
    "title": "Jupyter Shortcuts",
    "section": "Jupyter Shortcuts",
    "text": "Jupyter Shortcuts\n\n\nProgramming in Python\n\n\nArithmetic\n\n\nJupyter Shortcuts\n\n\nComments, Data Types, and Errors\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/jupyter-shortcuts.html#reference-for-keyboard-shortcuts",
    "href": "fa24/lectures_qmd_complete/lec02/jupyter-shortcuts.html#reference-for-keyboard-shortcuts",
    "title": "Jupyter Shortcuts",
    "section": "Reference for Keyboard Shortcuts",
    "text": "Reference for Keyboard Shortcuts\n\nUse this as a reference, don’t try to memorize these right now. Also, you can always use the toolbar!! You don’t have to use the keyboard shortcut."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/comments-data-types-and-errors.html",
    "href": "fa24/lectures_qmd_complete/lec02/comments-data-types-and-errors.html",
    "title": "Comments, Data Types, and Errors",
    "section": "",
    "text": "We access all code in this class by going to\ndatahub.berkeley.edu\nDataHub is a Berkeley-hosted server that runs Jupyter notebooks. All students have their own DataHub “container”; think of this as your own virtual computer.\nThis is where you will work on all assignments.\nYou will not need to install anything locally (meaning that you could theoretically do all assignments for this class on your phone). All you need is a web browser.\nCourse staff can access everything in your DataHub to help debug your code.\nWorks like magic! Let’s go there now."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/comments-data-types-and-errors.html#datahub",
    "href": "fa24/lectures_qmd_complete/lec02/comments-data-types-and-errors.html#datahub",
    "title": "Comments, Data Types, and Errors",
    "section": "",
    "text": "We access all code in this class by going to\ndatahub.berkeley.edu\nDataHub is a Berkeley-hosted server that runs Jupyter notebooks. All students have their own DataHub “container”; think of this as your own virtual computer.\nThis is where you will work on all assignments.\nYou will not need to install anything locally (meaning that you could theoretically do all assignments for this class on your phone). All you need is a web browser.\nCourse staff can access everything in your DataHub to help debug your code.\nWorks like magic! Let’s go there now."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/comments-data-types-and-errors.html#why-write-code-as-a-data-scientist",
    "href": "fa24/lectures_qmd_complete/lec02/comments-data-types-and-errors.html#why-write-code-as-a-data-scientist",
    "title": "Comments, Data Types, and Errors",
    "section": "Why write code as a data scientist?",
    "text": "Why write code as a data scientist?\n\nCompute\nVisualize\nShare"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/comments-data-types-and-errors.html#comments-data-types-and-errors",
    "href": "fa24/lectures_qmd_complete/lec02/comments-data-types-and-errors.html#comments-data-types-and-errors",
    "title": "Comments, Data Types, and Errors",
    "section": "Comments, Data Types, and Errors",
    "text": "Comments, Data Types, and Errors\n\n\nProgramming in Python\n\n\nArithmetic\n\n\nJupyter Shortcuts\n\n\nComments, Data Types, and Errors\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/comments-data-types-and-errors.html#comments",
    "href": "fa24/lectures_qmd_complete/lec02/comments-data-types-and-errors.html#comments",
    "title": "Comments, Data Types, and Errors",
    "section": "Comments",
    "text": "Comments\n\nWhich version do you prefer?\nComments are used to explain what code does. Good programmers write code that is self-evident and use comments only where necessary. In assignments, we’ll also use comments to provide you with instructions."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/comments-data-types-and-errors.html#comments-1",
    "href": "fa24/lectures_qmd_complete/lec02/comments-data-types-and-errors.html#comments-1",
    "title": "Comments, Data Types, and Errors",
    "section": "Comments",
    "text": "Comments\n\nWhich version do you prefer?\nComments are used to explain what code does. Good programmers write code that is self-evident and use comments only where necessary. In assignments, we’ll also use comments to provide you with instructions.\nYou can have both code and comments on the same line.\nAnything on a line after # is a comment and is not evaluated."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/comments-data-types-and-errors.html#data-types",
    "href": "fa24/lectures_qmd_complete/lec02/comments-data-types-and-errors.html#data-types",
    "title": "Comments, Data Types, and Errors",
    "section": "Data Types",
    "text": "Data Types\n\nWe glossed over something earlier:\nThere are two different number data types to represent numbers in Python:\nThe data type of a value determines how Python evaluates expressions involving that value"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/comments-data-types-and-errors.html#errors",
    "href": "fa24/lectures_qmd_complete/lec02/comments-data-types-and-errors.html#errors",
    "title": "Comments, Data Types, and Errors",
    "section": "Errors",
    "text": "Errors\n\nThis will happen a lot: a central goal in this class is to learn how to interpret and address error messages.\n…we get an error message.\nIf we try dividing by 0…"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/comments-data-types-and-errors.html#syntax-errors",
    "href": "fa24/lectures_qmd_complete/lec02/comments-data-types-and-errors.html#syntax-errors",
    "title": "Comments, Data Types, and Errors",
    "section": "Syntax errors",
    "text": "Syntax errors\n\nSyntax errors create nonsensical Python code. These errors will soon become your close friends.\nNotice that the error message tells you where in your code the error occurred (with a line number and an arrow). Use that!\nExplore the code! Experimentation is encouraged. Hypothesize, edit/run code, and observe results"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/where-do-we-write-code.html",
    "href": "fa24/lectures_qmd_complete/lec02/where-do-we-write-code.html",
    "title": "Where Do We Write Code?",
    "section": "",
    "text": "Programming in Python\n\n\nArithmetic\n\n\nJupyter Shortcuts\n\n\nComments, Data Types, and Errors\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/where-do-we-write-code.html#what-is-python-code",
    "href": "fa24/lectures_qmd_complete/lec02/where-do-we-write-code.html#what-is-python-code",
    "title": "Where Do We Write Code?",
    "section": "",
    "text": "Programming in Python\n\n\nArithmetic\n\n\nJupyter Shortcuts\n\n\nComments, Data Types, and Errors\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/where-do-we-write-code.html#what-is-a-computer-program-what-is-code",
    "href": "fa24/lectures_qmd_complete/lec02/where-do-we-write-code.html#what-is-a-computer-program-what-is-code",
    "title": "Where Do We Write Code?",
    "section": "What is a computer program? What is code?",
    "text": "What is a computer program? What is code?\n\nCode refers to a computer program writtenin a particular programming language.\nIn this class, we use the Python language to write Python code.\nA computer program is a [set or sequence] of instructions in a programming language. [Wikipedia]\nComputer programs are nothing more than recipes: we write programs that tell the computer exactly what to do, and it does exactly that – nothing more, and nothing less.\nCommon (cold) take: computers are dumb."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/where-do-we-write-code.html#where-do-we-write-code",
    "href": "fa24/lectures_qmd_complete/lec02/where-do-we-write-code.html#where-do-we-write-code",
    "title": "Where Do We Write Code?",
    "section": "Where Do We Write Code?",
    "text": "Where Do We Write Code?\n\n\nProgramming in Python\n\n\nArithmetic\n\n\nJupyter Shortcuts\n\n\nComments, Data Types, and Errors\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/where-do-we-write-code.html#where-do-we-write-code-1",
    "href": "fa24/lectures_qmd_complete/lec02/where-do-we-write-code.html#where-do-we-write-code-1",
    "title": "Where Do We Write Code?",
    "section": "Where do we write code?",
    "text": "Where do we write code?\n\nTraditionally, code is written in a text editor or IDE, and then run in a command-line interface.\nVS Code, a popular text editor.\nCommand Line Interface\nWhile we could do everything in command-line interfaces, they aren’t the best suited for data science work, which often requires visualizations and written reports."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/where-do-we-write-code.html#where-do-we-write-code-2",
    "href": "fa24/lectures_qmd_complete/lec02/where-do-we-write-code.html#where-do-we-write-code-2",
    "title": "Where Do We Write Code?",
    "section": "Where do we write code?",
    "text": "Where do we write code?\n\nJupyter Notebooks allow us to write and run code within a single document. They also allow us to embedded text and code. We will use these exclusively!\nYou will learn about more coding tools if you take more CS/DS classes."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/where-do-we-write-code.html#why-write-code-as-a-data-scientist",
    "href": "fa24/lectures_qmd_complete/lec02/where-do-we-write-code.html#why-write-code-as-a-data-scientist",
    "title": "Where Do We Write Code?",
    "section": "Why write code as a data scientist?",
    "text": "Why write code as a data scientist?\n\nCompute\nVisualize\nShare"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/what-is-python-code.html",
    "href": "fa24/lectures_qmd_complete/lec02/what-is-python-code.html",
    "title": "What Is Python Code?",
    "section": "",
    "text": "Programming in Python\n\n\nArithmetic\n\n\nJupyter Shortcuts\n\n\nComments, Data Types, and Errors\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/what-is-python-code.html#what-is-python-code",
    "href": "fa24/lectures_qmd_complete/lec02/what-is-python-code.html#what-is-python-code",
    "title": "What Is Python Code?",
    "section": "",
    "text": "Programming in Python\n\n\nArithmetic\n\n\nJupyter Shortcuts\n\n\nComments, Data Types, and Errors\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/what-is-python-code.html#what-is-a-computer-program-what-is-code",
    "href": "fa24/lectures_qmd_complete/lec02/what-is-python-code.html#what-is-a-computer-program-what-is-code",
    "title": "What Is Python Code?",
    "section": "What is a computer program? What is code?",
    "text": "What is a computer program? What is code?\n\nCode refers to a computer program writtenin a particular programming language.\nIn this class, we use the Python language to write Python code.\nA computer program is a [set or sequence] of instructions in a programming language. [Wikipedia]\nComputer programs are nothing more than recipes: we write programs that tell the computer exactly what to do, and it does exactly that – nothing more, and nothing less.\nCommon (cold) take: computers are dumb."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/what-is-python-code.html#why-python",
    "href": "fa24/lectures_qmd_complete/lec02/what-is-python-code.html#why-python",
    "title": "What Is Python Code?",
    "section": "Why Python?",
    "text": "Why Python?\n\nPopular.\nVariety of uses.\n\nWeb development.\nScientific computing.\nData science and machine learning.\nNot really used for developing applications.\n\nData 8, CS61A, and more!\nEasy to dive right in!"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/what-is-python-code.html#where-do-we-write-code",
    "href": "fa24/lectures_qmd_complete/lec02/what-is-python-code.html#where-do-we-write-code",
    "title": "What Is Python Code?",
    "section": "Where Do We Write Code?",
    "text": "Where Do We Write Code?\n\n\nProgramming in Python\n\n\nArithmetic\n\n\nJupyter Shortcuts\n\n\nComments, Data Types, and Errors\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/what-is-python-code.html#where-do-we-write-code-1",
    "href": "fa24/lectures_qmd_complete/lec02/what-is-python-code.html#where-do-we-write-code-1",
    "title": "What Is Python Code?",
    "section": "Where do we write code?",
    "text": "Where do we write code?\n\nTraditionally, code is written in a text editor or IDE, and then run in a command-line interface.\nVS Code, a popular text editor.\nCommand Line Interface\nWhile we could do everything in command-line interfaces, they aren’t the best suited for data science work, which often requires visualizations and written reports."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/what-is-python-code.html#where-do-we-write-code-2",
    "href": "fa24/lectures_qmd_complete/lec02/what-is-python-code.html#where-do-we-write-code-2",
    "title": "What Is Python Code?",
    "section": "Where do we write code?",
    "text": "Where do we write code?\n\nJupyter Notebooks allow us to write and run code within a single document. They also allow us to embedded text and code. We will use these exclusively!\nYou will learn about more coding tools if you take more CS/DS classes."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/what-is-python-code.html#why-write-code-as-a-data-scientist",
    "href": "fa24/lectures_qmd_complete/lec02/what-is-python-code.html#why-write-code-as-a-data-scientist",
    "title": "What Is Python Code?",
    "section": "Why write code as a data scientist?",
    "text": "Why write code as a data scientist?\n\nCompute\nVisualize\nShare"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/what-is-python-code.html#python-as-a-calculator",
    "href": "fa24/lectures_qmd_complete/lec02/what-is-python-code.html#python-as-a-calculator",
    "title": "What Is Python Code?",
    "section": "Python as a calculator",
    "text": "Python as a calculator\n\nFor now, think of Python as a calculator:\nCalculators take expressions and compute values.\n17\n-1 + 3.14\n2 ** 3\n(17 - 14) / 2\n15 % 2\nThe following are all expressions.\nNotes:\nExpressions consist of values (like 2) and operators (like + and **).\nExpressions evaluate to values.\nexpression"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/what-is-python-code.html#common-python-operators",
    "href": "fa24/lectures_qmd_complete/lec02/what-is-python-code.html#common-python-operators",
    "title": "What Is Python Code?",
    "section": "Common Python Operators",
    "text": "Common Python Operators\n\n✅"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/what-is-python-code.html#common-python-operators-1",
    "href": "fa24/lectures_qmd_complete/lec02/what-is-python-code.html#common-python-operators-1",
    "title": "What Is Python Code?",
    "section": "Common Python Operators",
    "text": "Common Python Operators\n\nWait, why are there two division operators?"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/numpy.html",
    "href": "fa24/lectures_qmd_complete/lec05/numpy.html",
    "title": "NumPy",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 05\nWhat it means to work with data.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/numpy.html#numpy-indexing-variables-in-data-science",
    "href": "fa24/lectures_qmd_complete/lec05/numpy.html#numpy-indexing-variables-in-data-science",
    "title": "NumPy",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 05\nWhat it means to work with data.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/numpy.html#numpy",
    "href": "fa24/lectures_qmd_complete/lec05/numpy.html#numpy",
    "title": "NumPy",
    "section": "NumPy",
    "text": "NumPy\n\n➤\n\nArray Functions\n\n\nNumPy\n\n\nIndexing\n\n\nMaterials-Based Research"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/numpy.html#numpy-a-convenient-function-library",
    "href": "fa24/lectures_qmd_complete/lec05/numpy.html#numpy-a-convenient-function-library",
    "title": "NumPy",
    "section": "NumPy: A Convenient Function Library",
    "text": "NumPy: A Convenient Function Library\n\nEarlier, we computed averages using built-in Python functions:\narr = make_array(30, -40, -4.5, 0, 35)\navg = sum(arr)/len(arr)\navg\nIn [2]:\nComputing averages of array elements happens a lot in data science!\nThe NumPy package function np.average() is human-readable and convenient.\n4.1\nOut [2]:"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/numpy.html#the-numpy-package",
    "href": "fa24/lectures_qmd_complete/lec05/numpy.html#the-numpy-package",
    "title": "NumPy",
    "section": "The NumPy package",
    "text": "The NumPy package\n\nNumPy (pronounced “num pie”) is a Python package* with convenient andpowerful functions for manipulating arrays.\n*For our purposes, “library”, “package”, and “module” all mean similar things.\nWe generally put this import statement at the top of our notebook,then prepend np. to call a NumPy function."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/numpy.html#element-wise-numpy-functions",
    "href": "fa24/lectures_qmd_complete/lec05/numpy.html#element-wise-numpy-functions",
    "title": "NumPy",
    "section": "Element-wise NumPy Functions",
    "text": "Element-wise NumPy Functions\n\nNumPy functions\nMany of these functions work on both arrays and individual numbers.\nWe’ll point you to NumPy functions as they come up; you don’t need to memorize them. The course website has a list of some of them.\nN-length array\nN-length array"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/numpy.html#common-numpy-functions",
    "href": "fa24/lectures_qmd_complete/lec05/numpy.html#common-numpy-functions",
    "title": "NumPy",
    "section": "Common NumPy Functions",
    "text": "Common NumPy Functions\n\nNumPy functions\nN-length array\nN-length array"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/array-functions.html",
    "href": "fa24/lectures_qmd_complete/lec05/array-functions.html",
    "title": "Array Functions",
    "section": "",
    "text": "Array Functions\n\n\nNumPy\n\n\nIndexing\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/array-functions.html#array-functions",
    "href": "fa24/lectures_qmd_complete/lec05/array-functions.html#array-functions",
    "title": "Array Functions",
    "section": "",
    "text": "Array Functions\n\n\nNumPy\n\n\nIndexing\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/array-functions.html#standard-functions",
    "href": "fa24/lectures_qmd_complete/lec05/array-functions.html#standard-functions",
    "title": "Array Functions",
    "section": "Standard Functions",
    "text": "Standard Functions\n\nWhile the function names are identical to what we saw for int/float/strs, the call expressions evaluate differently with our new array data type."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/array-functions.html#element-wise-numpy-functions",
    "href": "fa24/lectures_qmd_complete/lec05/array-functions.html#element-wise-numpy-functions",
    "title": "Array Functions",
    "section": "Element-wise NumPy Functions",
    "text": "Element-wise NumPy Functions\n\nNumPy functions\nMany of these functions work on both arrays and individual numbers.\nWe’ll point you to NumPy functions as they come up; you don’t need to memorize them. The course website has a list of some of them.\nN-length array\nN-length array"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/array-functions.html#common-numpy-functions",
    "href": "fa24/lectures_qmd_complete/lec05/array-functions.html#common-numpy-functions",
    "title": "Array Functions",
    "section": "Common NumPy Functions",
    "text": "Common NumPy Functions\n\nNumPy functions\nN-length array\nN-length array"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/array-functions.html#even-more-functions",
    "href": "fa24/lectures_qmd_complete/lec05/array-functions.html#even-more-functions",
    "title": "Array Functions",
    "section": "Even More Functions",
    "text": "Even More Functions\n\nNumPy functions\nN-length array\nN-length array"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/array-functions.html#questions-about-functions",
    "href": "fa24/lectures_qmd_complete/lec05/array-functions.html#questions-about-functions",
    "title": "Array Functions",
    "section": "Questions About Functions?",
    "text": "Questions About Functions?\n\nData 6 Python Reference™"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/array-functions.html#array-methods",
    "href": "fa24/lectures_qmd_complete/lec05/array-functions.html#array-methods",
    "title": "Array Functions",
    "section": "Array Methods",
    "text": "Array Methods\n\nMethods are functions that we call with “dot” syntax. There are several array methods that make it easy to calculate values of interest.\nTerminology note: Method calls are where the function operates directly on the array arr.\nIn these examples, method calls are equivalent to the NumPy package functions.\nThe most common array method is item(), which is used for array indexing."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/array-functions.html#an-elements-index-is-its-position-in-an-array",
    "href": "fa24/lectures_qmd_complete/lec05/array-functions.html#an-elements-index-is-its-position-in-an-array",
    "title": "Array Functions",
    "section": "An Element’s Index Is Its Position in an Array",
    "text": "An Element’s Index Is Its Position in an Array\n\nWhen people stand in a line, each person has a position.\nSimilarly, each element (i.e., value) of an array has a position – called its index.\nPerson 1\nPerson 7\nPython, like most programming languages, is 0-indexed. This means that in an array, the first element has index 0, not 1.\nIndex 0\nIndex 6\nIndices\n0 1 2 3 4\nFor a length-5 array:"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/array-functions.html#array-indexing",
    "href": "fa24/lectures_qmd_complete/lec05/array-functions.html#array-indexing",
    "title": "Array Functions",
    "section": "Array Indexing",
    "text": "Array Indexing\n\nWe can access an element in an array by using its index and the item() method:\narr.item(index)\nThough int_arr has 5 elements, the largest valid index is 4."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/variables-in-data-science.html",
    "href": "fa24/lectures_qmd_complete/lec05/variables-in-data-science.html",
    "title": "Variables in Data Science",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 05\nWhat it means to work with data.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/variables-in-data-science.html#numpy-indexing-variables-in-data-science",
    "href": "fa24/lectures_qmd_complete/lec05/variables-in-data-science.html#numpy-indexing-variables-in-data-science",
    "title": "Variables in Data Science",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 05\nWhat it means to work with data.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/variables-in-data-science.html#side-note-the-datascience-package",
    "href": "fa24/lectures_qmd_complete/lec05/variables-in-data-science.html#side-note-the-datascience-package",
    "title": "Variables in Data Science",
    "section": "Side Note: The datascience Package",
    "text": "Side Note: The datascience Package\n\ndatascience package import statement:\nThe slightly different syntax allows us to call package functions without prepending datascience.\nThe make_array() functionis from this package!\nFun fact: The datascience package was written by UC Berkeley specifically for data science education. It’s designed to support many Python packages like NumPy.\n“Import everything”"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/variables-in-data-science.html#variables-in-data-science",
    "href": "fa24/lectures_qmd_complete/lec05/variables-in-data-science.html#variables-in-data-science",
    "title": "Variables in Data Science",
    "section": "Variables in Data Science",
    "text": "Variables in Data Science\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/variables-in-data-science.html#terminology-data-tabular-data-and-records",
    "href": "fa24/lectures_qmd_complete/lec05/variables-in-data-science.html#terminology-data-tabular-data-and-records",
    "title": "Variables in Data Science",
    "section": "Terminology: Data, Tabular Data, and Records",
    "text": "Terminology: Data, Tabular Data, and Records\n\nA dataset is a collection of data.\n“[Data] are systematically collected elements of information about the world.”\n– King, Keohane, and Verba. Designing Social Inquiry (1994).\nIn this course we will often use tabular data:\nColumns\nRows (also known as records).\nrow\ncolumn\n\n\n\nSpeaker notes\n\n“Data” are systematically collected elements of information about the world. They can be qualitative or quantitative in style. Sometimes data are collected to evaluate a very specific theory, but not so infrequently, scholars collect data before knowing precisely what they are interested in finding out. Moreover, even if data are collected to evaluate a specific hypothesis, researchers may ultimately be interested in questions that had not occurred to them previously."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/variables-in-data-science.html#terminology-variables",
    "href": "fa24/lectures_qmd_complete/lec05/variables-in-data-science.html#terminology-variables",
    "title": "Variables in Data Science",
    "section": "Terminology: Variables",
    "text": "Terminology: Variables\n\nIn data science, a variable is a measurable feature, attribute, and/or representation of a concept. It can have different values for different individuals.\nvariable\n\n\n\nSpeaker notes\n\n“Data” are systematically collected elements of information about the world. They can be qualitative or quantitative in style. Sometimes data are collected to evaluate a very specific theory, but not so infrequently, scholars collect data before knowing precisely what they are interested in finding out. Moreover, even if data are collected to evaluate a specific hypothesis, researchers may ultimately be interested in questions that had not occurred to them previously."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/variables-in-data-science.html#terminology-variables-1",
    "href": "fa24/lectures_qmd_complete/lec05/variables-in-data-science.html#terminology-variables-1",
    "title": "Variables in Data Science",
    "section": "Terminology: Variables",
    "text": "Terminology: Variables\n\nIn data science, a variable is a measurable feature, attribute, and/or representation of a concept. It can have different values for different individuals.\nA column contains/captures all measurements for a particular variable from our dataset.\nExample 1: This column represents the estimated number of people 25 years or older in each state. Values are positive integers.\nvariable\n\n\n\nSpeaker notes\n\n“Data” are systematically collected elements of information about the world. They can be qualitative or quantitative in style. Sometimes data are collected to evaluate a very specific theory, but not so infrequently, scholars collect data before knowing precisely what they are interested in finding out. Moreover, even if data are collected to evaluate a specific hypothesis, researchers may ultimately be interested in questions that had not occurred to them previously."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/variables-in-data-science.html#terminology-variables-2",
    "href": "fa24/lectures_qmd_complete/lec05/variables-in-data-science.html#terminology-variables-2",
    "title": "Variables in Data Science",
    "section": "Terminology: Variables",
    "text": "Terminology: Variables\n\nIn data science, a variable is a measurable feature, attribute, and/or representation of a concept. It can have different values for different individuals.\nA column contains/captures all measurements for a particular variable from our dataset.\nExample 2: This column represents the recorded sex of each respondent. Values are binary categories.\nvariable\n\n\n\nSpeaker notes\n\n“Data” are systematically collected elements of information about the world. They can be qualitative or quantitative in style. Sometimes data are collected to evaluate a very specific theory, but not so infrequently, scholars collect data before knowing precisely what they are interested in finding out. Moreover, even if data are collected to evaluate a specific hypothesis, researchers may ultimately be interested in questions that had not occurred to them previously."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/variables-in-data-science.html#terminology-variables-3",
    "href": "fa24/lectures_qmd_complete/lec05/variables-in-data-science.html#terminology-variables-3",
    "title": "Variables in Data Science",
    "section": "Terminology: Variables",
    "text": "Terminology: Variables\n\nIn data science, a variable is a measurable feature, attribute, and/or representation of a concept. It can have different values for different individuals.\nvariable\nVariables are empirical measurements; they are often metrics that researchers create to approximate the specific dimensions of an abstract concept of a research question.\nSide note: In computer science, Python names are also called variables. However, in this class we’ll always try to refer to Python names as names to avoid confusing it with the data science definition of a variable.\n\n\n\nSpeaker notes\n\n“Data” are systematically collected elements of information about the world. They can be qualitative or quantitative in style. Sometimes data are collected to evaluate a very specific theory, but not so infrequently, scholars collect data before knowing precisely what they are interested in finding out. Moreover, even if data are collected to evaluate a specific hypothesis, researchers may ultimately be interested in questions that had not occurred to them previously."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/variables-in-data-science.html#research-question-and-data-collection",
    "href": "fa24/lectures_qmd_complete/lec05/variables-in-data-science.html#research-question-and-data-collection",
    "title": "Variables in Data Science",
    "section": "Research Question and Data Collection",
    "text": "Research Question and Data Collection\n\nThe definition of variables is impacted not only by researchers’ interests, but also the process and limitations of data collection.\nWhat is the level of educational attainment in 2020 among US resident adults?\nPose the Research Question\nHousehold survey\nPrivate dataset by household\nPublic dataset by geographic region\naggregation\nTable 1\nTable 2\n(this lecture)"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/variables-in-data-science.html#identifying-confounding-variables",
    "href": "fa24/lectures_qmd_complete/lec05/variables-in-data-science.html#identifying-confounding-variables",
    "title": "Variables in Data Science",
    "section": "Identifying Confounding Variables",
    "text": "Identifying Confounding Variables\n\nConfounding variables can be linked to other concepts in a way that makes two concepts appear related (even when they are not).\nTranslate a concept into a variable\nDefine the variable domain (i.e., all possible values)\nConsider other factors that may influence the outcomes of the study, and repeat\nWhat is the level of educational attainment in 2020 among US resident adults?\nPose the Research Question\nUS geographic region\nEducational attainment level\n?\nOther social systems?"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/variables-in-data-science.html#identifying-confounding-variables-1",
    "href": "fa24/lectures_qmd_complete/lec05/variables-in-data-science.html#identifying-confounding-variables-1",
    "title": "Variables in Data Science",
    "section": "Identifying Confounding Variables",
    "text": "Identifying Confounding Variables\n\nThese are just a few confounding variables measured in the ACS. What kinds of confounding variables would likely not be measured in a government study?\nWhat is the level of educational attainment in 2020 among US resident adults?\nPose the Research Question\nRace/Ethnicity\nWhite alone\nWhite alone, not Hispanic or Latino\nBlack alone\nAmerican Indian or Alaska Native alone\nAsian alone\nNative Hawaiian and Other Pacific Islander Alone\nSome other race alone\nTwo or more races\nHispanic or Latino Origin\nSex\nMale\nFemale\nIncome/Earnings\n(numeric amount)\nUS geographic region\nEducational attainment level\n?\n\n\n\nSpeaker notes\n\nhttps://www.nationalgeographic.com/culture/article/race-ethnicity “Race” is usually associated with biology and linked with physical characteristics such as skin color or hair texture. “Ethnicity” is linked with cultural expression and identification. However, both are social constructs used to categorize and characterize seemingly distinct populations."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec18/truth-tables.html",
    "href": "fa24/lectures_qmd_complete/lec18/truth-tables.html",
    "title": "Truth Tables",
    "section": "",
    "text": "Motivation\n\n\nIf and If-Else Statements\n\n\nElif\n\n\nTruthy Values\n\n\nDemo\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec18/truth-tables.html#truthy-values",
    "href": "fa24/lectures_qmd_complete/lec18/truth-tables.html#truthy-values",
    "title": "Truth Tables",
    "section": "",
    "text": "Motivation\n\n\nIf and If-Else Statements\n\n\nElif\n\n\nTruthy Values\n\n\nDemo\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec18/truth-tables.html#truthy-values-1",
    "href": "fa24/lectures_qmd_complete/lec18/truth-tables.html#truthy-values-1",
    "title": "Truth Tables",
    "section": "Truthy Values",
    "text": "Truthy Values\n\nIt turns out that almost everything evaluates to True when converted to bool.\nThese are pretty much the only exceptions (these all evaluate to False):\nFalse\n’’(the empty string)\n0 (and hence 0.0)\nNone\nGenerally things that are empty (empty lists, sets, dictionaries, etc)\nIf something evaluates to True when converted to bool, we call it a truthy value. Otherwise, we call it a falsy value."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec18/truth-tables.html#truthy-values-in-practice",
    "href": "fa24/lectures_qmd_complete/lec18/truth-tables.html#truthy-values-in-practice",
    "title": "Truth Tables",
    "section": "Truthy Values in Practice",
    "text": "Truthy Values in Practice\n\nConditional statements use the truthiness of an expression."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec18/elif.html",
    "href": "fa24/lectures_qmd_complete/lec18/elif.html",
    "title": "Elif",
    "section": "",
    "text": "Motivation\n\n\nIf and If-Else Statements\n\n\nElif\n\n\nTruthy Values\n\n\nDemo\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec18/elif.html#elif",
    "href": "fa24/lectures_qmd_complete/lec18/elif.html#elif",
    "title": "Elif",
    "section": "",
    "text": "Motivation\n\n\nIf and If-Else Statements\n\n\nElif\n\n\nTruthy Values\n\n\nDemo\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec18/comparisons.html",
    "href": "fa24/lectures_qmd_complete/lec18/comparisons.html",
    "title": "Comparisons",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 18\nExpanding our programming toolkit.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec18/comparisons.html#comparisons-and-control",
    "href": "fa24/lectures_qmd_complete/lec18/comparisons.html#comparisons-and-control",
    "title": "Comparisons",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 18\nExpanding our programming toolkit.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec18/comparisons.html#comparisons",
    "href": "fa24/lectures_qmd_complete/lec18/comparisons.html#comparisons",
    "title": "Comparisons",
    "section": "Comparisons",
    "text": "Comparisons\n\n\nComparisons\n\n\nBoolean Operators\n\n\nTruth Tables\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec18/comparisons.html#comparisons-1",
    "href": "fa24/lectures_qmd_complete/lec18/comparisons.html#comparisons-1",
    "title": "Comparisons",
    "section": "Comparisons",
    "text": "Comparisons\n\nNaturally, we will want to compare values in our code.\n# is age at least age_limit?\nage_limit = 21\nage = 17\n# is password_guess equal to true_password?\ntrue_password = ‘qwerty1093x!’\npassword_guess = ‘QWERTY1093x!’"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec20/while-loops.html",
    "href": "fa24/lectures_qmd_complete/lec20/while-loops.html",
    "title": "While Loops",
    "section": "",
    "text": "Review: For Loops\n\n\nWhile Loops\n\n\nExamples\n\n\nDemo: Sorting an Array\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec20/while-loops.html#review-for-loops",
    "href": "fa24/lectures_qmd_complete/lec20/while-loops.html#review-for-loops",
    "title": "While Loops",
    "section": "",
    "text": "Review: For Loops\n\n\nWhile Loops\n\n\nExamples\n\n\nDemo: Sorting an Array\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec20/while-loops.html#while-loops",
    "href": "fa24/lectures_qmd_complete/lec20/while-loops.html#while-loops",
    "title": "While Loops",
    "section": "While Loops",
    "text": "While Loops\n\n\nReview: For Loops\n\n\nWhile Loops\n\n\nExamples\n\n\nDemo: Sorting an Array\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec20/while-loops.html#two-types-of-loops",
    "href": "fa24/lectures_qmd_complete/lec20/while-loops.html#two-types-of-loops",
    "title": "While Loops",
    "section": "Two Types of Loops",
    "text": "Two Types of Loops\n\nLoops allow us to repeat the execution of code.\nThere are two types of loops in Python: the while loop and the for loop.\nwhile :\n\n“While this condition is true, repeat this code.”\nfor  in :\n\n“For each element of this sequence, repeat this code.”\nSequences include arrays, lists, strings and more."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec20/while-loops.html#while-loops-1",
    "href": "fa24/lectures_qmd_complete/lec20/while-loops.html#while-loops-1",
    "title": "While Loops",
    "section": "While Loops",
    "text": "While Loops\n\nWhile loops repeat the code in their body while a certain boolean expression is True.\nWhile loops are often used when we don’t know how many times we need our loop to repeat\nWe often keep track of some sort of counter and check it is above, below, or equal to a certain value."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec20/review-for-loops.html",
    "href": "fa24/lectures_qmd_complete/lec20/review-for-loops.html",
    "title": "Review: For Loops",
    "section": "",
    "text": "Review: For Loops\n\n\nWhile Loops\n\n\nExamples\n\n\nDemo: Sorting an Array\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec20/review-for-loops.html#review-for-loops",
    "href": "fa24/lectures_qmd_complete/lec20/review-for-loops.html#review-for-loops",
    "title": "Review: For Loops",
    "section": "",
    "text": "Review: For Loops\n\n\nWhile Loops\n\n\nExamples\n\n\nDemo: Sorting an Array\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec20/review-for-loops.html#while-loops",
    "href": "fa24/lectures_qmd_complete/lec20/review-for-loops.html#while-loops",
    "title": "Review: For Loops",
    "section": "While Loops",
    "text": "While Loops\n\n\nReview: For Loops\n\n\nWhile Loops\n\n\nExamples\n\n\nDemo: Sorting an Array\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec20/review-for-loops.html#two-types-of-loops",
    "href": "fa24/lectures_qmd_complete/lec20/review-for-loops.html#two-types-of-loops",
    "title": "Review: For Loops",
    "section": "Two Types of Loops",
    "text": "Two Types of Loops\n\nLoops allow us to repeat the execution of code.\nThere are two types of loops in Python: the while loop and the for loop.\nwhile :\n\n“While this condition is true, repeat this code.”\nfor  in :\n\n“For each element of this sequence, repeat this code.”\nSequences include arrays, lists, strings and more."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec20/review-for-loops.html#while-loops-1",
    "href": "fa24/lectures_qmd_complete/lec20/review-for-loops.html#while-loops-1",
    "title": "Review: For Loops",
    "section": "While Loops",
    "text": "While Loops\n\nWhile loops repeat the code in their body while a certain boolean expression is True.\nWhile loops are often used when we don’t know how many times we need our loop to repeat\nWe often keep track of some sort of counter and check it is above, below, or equal to a certain value."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec16/index.html",
    "href": "fa24/lectures_qmd_complete/lec16/index.html",
    "title": "Bickel Case Study",
    "section": "",
    "text": "This chapter covers the key concepts from Lecture 16."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec16/index.html#topics-covered",
    "href": "fa24/lectures_qmd_complete/lec16/index.html#topics-covered",
    "title": "Bickel Case Study",
    "section": "Topics Covered",
    "text": "Topics Covered\n\nWrap up numerical variables & multiple variables\n1973 UC Berkeley Graduate Admissions\nSimpson’s Paradox"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec11/index.html",
    "href": "fa24/lectures_qmd_complete/lec11/index.html",
    "title": "Functions",
    "section": "",
    "text": "This chapter covers the key concepts from Lecture 11."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec11/index.html#topics-covered",
    "href": "fa24/lectures_qmd_complete/lec11/index.html#topics-covered",
    "title": "Functions",
    "section": "Topics Covered",
    "text": "Topics Covered\n\nFunctions and Parameters\nParameter Scope and Return Values\nString Methods\nDemo"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec10/the-row-data-type.html",
    "href": "fa24/lectures_qmd_complete/lec10/the-row-data-type.html",
    "title": "The Row Data Type",
    "section": "",
    "text": "Joining\n\n\nDemo\n\n\nThe Row Data Type\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec10/the-row-data-type.html#the-row-data-type",
    "href": "fa24/lectures_qmd_complete/lec10/the-row-data-type.html#the-row-data-type",
    "title": "The Row Data Type",
    "section": "",
    "text": "Joining\n\n\nDemo\n\n\nThe Row Data Type\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec10/index.html",
    "href": "fa24/lectures_qmd_complete/lec10/index.html",
    "title": "Joining and Row Methods",
    "section": "",
    "text": "This chapter covers the key concepts from Lecture 10."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec10/index.html#topics-covered",
    "href": "fa24/lectures_qmd_complete/lec10/index.html#topics-covered",
    "title": "Joining and Row Methods",
    "section": "Topics Covered",
    "text": "Topics Covered\n\nJoining\nDemo\nThe Row Data Type"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/customizing-scatter-plots.html",
    "href": "fa24/lectures_qmd_complete/lec17/customizing-scatter-plots.html",
    "title": "Customizing Scatter Plots",
    "section": "",
    "text": "Review: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/customizing-scatter-plots.html#scatter-plots",
    "href": "fa24/lectures_qmd_complete/lec17/customizing-scatter-plots.html#scatter-plots",
    "title": "Customizing Scatter Plots",
    "section": "",
    "text": "Review: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/customizing-scatter-plots.html#scatter-plots-1",
    "href": "fa24/lectures_qmd_complete/lec17/customizing-scatter-plots.html#scatter-plots-1",
    "title": "Customizing Scatter Plots",
    "section": "Scatter Plots",
    "text": "Scatter Plots\n\nScatter plots are used to visualize two numerical variables at once. To create a scatter plot from a table, you need two columns:\nA numerical column for the x-axis.\nA numerical column for the y-axis.\nThe resulting graph has one point for every row in your table.\nWe call this a graph of “y vs. x”"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/customizing-scatter-plots.html#scatter",
    "href": "fa24/lectures_qmd_complete/lec17/customizing-scatter-plots.html#scatter",
    "title": "Customizing Scatter Plots",
    "section": ".scatter()",
    "text": ".scatter()\n\nThe method t.scatter(column_for_x, column_for_y)\ncreates a scatter plot using the specified columns. Both columns must contain numerical values.\nIf only column_for_x is provided, a separate scatter plot is drawn for every other column in t (similar to the behavior of barh).\n“On average, as the number of points a player averages increases, the number of assists they average also increases.”"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/customizing-scatter-plots.html#customizing-scatter-plots",
    "href": "fa24/lectures_qmd_complete/lec17/customizing-scatter-plots.html#customizing-scatter-plots",
    "title": "Customizing Scatter Plots",
    "section": "Customizing Scatter Plots",
    "text": "Customizing Scatter Plots\n\n\nReview: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/customizing-scatter-plots.html#line-plots",
    "href": "fa24/lectures_qmd_complete/lec17/customizing-scatter-plots.html#line-plots",
    "title": "Customizing Scatter Plots",
    "section": "Line Plots",
    "text": "Line Plots\n\n\nReview: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/customizing-scatter-plots.html#motivating-line-plots",
    "href": "fa24/lectures_qmd_complete/lec17/customizing-scatter-plots.html#motivating-line-plots",
    "title": "Customizing Scatter Plots",
    "section": "Motivating Line Plots",
    "text": "Motivating Line Plots\n\nWhile a scatter plot would theoretically work in such a scenario, there are some key differences that lead us to another type of plot.\nThere’s only one y for every x.\n\nThere’s only one number of COVID cases per day.\nThere can be many people with the same height when graphing weight vs. height.\n\nWe want to emphasize a trend by “connecting the dots”.\n\n🤔\n\nWhat if we want to visualize two numerical variables, but one of them is time?\nCOVID cases per day in Alameda County.\nAverage rainfall for each month of the year in San Diego."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/customizing-scatter-plots.html#multiple-line-plots",
    "href": "fa24/lectures_qmd_complete/lec17/customizing-scatter-plots.html#multiple-line-plots",
    "title": "Customizing Scatter Plots",
    "section": "Multiple Line Plots",
    "text": "Multiple Line Plots\n\n\nReview: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/customizing-scatter-plots.html#multiple-line-plots-1",
    "href": "fa24/lectures_qmd_complete/lec17/customizing-scatter-plots.html#multiple-line-plots-1",
    "title": "Customizing Scatter Plots",
    "section": "Multiple Line Plots",
    "text": "Multiple Line Plots\n\nIf we provide plot with only a single column name, it will draw lines for every other column in your table.\nIf you want to do this, make sure to select columns first!"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/customizing-scatter-plots.html#scatter-plots-vs.-line-plots",
    "href": "fa24/lectures_qmd_complete/lec17/customizing-scatter-plots.html#scatter-plots-vs.-line-plots",
    "title": "Customizing Scatter Plots",
    "section": "Scatter Plots vs. Line Plots",
    "text": "Scatter Plots vs. Line Plots\n\nLine plots visualize the relationship between two numerical variables — one of them is ordered.\nx-axis generally represents time or distance.\nThere should only be one y value for every x value.\nUseful for identifying trends over time\nScatter plots visualize the relationship between any two numerical variables.\nNo need to have unique x (or y) values.\nUseful for identifying patterns between variables"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/customizing-scatter-plots.html#summary-scatter",
    "href": "fa24/lectures_qmd_complete/lec17/customizing-scatter-plots.html#summary-scatter",
    "title": "Customizing Scatter Plots",
    "section": "Summary: scatter",
    "text": "Summary: scatter\n\nThe method t.scatter(column_for_x, column_for_y)creates a scatter plot using the specified columns. Both columns must contain numerical values.\nOptional arguments, in addition to xaxis_title, width, etc:\ns (int): changes default size of all points.\nsizes (str): point sizes will be proportional to the values in this numerical column.\ngroup (str): points will be colored according to category in this categorical column.\nlabels (str): points will be labeled according to their value in this column."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/review-histograms.html",
    "href": "fa24/lectures_qmd_complete/lec17/review-histograms.html",
    "title": "Review: Histograms",
    "section": "",
    "text": "Review: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/review-histograms.html#review-histograms",
    "href": "fa24/lectures_qmd_complete/lec17/review-histograms.html#review-histograms",
    "title": "Review: Histograms",
    "section": "",
    "text": "Review: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/review-histograms.html#overlaid-and-side-by-side-histograms",
    "href": "fa24/lectures_qmd_complete/lec17/review-histograms.html#overlaid-and-side-by-side-histograms",
    "title": "Review: Histograms",
    "section": "Overlaid and Side-by-Side Histograms",
    "text": "Overlaid and Side-by-Side Histograms\n\n\nReview: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/review-histograms.html#histograms",
    "href": "fa24/lectures_qmd_complete/lec17/review-histograms.html#histograms",
    "title": "Review: Histograms",
    "section": "Histograms",
    "text": "Histograms\n\nA histogram visualizes the distribution of a numerical variable by binning. The method\nt.hist(column, density = False)\ncreates a histogram of the column column of t. This column must contain numerical values.\nIt automatically chooses bins for us. We can change them.\nWe will always set density = False."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/review-histograms.html#overlaid-bar-charts-vs.-overlaid-histograms",
    "href": "fa24/lectures_qmd_complete/lec17/review-histograms.html#overlaid-bar-charts-vs.-overlaid-histograms",
    "title": "Review: Histograms",
    "section": "Overlaid Bar Charts vs. Overlaid Histograms",
    "text": "Overlaid Bar Charts vs. Overlaid Histograms\n\nOverlaid Histograms visualize the relationship between one continuous numerical variable and one categorical variable\nThere should only be one y value for every x value.\nUseful for comparing numerical distributions\nOverlaid Bar Charts visualize the relationship of two or more categorical variables (normally same categories).\nUseful for comparing categorical distributions"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/multiple-line-plots.html",
    "href": "fa24/lectures_qmd_complete/lec17/multiple-line-plots.html",
    "title": "Multiple Line Plots",
    "section": "",
    "text": "Review: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/multiple-line-plots.html#scatter-plots",
    "href": "fa24/lectures_qmd_complete/lec17/multiple-line-plots.html#scatter-plots",
    "title": "Multiple Line Plots",
    "section": "",
    "text": "Review: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/multiple-line-plots.html#scatter-plots-1",
    "href": "fa24/lectures_qmd_complete/lec17/multiple-line-plots.html#scatter-plots-1",
    "title": "Multiple Line Plots",
    "section": "Scatter Plots",
    "text": "Scatter Plots\n\nScatter plots are used to visualize two numerical variables at once. To create a scatter plot from a table, you need two columns:\nA numerical column for the x-axis.\nA numerical column for the y-axis.\nThe resulting graph has one point for every row in your table.\nWe call this a graph of “y vs. x”"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/multiple-line-plots.html#customizing-scatter-plots",
    "href": "fa24/lectures_qmd_complete/lec17/multiple-line-plots.html#customizing-scatter-plots",
    "title": "Multiple Line Plots",
    "section": "Customizing Scatter Plots",
    "text": "Customizing Scatter Plots\n\n\nReview: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/multiple-line-plots.html#line-plots",
    "href": "fa24/lectures_qmd_complete/lec17/multiple-line-plots.html#line-plots",
    "title": "Multiple Line Plots",
    "section": "Line Plots",
    "text": "Line Plots\n\n\nReview: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/multiple-line-plots.html#motivating-line-plots",
    "href": "fa24/lectures_qmd_complete/lec17/multiple-line-plots.html#motivating-line-plots",
    "title": "Multiple Line Plots",
    "section": "Motivating Line Plots",
    "text": "Motivating Line Plots\n\nWhile a scatter plot would theoretically work in such a scenario, there are some key differences that lead us to another type of plot.\nThere’s only one y for every x.\n\nThere’s only one number of COVID cases per day.\nThere can be many people with the same height when graphing weight vs. height.\n\nWe want to emphasize a trend by “connecting the dots”.\n\n🤔\n\nWhat if we want to visualize two numerical variables, but one of them is time?\nCOVID cases per day in Alameda County.\nAverage rainfall for each month of the year in San Diego."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/multiple-line-plots.html#multiple-line-plots",
    "href": "fa24/lectures_qmd_complete/lec17/multiple-line-plots.html#multiple-line-plots",
    "title": "Multiple Line Plots",
    "section": "Multiple Line Plots",
    "text": "Multiple Line Plots\n\n\nReview: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/multiple-line-plots.html#multiple-line-plots-1",
    "href": "fa24/lectures_qmd_complete/lec17/multiple-line-plots.html#multiple-line-plots-1",
    "title": "Multiple Line Plots",
    "section": "Multiple Line Plots",
    "text": "Multiple Line Plots\n\nIf we provide plot with only a single column name, it will draw lines for every other column in your table.\nIf you want to do this, make sure to select columns first!"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/multiple-line-plots.html#scatter-plots-vs.-line-plots",
    "href": "fa24/lectures_qmd_complete/lec17/multiple-line-plots.html#scatter-plots-vs.-line-plots",
    "title": "Multiple Line Plots",
    "section": "Scatter Plots vs. Line Plots",
    "text": "Scatter Plots vs. Line Plots\n\nLine plots visualize the relationship between two numerical variables — one of them is ordered.\nx-axis generally represents time or distance.\nThere should only be one y value for every x value.\nUseful for identifying trends over time\nScatter plots visualize the relationship between any two numerical variables.\nNo need to have unique x (or y) values.\nUseful for identifying patterns between variables"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/scatter-plots.html",
    "href": "fa24/lectures_qmd_complete/lec17/scatter-plots.html",
    "title": "Scatter Plots",
    "section": "",
    "text": "Review: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/scatter-plots.html#scatter-plots",
    "href": "fa24/lectures_qmd_complete/lec17/scatter-plots.html#scatter-plots",
    "title": "Scatter Plots",
    "section": "",
    "text": "Review: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/scatter-plots.html#scatter-plots-1",
    "href": "fa24/lectures_qmd_complete/lec17/scatter-plots.html#scatter-plots-1",
    "title": "Scatter Plots",
    "section": "Scatter Plots",
    "text": "Scatter Plots\n\nScatter plots are used to visualize two numerical variables at once. To create a scatter plot from a table, you need two columns:\nA numerical column for the x-axis.\nA numerical column for the y-axis.\nThe resulting graph has one point for every row in your table.\nWe call this a graph of “y vs. x”"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/scatter-plots.html#scatter",
    "href": "fa24/lectures_qmd_complete/lec17/scatter-plots.html#scatter",
    "title": "Scatter Plots",
    "section": ".scatter()",
    "text": ".scatter()\n\nThe method t.scatter(column_for_x, column_for_y)\ncreates a scatter plot using the specified columns. Both columns must contain numerical values.\nIf only column_for_x is provided, a separate scatter plot is drawn for every other column in t (similar to the behavior of barh).\n“On average, as the number of points a player averages increases, the number of assists they average also increases.”"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/scatter-plots.html#customizing-scatter-plots",
    "href": "fa24/lectures_qmd_complete/lec17/scatter-plots.html#customizing-scatter-plots",
    "title": "Scatter Plots",
    "section": "Customizing Scatter Plots",
    "text": "Customizing Scatter Plots\n\n\nReview: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/scatter-plots.html#line-plots",
    "href": "fa24/lectures_qmd_complete/lec17/scatter-plots.html#line-plots",
    "title": "Scatter Plots",
    "section": "Line Plots",
    "text": "Line Plots\n\n\nReview: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/scatter-plots.html#motivating-line-plots",
    "href": "fa24/lectures_qmd_complete/lec17/scatter-plots.html#motivating-line-plots",
    "title": "Scatter Plots",
    "section": "Motivating Line Plots",
    "text": "Motivating Line Plots\n\nWhile a scatter plot would theoretically work in such a scenario, there are some key differences that lead us to another type of plot.\nThere’s only one y for every x.\n\nThere’s only one number of COVID cases per day.\nThere can be many people with the same height when graphing weight vs. height.\n\nWe want to emphasize a trend by “connecting the dots”.\n\n🤔\n\nWhat if we want to visualize two numerical variables, but one of them is time?\nCOVID cases per day in Alameda County.\nAverage rainfall for each month of the year in San Diego."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/scatter-plots.html#multiple-line-plots",
    "href": "fa24/lectures_qmd_complete/lec17/scatter-plots.html#multiple-line-plots",
    "title": "Scatter Plots",
    "section": "Multiple Line Plots",
    "text": "Multiple Line Plots\n\n\nReview: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/scatter-plots.html#multiple-line-plots-1",
    "href": "fa24/lectures_qmd_complete/lec17/scatter-plots.html#multiple-line-plots-1",
    "title": "Scatter Plots",
    "section": "Multiple Line Plots",
    "text": "Multiple Line Plots\n\nIf we provide plot with only a single column name, it will draw lines for every other column in your table.\nIf you want to do this, make sure to select columns first!"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/scatter-plots.html#scatter-plots-vs.-line-plots",
    "href": "fa24/lectures_qmd_complete/lec17/scatter-plots.html#scatter-plots-vs.-line-plots",
    "title": "Scatter Plots",
    "section": "Scatter Plots vs. Line Plots",
    "text": "Scatter Plots vs. Line Plots\n\nLine plots visualize the relationship between two numerical variables — one of them is ordered.\nx-axis generally represents time or distance.\nThere should only be one y value for every x value.\nUseful for identifying trends over time\nScatter plots visualize the relationship between any two numerical variables.\nNo need to have unique x (or y) values.\nUseful for identifying patterns between variables"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/scatter-plots.html#summary-scatter",
    "href": "fa24/lectures_qmd_complete/lec17/scatter-plots.html#summary-scatter",
    "title": "Scatter Plots",
    "section": "Summary: scatter",
    "text": "Summary: scatter\n\nThe method t.scatter(column_for_x, column_for_y)creates a scatter plot using the specified columns. Both columns must contain numerical values.\nOptional arguments, in addition to xaxis_title, width, etc:\ns (int): changes default size of all points.\nsizes (str): point sizes will be proportional to the values in this numerical column.\ngroup (str): points will be colored according to category in this categorical column.\nlabels (str): points will be labeled according to their value in this column."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec26/where-to-go-from-here.html",
    "href": "fa24/lectures_qmd_complete/lec26/where-to-go-from-here.html",
    "title": "Where To Go From Here",
    "section": "",
    "text": "Final Exam Logistics\n\n\nWhat You Learned\n\n\nWhere To Go From Here\n\n\nStaff Ask Us Anything\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec26/where-to-go-from-here.html#where-to-go-from-here",
    "href": "fa24/lectures_qmd_complete/lec26/where-to-go-from-here.html#where-to-go-from-here",
    "title": "Where To Go From Here",
    "section": "",
    "text": "Final Exam Logistics\n\n\nWhat You Learned\n\n\nWhere To Go From Here\n\n\nStaff Ask Us Anything\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec26/where-to-go-from-here.html#where-do-you-go-from-here",
    "href": "fa24/lectures_qmd_complete/lec26/where-to-go-from-here.html#where-do-you-go-from-here",
    "title": "Where To Go From Here",
    "section": "Where Do You Go From Here?",
    "text": "Where Do You Go From Here?\n\nThere are numerous possibilities. Do the one that makes you happy!\nPretend like you never took this class and continue learning about ideas that truly interest you.\nDon’t take any other data science courses, but try and use what you’ve learned in this class in your field of interest.\nTake Data 8 and minor in data science while majoring in your field of interest.\nTake Data 8 and major in data science while also majoring in your field of interest, or major in just data science.\nTake CS 61A and major in computer science (and another major).\nLook into a computer science or data science graduate program\nWhichever route you choose, you’re more than equipped to handle what’s in front of you."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec26/index.html",
    "href": "fa24/lectures_qmd_complete/lec26/index.html",
    "title": "Conclusion",
    "section": "",
    "text": "This chapter covers the key concepts from Lecture 26."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec26/index.html#topics-covered",
    "href": "fa24/lectures_qmd_complete/lec26/index.html#topics-covered",
    "title": "Conclusion",
    "section": "Topics Covered",
    "text": "Topics Covered\n\nFinal Exam Logistics\nWhat You Learned\nWhere To Go From Here\nStaff Ask Us Anything"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec26/final-exam-logistics.html",
    "href": "fa24/lectures_qmd_complete/lec26/final-exam-logistics.html",
    "title": "Final Exam Logistics",
    "section": "",
    "text": "Final Exam Logistics\n\n\nWhat You Learned\n\n\nWhere To Go From Here\n\n\nStaff Ask Us Anything\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec26/final-exam-logistics.html#stickers-you-will-receive-them-at-the-final-exam",
    "href": "fa24/lectures_qmd_complete/lec26/final-exam-logistics.html#stickers-you-will-receive-them-at-the-final-exam",
    "title": "Final Exam Logistics",
    "section": "",
    "text": "Final Exam Logistics\n\n\nWhat You Learned\n\n\nWhere To Go From Here\n\n\nStaff Ask Us Anything\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec26/final-exam-logistics.html#final-exam-logistics",
    "href": "fa24/lectures_qmd_complete/lec26/final-exam-logistics.html#final-exam-logistics",
    "title": "Final Exam Logistics",
    "section": "Final Exam Logistics",
    "text": "Final Exam Logistics\n\n\nFinal Exam Logistics\n\n\nWhat You Learned\n\n\nWhere To Go From Here\n\n\nStaff Ask Us Anything\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec26/final-exam-logistics.html#final-exam-logistics-1",
    "href": "fa24/lectures_qmd_complete/lec26/final-exam-logistics.html#final-exam-logistics-1",
    "title": "Final Exam Logistics",
    "section": "Final Exam Logistics",
    "text": "Final Exam Logistics\n\nThe main final exam will take place on Friday, December 20th at 3 PM in Wheeler 222\nThe exam will last 1 hour and 50 minutes (2 hours 45 minutes for 150% time)\nWhat to Bring\nPencils or pens\nCal1 Card (for Student ID #)\nWe will provide printed cheat sheets\nYou can bring two front and back sides of a cheat sheet if you’d like\nWhat to Expect\nSimilar structure to Quiz 1 and Quiz 2, but twice as long\nCovers all content minus readings (plus Guest Lecture)\nMix of multiple choice, true/false, short answer, and coding questions"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec19/for-loops.html",
    "href": "fa24/lectures_qmd_complete/lec19/for-loops.html",
    "title": "For Loops",
    "section": "",
    "text": "Motivation\n\n\nFor Loops\n\n\nRanges\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec19/for-loops.html#for-loops",
    "href": "fa24/lectures_qmd_complete/lec19/for-loops.html#for-loops",
    "title": "For Loops",
    "section": "",
    "text": "Motivation\n\n\nFor Loops\n\n\nRanges\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec19/for-loops.html#two-types-of-loops",
    "href": "fa24/lectures_qmd_complete/lec19/for-loops.html#two-types-of-loops",
    "title": "For Loops",
    "section": "Two Types of Loops",
    "text": "Two Types of Loops\n\nLoops allow us to repeat the execution of code.\nThere are two types of loops in Python: the while loop and the for loop.\nwhile :\n\n“While this condition is true, repeat this code.”\nfor  in :\n\n“For each element of this sequence, repeat this code.”\nSequences include arrays, lists, strings and more."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec19/for-loops.html#for-loops-1",
    "href": "fa24/lectures_qmd_complete/lec19/for-loops.html#for-loops-1",
    "title": "For Loops",
    "section": "For Loops",
    "text": "For Loops\n\nThe simplest version of a for loop is also referred to as a “for each” loop.\nThe name after “for” (in this case n) is assigned to each value in the sequence, one at a time.\nIn the first iteration, n is 2.\nIn the second iteration, n is 4.\nIn the third iteration, n is 6.\nIn the fourth iteration, n is 8."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec19/for-loops.html#ranges-and-for-loops",
    "href": "fa24/lectures_qmd_complete/lec19/for-loops.html#ranges-and-for-loops",
    "title": "For Loops",
    "section": "Ranges and For Loops",
    "text": "Ranges and For Loops\n\n\nMotivation\n\n\nFor Loops\n\n\nRanges\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec19/for-loops.html#ranges-and-for-loops-1",
    "href": "fa24/lectures_qmd_complete/lec19/for-loops.html#ranges-and-for-loops-1",
    "title": "For Loops",
    "section": "Ranges and For Loops",
    "text": "Ranges and For Loops\n\nIf don’t have an array we’re working with but still want to repeat code a certain number of times, what can we do?"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec19/ranges.html",
    "href": "fa24/lectures_qmd_complete/lec19/ranges.html",
    "title": "Ranges",
    "section": "",
    "text": "Motivation\n\n\nFor Loops\n\n\nRanges\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec19/ranges.html#ranges-and-for-loops",
    "href": "fa24/lectures_qmd_complete/lec19/ranges.html#ranges-and-for-loops",
    "title": "Ranges",
    "section": "",
    "text": "Motivation\n\n\nFor Loops\n\n\nRanges\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec19/ranges.html#ranges-and-for-loops-1",
    "href": "fa24/lectures_qmd_complete/lec19/ranges.html#ranges-and-for-loops-1",
    "title": "Ranges",
    "section": "Ranges and For Loops",
    "text": "Ranges and For Loops\n\nIf don’t have an array we’re working with but still want to repeat code a certain number of times, what can we do?"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/create-new-tables.html",
    "href": "fa24/lectures_qmd_complete/lec07/create-new-tables.html",
    "title": "Create new tables",
    "section": "",
    "text": "➤\n\nTable Attributes and Methods\n\n\nselect, drop, and add columns\n\n\nCreate new tables\n\n\nMore Table Methods and Documentation\n\n\nDemo: WNBA Data"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/create-new-tables.html#create-new-tables",
    "href": "fa24/lectures_qmd_complete/lec07/create-new-tables.html#create-new-tables",
    "title": "Create new tables",
    "section": "",
    "text": "➤\n\nTable Attributes and Methods\n\n\nselect, drop, and add columns\n\n\nCreate new tables\n\n\nMore Table Methods and Documentation\n\n\nDemo: WNBA Data"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/demo-wnba-data.html",
    "href": "fa24/lectures_qmd_complete/lec07/demo-wnba-data.html",
    "title": "Demo: WNBA Data",
    "section": "",
    "text": "Module 1\nIntroduction to Python and Jupyter Notebooks\nModule 2\nArrays & Table Methods\nModule 3\nData Visualization\nModule 4\nSocietal Context & Final Project"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/demo-wnba-data.html#data-6-content",
    "href": "fa24/lectures_qmd_complete/lec07/demo-wnba-data.html#data-6-content",
    "title": "Demo: WNBA Data",
    "section": "",
    "text": "Module 1\nIntroduction to Python and Jupyter Notebooks\nModule 2\nArrays & Table Methods\nModule 3\nData Visualization\nModule 4\nSocietal Context & Final Project"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/demo-wnba-data.html#exploratory-data-analysis",
    "href": "fa24/lectures_qmd_complete/lec07/demo-wnba-data.html#exploratory-data-analysis",
    "title": "Demo: WNBA Data",
    "section": "Exploratory Data Analysis",
    "text": "Exploratory Data Analysis\n\nJohn Tukey (1915-2000) was a Princeton Mathematician & Statisticianand an Early Data Scientist. He coined the phrase Exploratory Data Analysis (EDA).\n[Data Analysis & Statistics, Tukey 1965; Image from LIFE Magazine]\nEDA is like detective work:\nExploratory data analysis is an attitude, a state offlexibility, a willingness to look for those things thatwe believe are not there, as well as those thatwe believe to be there.\nToday we will perform EDA by analyzing tables using Python.\n\n\n\nSpeaker notes\n\ndivide-and-conquer algorithm that recursively breaks down a DFT\nJohn Tukey, Princeton mathematician and statistician, inventor of the Fast Fourier Transform and father of Exploratory Data Analysis. Also coined the word “bit”.\nEmphasis courtesy Jeff Heer, U. Washington"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/more-table-methods-and-documentation.html",
    "href": "fa24/lectures_qmd_complete/lec07/more-table-methods-and-documentation.html",
    "title": "More Table Methods and Documentation",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 07\nLearning how to work with tables in Python.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/more-table-methods-and-documentation.html#table-fundamentals",
    "href": "fa24/lectures_qmd_complete/lec07/more-table-methods-and-documentation.html#table-fundamentals",
    "title": "More Table Methods and Documentation",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 07\nLearning how to work with tables in Python.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/more-table-methods-and-documentation.html#review-table",
    "href": "fa24/lectures_qmd_complete/lec07/more-table-methods-and-documentation.html#review-table",
    "title": "More Table Methods and Documentation",
    "section": "Review: Table",
    "text": "Review: Table\n\nReview: In this course, we often start with tabular data and perform EDA:\nColumns\nRows (also known as records).\nrow\ncolumn\n\n\n\nSpeaker notes\n\n“Data” are systematically collected elements of information about the world. They can be qualitative or quantitative in style. Sometimes data are collected to evaluate a very specific theory, but not so infrequently, scholars collect data before knowing precisely what they are interested in finding out. Moreover, even if data are collected to evaluate a specific hypothesis, researchers may ultimately be interested in questions that had not occurred to them previously."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/more-table-methods-and-documentation.html#table-attributes-and-methods",
    "href": "fa24/lectures_qmd_complete/lec07/more-table-methods-and-documentation.html#table-attributes-and-methods",
    "title": "More Table Methods and Documentation",
    "section": "Table Attributes and Methods",
    "text": "Table Attributes and Methods\n\n\nTable Attributes and Methods\n\n\nselect, drop, and add columns\n\n\nCreate new tables\n\n\nMore Table Methods and Documentation\n\n\nDemo: WNBA Data\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/more-table-methods-and-documentation.html#first-assign-a-table-to-a-name",
    "href": "fa24/lectures_qmd_complete/lec07/more-table-methods-and-documentation.html#first-assign-a-table-to-a-name",
    "title": "More Table Methods and Documentation",
    "section": "First, assign a Table to a name",
    "text": "First, assign a Table to a name\n\nTo work with this table, we first load it in from a file called data/cal_unis.csv:\nschools = Table.read_table(‘data/cal_unis.csv’)\nThis lecture we will return to the dataset of public four-year colleges and universities in California (source):\nassigns RHS value to schools name\nreturns a datascience Table from the given data file\nThen we use schools to call Table methods and attributes.\nAlways assign your table to a name!"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/more-table-methods-and-documentation.html#next-use-the-documentation",
    "href": "fa24/lectures_qmd_complete/lec07/more-table-methods-and-documentation.html#next-use-the-documentation",
    "title": "More Table Methods and Documentation",
    "section": "Next, use the documentation",
    "text": "Next, use the documentation\n\nWe start with asking early questions about the table, such as # rows, # columns, and getting specific columns.\nNote the return types!\nNote the different syntax (more later).\nAccess Fa24 datascience documentation: here"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/more-table-methods-and-documentation.html#attributes-vs.-methods",
    "href": "fa24/lectures_qmd_complete/lec07/more-table-methods-and-documentation.html#attributes-vs.-methods",
    "title": "More Table Methods and Documentation",
    "section": "Attributes vs. Methods",
    "text": "Attributes vs. Methods\n\nTable attributes\nProperties/ characteristics of the given data type (in this case, datascience.Table)\nTable methods\nFunctions that are called on a given data science table (in this case, schools)\nAll table methods return copies of information from the original table!\nVery important Python datascience library paradigm"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/more-table-methods-and-documentation.html#create-new-tables",
    "href": "fa24/lectures_qmd_complete/lec07/more-table-methods-and-documentation.html#create-new-tables",
    "title": "More Table Methods and Documentation",
    "section": "Create new tables",
    "text": "Create new tables\n\n➤\n\nTable Attributes and Methods\n\n\nselect, drop, and add columns\n\n\nCreate new tables\n\n\nMore Table Methods and Documentation\n\n\nDemo: WNBA Data"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/more-table-methods-and-documentation.html#more-table-methods-and-documentation",
    "href": "fa24/lectures_qmd_complete/lec07/more-table-methods-and-documentation.html#more-table-methods-and-documentation",
    "title": "More Table Methods and Documentation",
    "section": "More Table Methods and Documentation",
    "text": "More Table Methods and Documentation\n\n➤\n\nTable Attributes and Methods\n\n\nselect, drop, and add columns\n\n\nCreate new tables\n\n\nMore Table Methods and Documentation\n\n\nDemo: WNBA Data"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/more-table-methods-and-documentation.html#navigating-documentation",
    "href": "fa24/lectures_qmd_complete/lec07/more-table-methods-and-documentation.html#navigating-documentation",
    "title": "More Table Methods and Documentation",
    "section": "(1/3) Navigating documentation",
    "text": "(1/3) Navigating documentation\n\nEarly programmers often find documentation the most challenging.\nSuppose we have our schools table:\nHow do we get all the column labels of schools?\nHow do we update schools such that the column Name is renamed University?"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/more-table-methods-and-documentation.html#navigating-documentation-1",
    "href": "fa24/lectures_qmd_complete/lec07/more-table-methods-and-documentation.html#navigating-documentation-1",
    "title": "More Table Methods and Documentation",
    "section": "(1/3) Navigating documentation",
    "text": "(1/3) Navigating documentation\n\nEarly programmers often find documentation the most challenging.\nSuppose we have our schools table:\nHow do we get all the column labels of schools?\nHow do we update schools such that the column Name is renamed University?\nPython tuple datatype(fixed, ordered list of values)"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/more-table-methods-and-documentation.html#navigating-documentation-filtering-with-where",
    "href": "fa24/lectures_qmd_complete/lec07/more-table-methods-and-documentation.html#navigating-documentation-filtering-with-where",
    "title": "More Table Methods and Documentation",
    "section": "(2/3) Navigating documentation:\u000bFiltering with where",
    "text": "(2/3) Navigating documentation:\u000bFiltering with where\n\nOften times, we will want to filter the rows of a table based on a specific condition, i.e., get only the rows where some condition is true.\nHow do we get a table with all of the UC schools?\nHow do we get a table with all the schools in Los Angeles?\n# 1\n# 2\nWe will learn more complicated uses of .where later in the course (“Predicates”), but for now we filter only on exact matches."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/more-table-methods-and-documentation.html#navigating-documentation-be-careful-with-.show",
    "href": "fa24/lectures_qmd_complete/lec07/more-table-methods-and-documentation.html#navigating-documentation-be-careful-with-.show",
    "title": "More Table Methods and Documentation",
    "section": "(3/3) Navigating documentation:\u000bBe careful with .show",
    "text": "(3/3) Navigating documentation:\u000bBe careful with .show\n\nThe following cells exhibit a tricky, but potentially common bug.\nWhen run in sequence, why does the last cell throw an error?\nDespite this, what might be a good use case for using .show?"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/more-table-methods-and-documentation.html#navigating-documentation-be-careful-with-.show-1",
    "href": "fa24/lectures_qmd_complete/lec07/more-table-methods-and-documentation.html#navigating-documentation-be-careful-with-.show-1",
    "title": "More Table Methods and Documentation",
    "section": "(3/3) Navigating documentation:\u000bBe careful with .show",
    "text": "(3/3) Navigating documentation:\u000bBe careful with .show\n\nThe following cells exhibit a tricky, but potentially common bug.\nWhen run in sequence, why does the last cell throw an error?\n.show is purely for display purposes. It does not return anything—i.e., it returns None.\nThe second cell therefore assigns schools to None!"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/more-table-methods-and-documentation.html#navigating-documentation-be-careful-with-.show-2",
    "href": "fa24/lectures_qmd_complete/lec07/more-table-methods-and-documentation.html#navigating-documentation-be-careful-with-.show-2",
    "title": "More Table Methods and Documentation",
    "section": "(3/3) Navigating documentation:\u000bBe careful with .show",
    "text": "(3/3) Navigating documentation:\u000bBe careful with .show\n\nThe following cells exhibit a tricky, but potentially common bug.\nWhen run in sequence, why does the last cell throw an error?\nDespite this, what might be a good use case for using .show?\n.show is useful when you want to display intermediate output for debugging purposes."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/more-table-methods-and-documentation.html#even-more-practice",
    "href": "fa24/lectures_qmd_complete/lec07/more-table-methods-and-documentation.html#even-more-practice",
    "title": "More Table Methods and Documentation",
    "section": "Even More Practice",
    "text": "Even More Practice\n\n(There are a few extra exercises in today’s lecture notebook for you to check out on your own time.)"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec09/masking-with-boolean-arrays.html",
    "href": "fa24/lectures_qmd_complete/lec09/masking-with-boolean-arrays.html",
    "title": "Masking with Boolean Arrays",
    "section": "",
    "text": "Motivation\n\n\nApplying with .apply\n\n\nMasking with Boolean Arrays\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec09/masking-with-boolean-arrays.html#applying-with-.apply",
    "href": "fa24/lectures_qmd_complete/lec09/masking-with-boolean-arrays.html#applying-with-.apply",
    "title": "Masking with Boolean Arrays",
    "section": "",
    "text": "Motivation\n\n\nApplying with .apply\n\n\nMasking with Boolean Arrays\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec09/masking-with-boolean-arrays.html#masking-with",
    "href": "fa24/lectures_qmd_complete/lec09/masking-with-boolean-arrays.html#masking-with",
    "title": "Masking with Boolean Arrays",
    "section": "Masking with",
    "text": "Masking with\nBoolean Arrays\n\n\nMotivation\n\n\nApplying with .apply\n\n\nMasking with Boolean Arrays\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec09/masking-with-boolean-arrays.html#masks-and-arrays",
    "href": "fa24/lectures_qmd_complete/lec09/masking-with-boolean-arrays.html#masks-and-arrays",
    "title": "Masking with Boolean Arrays",
    "section": "Masks and Arrays",
    "text": "Masks and Arrays\n\nMasking – also known as boolean indexing – is the process of indexing into an array or table with a array of booleans.\nOnly the elements at indexes 0 and 3."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec09/masking-with-boolean-arrays.html#masks-with-tables",
    "href": "fa24/lectures_qmd_complete/lec09/masking-with-boolean-arrays.html#masks-with-tables",
    "title": "Masking with Boolean Arrays",
    "section": "Masks with Tables",
    "text": "Masks with Tables\n\nWe can achieve the same behavior with tables – by using where with just a single argument.\nPreviously, where required two arguments.\nJust one argument: a list of booleans."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec09/motivation.html",
    "href": "fa24/lectures_qmd_complete/lec09/motivation.html",
    "title": "Motivation",
    "section": "",
    "text": "Motivation\n\n\nApplying with .apply\n\n\nMasking with Boolean Arrays\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec09/motivation.html#motivation",
    "href": "fa24/lectures_qmd_complete/lec09/motivation.html#motivation",
    "title": "Motivation",
    "section": "",
    "text": "Motivation\n\n\nApplying with .apply\n\n\nMasking with Boolean Arrays\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec08/index.html",
    "href": "fa24/lectures_qmd_complete/lec08/index.html",
    "title": "Taking and Filtering Rows",
    "section": "",
    "text": "This chapter covers the key concepts from Lecture 08."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec08/index.html#topics-covered",
    "href": "fa24/lectures_qmd_complete/lec08/index.html#topics-covered",
    "title": "Taking and Filtering Rows",
    "section": "Topics Covered",
    "text": "Topics Covered\n\nReview: .take()\nBooleans\nFiltering with .where()"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec08/booleans.html",
    "href": "fa24/lectures_qmd_complete/lec08/booleans.html",
    "title": "Booleans",
    "section": "",
    "text": "Review: .take()\n\n\nBooleans\n\n\nFiltering with .where()\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec08/booleans.html#booleans",
    "href": "fa24/lectures_qmd_complete/lec08/booleans.html#booleans",
    "title": "Booleans",
    "section": "",
    "text": "Review: .take()\n\n\nBooleans\n\n\nFiltering with .where()\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec06/index.html",
    "href": "fa24/lectures_qmd_complete/lec06/index.html",
    "title": "Introduction to Social Science Research",
    "section": "",
    "text": "This chapter covers the key concepts from Lecture 06."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec06/index.html#topics-covered",
    "href": "fa24/lectures_qmd_complete/lec06/index.html#topics-covered",
    "title": "Introduction to Social Science Research",
    "section": "Topics Covered",
    "text": "Topics Covered\n\nUnits of Analysis\nSocial Science Research\nMaterials-Based Research\nAggregation and Disaggregation"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec06/units-of-analysis.html",
    "href": "fa24/lectures_qmd_complete/lec06/units-of-analysis.html",
    "title": "Units of Analysis",
    "section": "",
    "text": "➤\nUnits of Analysis\nSocial Science Research\nMaterials-Based Research\nAggregation and Disaggregation"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec06/units-of-analysis.html#units-of-analysis",
    "href": "fa24/lectures_qmd_complete/lec06/units-of-analysis.html#units-of-analysis",
    "title": "Units of Analysis",
    "section": "",
    "text": "➤\nUnits of Analysis\nSocial Science Research\nMaterials-Based Research\nAggregation and Disaggregation"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec06/units-of-analysis.html#units-of-analysis-1",
    "href": "fa24/lectures_qmd_complete/lec06/units-of-analysis.html#units-of-analysis-1",
    "title": "Units of Analysis",
    "section": "Units of Analysis",
    "text": "Units of Analysis\n\nThe types of entities we are analyzing:\nIndividuals\nGroups (families, classes, gangs, …)\nLocalities (cities, counties, countries, …)\nOrganizations, industries, political units, social artifacts, etc.\n\n\n\nSpeaker notes\n\nSOC5 Lecture 2"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec06/units-of-analysis.html#units-of-analysis-2",
    "href": "fa24/lectures_qmd_complete/lec06/units-of-analysis.html#units-of-analysis-2",
    "title": "Units of Analysis",
    "section": "Units of Analysis",
    "text": "Units of Analysis\n\nThe types of entities we are analyzing:\nIndividuals\nGroups (families, classes, gangs, …)\nLocalities (cities, counties, countries, …)\nOrganizations, industries, political units, social artifacts, etc.\nIncome\nindividualincomehousehold incomeaverage income\nRace/Ethnicity\n# People\nindividualrace/ethnicity–population demographics\n–# memberspopulation size\nUnit of analysis is directly linked to the concept of “variables”.Variables describe the unit of analysis.\n\n\n\nSpeaker notes\n\nSOC5 Lecture 2"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec06/units-of-analysis.html#matching-what-is-the-unit-of-analysis",
    "href": "fa24/lectures_qmd_complete/lec06/units-of-analysis.html#matching-what-is-the-unit-of-analysis",
    "title": "Units of Analysis",
    "section": "Matching: What is the unit of analysis?",
    "text": "Matching: What is the unit of analysis?\n\nAre schools in poorer neighborhoods more prone to violence than schools in richer neighborhoods?\nAre women more likely than men to be religious?\nDo records that win Grammy awards sell more than otherwise-similar records that do not win Grammy awards?\nAre married couples richer than non-married cohabiting couples?\nIndividuals\nCouples\nMarried couples\nNon-married couples\nFamilies\nGender groups\nNeighborhoods\nSchools\nRecords\nGrammy awards\nReligions\nSomething else\nFrom SOC 5: Evaluation of Evidence\n\n\n\nSpeaker notes\n\nSchools Gender groups Records Couples"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec06/units-of-analysis.html#gathering-data-for-research-and-analysis",
    "href": "fa24/lectures_qmd_complete/lec06/units-of-analysis.html#gathering-data-for-research-and-analysis",
    "title": "Units of Analysis",
    "section": "Gathering Data for Research and Analysis",
    "text": "Gathering Data for Research and Analysis\n\nConduct surveys, experiments, interviews, ethnography,measurements…\nData\nConceptualize variables\nPose research question and theory\n\n\n\n\n\n\nAll data are created/generated from human input:\nDefinition of variables\nResearch design and measurement\nHowever, the researcher and data scientist are often not the same person.Data scientists therefore need to consider the context of how researchers generated data from existing materials.\n\n\n\nSpeaker notes\n\nSOC 5 textbook p. 29\nSurveys: Participants answer a series of questions Experiments: trying an intervention, measuring outcomes, etc. Interviews: researchers actively talk to participants, generally messier data than surveys Ethnography: participant observation (passive)"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec06/units-of-analysis.html#gathering-data-for-research-and-analysis-1",
    "href": "fa24/lectures_qmd_complete/lec06/units-of-analysis.html#gathering-data-for-research-and-analysis-1",
    "title": "Units of Analysis",
    "section": "Gathering Data for Research and Analysis",
    "text": "Gathering Data for Research and Analysis\n\nA researcher considers both validity and generalizability throughout the data gathering process.\nConduct surveys, experiments, interviews, ethnography,measurements…\nData\nConceptualize variables\nPose research question and theory\n\n\n\n\n\n\nValidity A quality of a measure concerning how accurate it is.\nInternal Validity: How accurately are we measuring the defined concepts?\nExternal Validity:\n\nHow representative is the group being studied?\nHow “real” is this study?\n\nGeneralizability The extent to which results or conclusions based on one population can be applied to others.\n\n\n\nSpeaker notes\n\nSOC 5 textbook p. 29\nSurveys: Participants answer a series of questions Experiments: trying an intervention, measuring outcomes, etc. Interviews: researchers actively talk to participants, generally messier data than surveys Ethnography: participant observation (passive)"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec06/units-of-analysis.html#translating-between-units-of-analysis",
    "href": "fa24/lectures_qmd_complete/lec06/units-of-analysis.html#translating-between-units-of-analysis",
    "title": "Units of Analysis",
    "section": "Translating between Units of Analysis",
    "text": "Translating between Units of Analysis\n\nAggregation - “Roll up” a variable measured on a fine-grained unit of analysis (e.g., individuals) into a variable on a coarser-grained unit of analysis (e.g., groups)\nIncome of many individuals in geographic regions → average income by region\nUsually done through counting or averaging\nDisaggregation - “Drill down” a variable measured on a coarser-grained unit of analysis (e.g., region) into a variable on a coarser-grained unit of analysis (e.g., groups within that region)\nGenerally performed to identify confounding (or mediating) variables to disentangle the impact of certain variables\nAverage income by geographic region → average income by race/ethnicity by region\nHow to do this?\nWithout fine-grained data, it is impossible to go from a high-level, aggregated view of data down to a lower-level, disaggregated view!"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec01/what-will-you-learn-in-this-class.html",
    "href": "fa24/lectures_qmd_complete/lec01/what-will-you-learn-in-this-class.html",
    "title": "What will you learn in this class?",
    "section": "",
    "text": "What is data science?\n\n\nWhat will you learn in this class?\n\n\nHow will this class be run?\n\n\nFun demo\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec01/what-will-you-learn-in-this-class.html#what-is-data-science",
    "href": "fa24/lectures_qmd_complete/lec01/what-will-you-learn-in-this-class.html#what-is-data-science",
    "title": "What will you learn in this class?",
    "section": "",
    "text": "What is data science?\n\n\nWhat will you learn in this class?\n\n\nHow will this class be run?\n\n\nFun demo\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec01/what-will-you-learn-in-this-class.html#what-is-data-science-1",
    "href": "fa24/lectures_qmd_complete/lec01/what-will-you-learn-in-this-class.html#what-is-data-science-1",
    "title": "What will you learn in this class?",
    "section": "What is data science?",
    "text": "What is data science?\n\nLearning about the world from data using computation\nLearning how to ask the “right” questions\n\nWhen we group data and analyze it, we bring a set of assumptions\nWhen we asked what our “major” is, made an assumption that people have a major\n\nUsing data to predict future outcomes"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec01/what-will-you-learn-in-this-class.html#content-and-learning-objectives",
    "href": "fa24/lectures_qmd_complete/lec01/what-will-you-learn-in-this-class.html#content-and-learning-objectives",
    "title": "What will you learn in this class?",
    "section": "Content and Learning Objectives",
    "text": "Content and Learning Objectives\n\n\nWhat is data science?\n\n\nWhat will you learn in this class?\n\n\nHow will this class be run?\n\n\nFun demo\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec01/what-will-you-learn-in-this-class.html#where-does-this-course-fit",
    "href": "fa24/lectures_qmd_complete/lec01/what-will-you-learn-in-this-class.html#where-does-this-course-fit",
    "title": "What will you learn in this class?",
    "section": "Where does this course fit?",
    "text": "Where does this course fit?\n\nThere are many different ways to get started with data science and computer science, and each of them has their own purpose and benefits.\nData 6\nData 8\nCS 10\nCS 61A\nYou will leave this course with applicable skills that you can use even if you don’t take any future CS/DS courses."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec01/what-will-you-learn-in-this-class.html#you-can-do-this-period.",
    "href": "fa24/lectures_qmd_complete/lec01/what-will-you-learn-in-this-class.html#you-can-do-this-period.",
    "title": "What will you learn in this class?",
    "section": "You can do this — period.",
    "text": "You can do this — period.\n\nWe are here to support you! data6.org/fa24/staff"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec01/how-will-this-class-be-run.html",
    "href": "fa24/lectures_qmd_complete/lec01/how-will-this-class-be-run.html",
    "title": "How will this class be run?",
    "section": "",
    "text": "There are many different ways to get started with data science and computer science, and each of them has their own purpose and benefits.\nData 6\nData 8\nCS 10\nCS 61A\nYou will leave this course with applicable skills that you can use even if you don’t take any future CS/DS courses."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec01/how-will-this-class-be-run.html#where-does-this-course-fit",
    "href": "fa24/lectures_qmd_complete/lec01/how-will-this-class-be-run.html#where-does-this-course-fit",
    "title": "How will this class be run?",
    "section": "",
    "text": "There are many different ways to get started with data science and computer science, and each of them has their own purpose and benefits.\nData 6\nData 8\nCS 10\nCS 61A\nYou will leave this course with applicable skills that you can use even if you don’t take any future CS/DS courses."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec01/how-will-this-class-be-run.html#you-can-do-this-period.",
    "href": "fa24/lectures_qmd_complete/lec01/how-will-this-class-be-run.html#you-can-do-this-period.",
    "title": "How will this class be run?",
    "section": "You can do this — period.",
    "text": "You can do this — period.\n\nWe are here to support you! data6.org/fa24/staff"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec24/improvements.html",
    "href": "fa24/lectures_qmd_complete/lec24/improvements.html",
    "title": "Improvements",
    "section": "",
    "text": "➤\n\nLLMs\n\n\nLocal LLMs Demo\n\n\nTraining Data\n\n\nAI Chatbot Demo\n\n\nRisks\n\n\nImprovements"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec24/improvements.html#improvements",
    "href": "fa24/lectures_qmd_complete/lec24/improvements.html#improvements",
    "title": "Improvements",
    "section": "",
    "text": "➤\n\nLLMs\n\n\nLocal LLMs Demo\n\n\nTraining Data\n\n\nAI Chatbot Demo\n\n\nRisks\n\n\nImprovements"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec24/improvements.html#improvements-1",
    "href": "fa24/lectures_qmd_complete/lec24/improvements.html#improvements-1",
    "title": "Improvements",
    "section": "Improvements",
    "text": "Improvements\n\nImproved course prompt engineering\nRepresentative training data\nGovernment intervention?\n\nCompany policies"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec24/api-calls.html",
    "href": "fa24/lectures_qmd_complete/lec24/api-calls.html",
    "title": "API Calls",
    "section": "",
    "text": "➤\n\nLLMs\n\n\nLocal LLMs Demo\n\n\nTraining Data\n\n\nAI Chatbot Demo\n\n\nRisks\n\n\nImprovements\n\n\nAPI Calls"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec24/api-calls.html#api-calls",
    "href": "fa24/lectures_qmd_complete/lec24/api-calls.html#api-calls",
    "title": "API Calls",
    "section": "",
    "text": "➤\n\nLLMs\n\n\nLocal LLMs Demo\n\n\nTraining Data\n\n\nAI Chatbot Demo\n\n\nRisks\n\n\nImprovements\n\n\nAPI Calls"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec24/api-calls.html#api-calls-demo",
    "href": "fa24/lectures_qmd_complete/lec24/api-calls.html#api-calls-demo",
    "title": "API Calls",
    "section": "API Calls (Demo)",
    "text": "API Calls (Demo)\n\n➤\n\nLLMs\n\n\nLocal LLMs Demo\n\n\nTraining Data\n\n\nAI Chatbot Demo\n\n\nRisks\n\n\nImprovements\n\n\nAPI Calls"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec24/training-data.html",
    "href": "fa24/lectures_qmd_complete/lec24/training-data.html",
    "title": "Training Data",
    "section": "",
    "text": "➤\n\nLLMs\n\n\nLocal LLMs Demo\n\n\nTraining Data\n\n\nAI Chatbot Demo\n\n\nRisks\n\n\nImprovements"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec24/training-data.html#training-data",
    "href": "fa24/lectures_qmd_complete/lec24/training-data.html#training-data",
    "title": "Training Data",
    "section": "",
    "text": "➤\n\nLLMs\n\n\nLocal LLMs Demo\n\n\nTraining Data\n\n\nAI Chatbot Demo\n\n\nRisks\n\n\nImprovements"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec24/training-data.html#what-data-does-chatgpt-use-to-train-its-model",
    "href": "fa24/lectures_qmd_complete/lec24/training-data.html#what-data-does-chatgpt-use-to-train-its-model",
    "title": "Training Data",
    "section": "What data does ChatGPT use to train its model?",
    "text": "What data does ChatGPT use to train its model?\n\nDataset used to teach machine learning models\nPublicly available data\n\nPublic data repos\nSocial media\nYouTube videos\n\nThird parties / crowdsourcing\nTraining Data\nWeb Scraping: process of using bots to extract content and data from a website"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec24/ai-chatbot-demo.html",
    "href": "fa24/lectures_qmd_complete/lec24/ai-chatbot-demo.html",
    "title": "AI Chatbot Demo",
    "section": "",
    "text": "https://data6-llm-79214fa7cb82.herokuapp.com/\n\n➤\n\nLLMs\n\n\nLocal LLMs Demo\n\n\nTraining Data\n\n\nAI Chatbot Demo\n\n\nRisks\n\n\nImprovements"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec24/ai-chatbot-demo.html#ai-chatbot-demo",
    "href": "fa24/lectures_qmd_complete/lec24/ai-chatbot-demo.html#ai-chatbot-demo",
    "title": "AI Chatbot Demo",
    "section": "",
    "text": "https://data6-llm-79214fa7cb82.herokuapp.com/\n\n➤\n\nLLMs\n\n\nLocal LLMs Demo\n\n\nTraining Data\n\n\nAI Chatbot Demo\n\n\nRisks\n\n\nImprovements"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec24/ai-chatbot-demo.html#api-calls-demo",
    "href": "fa24/lectures_qmd_complete/lec24/ai-chatbot-demo.html#api-calls-demo",
    "title": "AI Chatbot Demo",
    "section": "API Calls (Demo)",
    "text": "API Calls (Demo)\n\n➤\n\nLLMs\n\n\nLocal LLMs Demo\n\n\nTraining Data\n\n\nAI Chatbot Demo\n\n\nRisks\n\n\nImprovements\n\n\nAPI Calls"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec12/index.html",
    "href": "fa24/lectures_qmd_complete/lec12/index.html",
    "title": "[DATA 6] Quiz 1 Review",
    "section": "",
    "text": "This chapter covers the key concepts from Lecture 12."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/grouped-bar-charts.html",
    "href": "fa24/lectures_qmd_complete/lec15/grouped-bar-charts.html",
    "title": "Grouped Bar Charts",
    "section": "",
    "text": "Display all values of a categorical variable, along with their respective frequencies.\nOne bar for each category\nChoose the order of bars\nLength of bar is the frequency (percent or count) of individuals in that category.\nNot a bar chart; each respondent could pick more answer, so the bars represent overlapping groups..\nA bar chart that plots the distribution of the categorical variable Cookie.\nPercents of survey respondents on “a major reason they would find it difficult to quarantine themselves for at least 14 days”\nSource: Pew Research"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/grouped-bar-charts.html#bar-charts",
    "href": "fa24/lectures_qmd_complete/lec15/grouped-bar-charts.html#bar-charts",
    "title": "Grouped Bar Charts",
    "section": "",
    "text": "Display all values of a categorical variable, along with their respective frequencies.\nOne bar for each category\nChoose the order of bars\nLength of bar is the frequency (percent or count) of individuals in that category.\nNot a bar chart; each respondent could pick more answer, so the bars represent overlapping groups..\nA bar chart that plots the distribution of the categorical variable Cookie.\nPercents of survey respondents on “a major reason they would find it difficult to quarantine themselves for at least 14 days”\nSource: Pew Research"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/grouped-bar-charts.html#debugging-bar-charts",
    "href": "fa24/lectures_qmd_complete/lec15/grouped-bar-charts.html#debugging-bar-charts",
    "title": "Grouped Bar Charts",
    "section": "Debugging bar charts",
    "text": "Debugging bar charts\n\n\nCategorical Distributions\n\n\nBar Charts\n\n\nGrouped Bar Charts\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/grouped-bar-charts.html#better-bar-charts",
    "href": "fa24/lectures_qmd_complete/lec15/grouped-bar-charts.html#better-bar-charts",
    "title": "Grouped Bar Charts",
    "section": "Better bar charts",
    "text": "Better bar charts\n\n\nCategorical Distributions\n\n\nBar Charts\n\n\nGrouped Bar Charts\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/grouped-bar-charts.html#bar-charts-vs.-histograms",
    "href": "fa24/lectures_qmd_complete/lec15/grouped-bar-charts.html#bar-charts-vs.-histograms",
    "title": "Grouped Bar Charts",
    "section": "Bar Charts vs. Histograms",
    "text": "Bar Charts vs. Histograms\n\nBar charts visualize the distribution of a categorical variable, or the relationship between a categorical variable and a numerical variable.\nLength of bar corresponds to value.\nWidth of bar means nothing.\nHistograms visualize the distribution of a numerical variable.\nLength of bar corresponds to number of values within bin.\nWidth of bar corresponds to the width of the bin.\n\nWider bin → more values within bin → smoother histogram."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/categorical-distributions.html",
    "href": "fa24/lectures_qmd_complete/lec15/categorical-distributions.html",
    "title": "Categorical Distributions",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 15\nAll about histograms and bar charts.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/categorical-distributions.html#visualizing-categorical-and-numerical-variables",
    "href": "fa24/lectures_qmd_complete/lec15/categorical-distributions.html#visualizing-categorical-and-numerical-variables",
    "title": "Categorical Distributions",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 15\nAll about histograms and bar charts.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/categorical-distributions.html#variable-types-and-distributions",
    "href": "fa24/lectures_qmd_complete/lec15/categorical-distributions.html#variable-types-and-distributions",
    "title": "Categorical Distributions",
    "section": "Variable Types and Distributions",
    "text": "Variable Types and Distributions\n\n\nCategorical Distributions\n\n\nBar Charts\n\n\nGrouped Bar Charts\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/categorical-distributions.html#variable-distributions",
    "href": "fa24/lectures_qmd_complete/lec15/categorical-distributions.html#variable-distributions",
    "title": "Categorical Distributions",
    "section": "Variable Distributions",
    "text": "Variable Distributions\n\nGiven a specific dataset, a variable has a distribution:\nFor each different value of the variable, the frequency of individuals that have that value.\nFrequency: number or percent of individuals (depends on definition of “individual”; more later)\nA distribution table of the categorical variable Cookie. Each row represents a different value of Cookie.\nA bar chart that plots the distribution of the categorical variable Cookie."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/categorical-distributions.html#summary-categorical-variables",
    "href": "fa24/lectures_qmd_complete/lec15/categorical-distributions.html#summary-categorical-variables",
    "title": "Categorical Distributions",
    "section": "Summary (Categorical Variables)",
    "text": "Summary (Categorical Variables)\n\nBar charts are used to display the distribution of a categorical variable, or the relationship between a categorical variable and one or more numerical variables.\nThe method t.barh(column_for_categories) creates a bar chart with:\nThe values of the column column_for_categories as the categories on the y-axis. This column should contain a categorical variable, and values should be unique.\nBars for every other column in t. These columns should contain numerical variables.\n\nMultiple other columns → grouped bar chart.\n\nBars should be sorted depending on the type of the categorical variable."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/categorical-distributions.html#numerical-distributions-histograms",
    "href": "fa24/lectures_qmd_complete/lec15/categorical-distributions.html#numerical-distributions-histograms",
    "title": "Categorical Distributions",
    "section": "Numerical Distributions, Histograms",
    "text": "Numerical Distributions, Histograms\n\n\nReview: Bar Charts\n\n\nNumerical Distributions, Histograms\n\n\nChoosing Bins\n\n\nOverlaid and Side-by-Side Histograms\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/categorical-distributions.html#towards-numerical-distributions",
    "href": "fa24/lectures_qmd_complete/lec15/categorical-distributions.html#towards-numerical-distributions",
    "title": "Categorical Distributions",
    "section": "Towards Numerical Distributions",
    "text": "Towards Numerical Distributions\n\nBar charts visualize the distribution of a categorical variable, or the relationship between a categorical variable and one or more numerical variables.\nBar charts cannot display the distribution of a numerical variable.\nQuestion: How might we display the distribution of a numerical variable?\nAnswer: One solution is to combine ranges of values into bins."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/categorical-variables.html",
    "href": "fa24/lectures_qmd_complete/lec15/categorical-variables.html",
    "title": "Categorical Variables",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 15\nAll about histograms and bar charts.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/categorical-variables.html#visualizing-categorical-and-numerical-variables",
    "href": "fa24/lectures_qmd_complete/lec15/categorical-variables.html#visualizing-categorical-and-numerical-variables",
    "title": "Categorical Variables",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 15\nAll about histograms and bar charts.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/categorical-variables.html#summary-categorical-variables",
    "href": "fa24/lectures_qmd_complete/lec15/categorical-variables.html#summary-categorical-variables",
    "title": "Categorical Variables",
    "section": "Summary (Categorical Variables)",
    "text": "Summary (Categorical Variables)\n\nBar charts are used to display the distribution of a categorical variable, or the relationship between a categorical variable and one or more numerical variables.\nThe method t.barh(column_for_categories) creates a bar chart with:\nThe values of the column column_for_categories as the categories on the y-axis. This column should contain a categorical variable, and values should be unique.\nBars for every other column in t. These columns should contain numerical variables.\n\nMultiple other columns → grouped bar chart.\n\nBars should be sorted depending on the type of the categorical variable."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/index.html",
    "href": "fa24/lectures_qmd_complete/lec15/index.html",
    "title": "Visualizing Categorical and Numerical Variables",
    "section": "",
    "text": "This chapter covers the key concepts from Lecture 15."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/index.html#topics-covered",
    "href": "fa24/lectures_qmd_complete/lec15/index.html#topics-covered",
    "title": "Visualizing Categorical and Numerical Variables",
    "section": "Topics Covered",
    "text": "Topics Covered\n\nCategorical Variables\nCategorical Distributions\nBar Charts\nGrouped Bar Charts\nNumerical Variables\nReview: Bar Charts\nNumerical Distributions, Histograms\nChoosing Bins\nOverlaid and Side-by-Side Histograms"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/bar-charts.html",
    "href": "fa24/lectures_qmd_complete/lec15/bar-charts.html",
    "title": "Bar Charts",
    "section": "",
    "text": "Display all values of a categorical variable, along with their respective frequencies.\nOne bar for each category\nChoose the order of bars\nLength of bar is the frequency (percent or count) of individuals in that category.\nNot a bar chart; each respondent could pick more answer, so the bars represent overlapping groups..\nA bar chart that plots the distribution of the categorical variable Cookie.\nPercents of survey respondents on “a major reason they would find it difficult to quarantine themselves for at least 14 days”\nSource: Pew Research"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/bar-charts.html#bar-charts",
    "href": "fa24/lectures_qmd_complete/lec15/bar-charts.html#bar-charts",
    "title": "Bar Charts",
    "section": "",
    "text": "Display all values of a categorical variable, along with their respective frequencies.\nOne bar for each category\nChoose the order of bars\nLength of bar is the frequency (percent or count) of individuals in that category.\nNot a bar chart; each respondent could pick more answer, so the bars represent overlapping groups..\nA bar chart that plots the distribution of the categorical variable Cookie.\nPercents of survey respondents on “a major reason they would find it difficult to quarantine themselves for at least 14 days”\nSource: Pew Research"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/bar-charts.html#debugging-bar-charts",
    "href": "fa24/lectures_qmd_complete/lec15/bar-charts.html#debugging-bar-charts",
    "title": "Bar Charts",
    "section": "Debugging bar charts",
    "text": "Debugging bar charts\n\n\nCategorical Distributions\n\n\nBar Charts\n\n\nGrouped Bar Charts\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/bar-charts.html#better-bar-charts",
    "href": "fa24/lectures_qmd_complete/lec15/bar-charts.html#better-bar-charts",
    "title": "Bar Charts",
    "section": "Better bar charts",
    "text": "Better bar charts\n\n\nCategorical Distributions\n\n\nBar Charts\n\n\nGrouped Bar Charts\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/bar-charts.html#bar-charts-vs.-histograms",
    "href": "fa24/lectures_qmd_complete/lec15/bar-charts.html#bar-charts-vs.-histograms",
    "title": "Bar Charts",
    "section": "Bar Charts vs. Histograms",
    "text": "Bar Charts vs. Histograms\n\nBar charts visualize the distribution of a categorical variable, or the relationship between a categorical variable and a numerical variable.\nLength of bar corresponds to value.\nWidth of bar means nothing.\nHistograms visualize the distribution of a numerical variable.\nLength of bar corresponds to number of values within bin.\nWidth of bar corresponds to the width of the bin.\n\nWider bin → more values within bin → smoother histogram."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec14/index.html",
    "href": "fa24/lectures_qmd_complete/lec14/index.html",
    "title": "Introduction to Visualization",
    "section": "",
    "text": "This chapter covers the key concepts from Lecture 14."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec14/index.html#topics-covered",
    "href": "fa24/lectures_qmd_complete/lec14/index.html#topics-covered",
    "title": "Introduction to Visualization",
    "section": "Topics Covered",
    "text": "Topics Covered\n\nExamples of Visualizations\nWhat is Visualization?\nVariable Types\nEncoding"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec14/examples-of-visualizations.html",
    "href": "fa24/lectures_qmd_complete/lec14/examples-of-visualizations.html",
    "title": "Examples of Visualizations",
    "section": "",
    "text": "Examples of Visualization\n\n\nWhat is Visualization?\n\n\nVariable Types\n\n\nEncoding\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec14/examples-of-visualizations.html#examples-of-visualizations",
    "href": "fa24/lectures_qmd_complete/lec14/examples-of-visualizations.html#examples-of-visualizations",
    "title": "Examples of Visualizations",
    "section": "",
    "text": "Examples of Visualization\n\n\nWhat is Visualization?\n\n\nVariable Types\n\n\nEncoding\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/pivot-tables-with-pivot.html",
    "href": "fa24/lectures_qmd_complete/lec13/pivot-tables-with-pivot.html",
    "title": "Pivot Tables with .pivot",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 12\nExtracting and aggregating information from tables.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/pivot-tables-with-pivot.html#grouping-pivoting",
    "href": "fa24/lectures_qmd_complete/lec13/pivot-tables-with-pivot.html#grouping-pivoting",
    "title": "Pivot Tables with .pivot",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 12\nExtracting and aggregating information from tables.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/pivot-tables-with-pivot.html#grouping-with-.group",
    "href": "fa24/lectures_qmd_complete/lec13/pivot-tables-with-pivot.html#grouping-with-.group",
    "title": "Pivot Tables with .pivot",
    "section": "Grouping with .group",
    "text": "Grouping with .group\n\n\nGrouping with .group\n\n\nGrouping by Multiple Columns\n\n\nPivot Tables with .pivot\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/pivot-tables-with-pivot.html#aggregating-with-.group",
    "href": "fa24/lectures_qmd_complete/lec13/pivot-tables-with-pivot.html#aggregating-with-.group",
    "title": "Pivot Tables with .pivot",
    "section": "Aggregating with .group()",
    "text": "Aggregating with .group()\n\nThe term “group” in data science is most commonly associated with data aggregation and disaggregation.\nAggregation: A process in which information is gathered and expressed in collective or summary form.\nUseful for getting information about groups based on variables (age, profession, income) while simultaneously preserving confidentiality of individuals\nDisaggregation (aka disentanglement): A process of taking aggregated data and breaking it down into smaller information units.\nUseful to highlight outcomes that pertain to individual subsets of results/outcomes (e.g., gender, location, socio-cultural/ethnic background, age groups, etc.) to expose hidden trends\nSource\n\n\n\nSpeaker notes\n\nhttps://www.nccih.ca/docs/context/FS-ImportanceDisaggregatedData-EN.pdf"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/pivot-tables-with-pivot.html#pivot-tables",
    "href": "fa24/lectures_qmd_complete/lec13/pivot-tables-with-pivot.html#pivot-tables",
    "title": "Pivot Tables with .pivot",
    "section": "Pivot Tables",
    "text": "Pivot Tables\n\n\nGrouping with .group\n\n\nGrouping by Multiple Columns\n\n\nPivot Tables with .pivot\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/pivot-tables-with-pivot.html#cars.pivotcylinders-brand",
    "href": "fa24/lectures_qmd_complete/lec13/pivot-tables-with-pivot.html#cars.pivotcylinders-brand",
    "title": "Pivot Tables with .pivot",
    "section": "cars.pivot(‘Cylinders’, ‘Brand’)",
    "text": "cars.pivot(‘Cylinders’, ‘Brand’)\n\ncars.pivot(‘Cylinders’, ‘Brand’)\ncars"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/pivot-tables-with-pivot.html#pivot",
    "href": "fa24/lectures_qmd_complete/lec13/pivot-tables-with-pivot.html#pivot",
    "title": "Pivot Tables with .pivot",
    "section": ".pivot()",
    "text": ".pivot()\n\nThe method t.pivot(columns, rows) is an alternative to grouping by exactly two columns.\nFirst argument: the column from t you want to make up the columns of the output.\n\nEach unique value in the column columns will get its own column.\n\nSecond argument: the column from t you want to make up the rows of the output.\n\nEach unique value in the column rows will get its own row."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/pivot-tables-with-pivot.html#pivot-1",
    "href": "fa24/lectures_qmd_complete/lec13/pivot-tables-with-pivot.html#pivot-1",
    "title": "Pivot Tables with .pivot",
    "section": ".pivot()",
    "text": ".pivot()\n\nLike with group, the default with pivot is to count the number of occurrences of a particular combination. But we can provide two optional arguments:\nt.pivot(columns, rows, values, collect)\nThis creates a new table where\nThe columns are specified by columns.\nThe rows are specified by rows.\nThe entries are specified by values, combined using the function collect.\nFor example:\nt.pivot(‘Cylinders’, ‘Brand’, ‘MPG’, np.mean)\ndescribes the average MPG for every combination of Brand and Cylinders."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/grouping-by-multiple-columns.html",
    "href": "fa24/lectures_qmd_complete/lec13/grouping-by-multiple-columns.html",
    "title": "Grouping by Multiple Columns",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 12\nExtracting and aggregating information from tables.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/grouping-by-multiple-columns.html#grouping-pivoting",
    "href": "fa24/lectures_qmd_complete/lec13/grouping-by-multiple-columns.html#grouping-pivoting",
    "title": "Grouping by Multiple Columns",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 12\nExtracting and aggregating information from tables.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/grouping-by-multiple-columns.html#grouping-with-.group",
    "href": "fa24/lectures_qmd_complete/lec13/grouping-by-multiple-columns.html#grouping-with-.group",
    "title": "Grouping by Multiple Columns",
    "section": "Grouping with .group",
    "text": "Grouping with .group\n\n\nGrouping with .group\n\n\nGrouping by Multiple Columns\n\n\nPivot Tables with .pivot\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/grouping-by-multiple-columns.html#advanced-grouping",
    "href": "fa24/lectures_qmd_complete/lec13/grouping-by-multiple-columns.html#advanced-grouping",
    "title": "Grouping by Multiple Columns",
    "section": "Advanced Grouping",
    "text": "Advanced Grouping\n\n\nGrouping with .group\n\n\nGrouping by Multiple Columns\n\n\nPivot Tables with .pivot\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/grouping-by-multiple-columns.html#which-columns-should-we-group-by",
    "href": "fa24/lectures_qmd_complete/lec13/grouping-by-multiple-columns.html#which-columns-should-we-group-by",
    "title": "Grouping by Multiple Columns",
    "section": "Which Columns Should We Group By?",
    "text": "Which Columns Should We Group By?\n\nIt usually only makes sense to group by columns that store categorical information that is shared across multiple rows.\nIf you had a bunch of dogs, you could group by\nBreed.\nSize (small, medium, large).\nSex.\nColor.\nIt wouldn’t make sense to group by weight in pounds, since every dog will have a slightly different weight and two dogs having the exact same weight doesn’t tell you much."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/grouping-by-multiple-columns.html#grouping-by-multiple-columns",
    "href": "fa24/lectures_qmd_complete/lec13/grouping-by-multiple-columns.html#grouping-by-multiple-columns",
    "title": "Grouping by Multiple Columns",
    "section": "Grouping by Multiple Columns",
    "text": "Grouping by Multiple Columns\n\n\nGrouping with .group\n\n\nGrouping by Multiple Columns\n\n\nPivot Tables with .pivot\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/grouping-by-multiple-columns.html#grouping-by-multiple-columns-1",
    "href": "fa24/lectures_qmd_complete/lec13/grouping-by-multiple-columns.html#grouping-by-multiple-columns-1",
    "title": "Grouping by Multiple Columns",
    "section": "Grouping by Multiple Columns",
    "text": "Grouping by Multiple Columns\n\nIf we pass a list of column names as the first argument to group:\nt.group(column_or_columns, collect)\nthe resulting table has one row for every unique combination of values in the specified columns.\nJust as before, if we call group with a single argument (a list or array), we get back counts. We can specify a collect function if we want to.\nOne row for every combination of Manufacturer and Brand."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/grouping-by-multiple-columns.html#grouping-by-more-than-two-columns",
    "href": "fa24/lectures_qmd_complete/lec13/grouping-by-multiple-columns.html#grouping-by-more-than-two-columns",
    "title": "Grouping by Multiple Columns",
    "section": "Grouping by More Than Two Columns",
    "text": "Grouping by More Than Two Columns\n\nYou can group by any number of columns, but we rarely group by more than two columns as the results tend to be less meaningful.\nHere, Manufacturer doesn’t tell us much."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/index.html",
    "href": "fa24/lectures_qmd_complete/lec13/index.html",
    "title": "[Lec 12 and 13] Grouping and Pivoting",
    "section": "",
    "text": "This chapter covers the key concepts from Lecture 13."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/index.html#topics-covered",
    "href": "fa24/lectures_qmd_complete/lec13/index.html#topics-covered",
    "title": "[Lec 12 and 13] Grouping and Pivoting",
    "section": "Topics Covered",
    "text": "Topics Covered\n\nHigher order functions\nGrouping with .group\nGrouping by Multiple Columns\nPivot Tables with .pivot"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec25/sampling.html",
    "href": "fa24/lectures_qmd_complete/lec25/sampling.html",
    "title": "Sampling",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 25\nA quick dive into some statistics.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec25/sampling.html#sampling-and-randomness",
    "href": "fa24/lectures_qmd_complete/lec25/sampling.html#sampling-and-randomness",
    "title": "Sampling",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 25\nA quick dive into some statistics.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec25/sampling.html#population-vs.-sampling-frame-vs.-sample",
    "href": "fa24/lectures_qmd_complete/lec25/sampling.html#population-vs.-sampling-frame-vs.-sample",
    "title": "Sampling",
    "section": "Population vs. Sampling Frame vs. Sample",
    "text": "Population vs. Sampling Frame vs. Sample\n\nGiven a research question, the population is the group you want to learn something about.\n\nHowever, directly studying the population as a whole is often not possible! Data might not exist at that scale, or it might be too costly to collect, if it’s even possible to gather that information.\n\nSo, we want to use a sample from the population to make inferences.\n\nIf the sample is a good representation of the population, we can make useful analyses at a much lower cost.\n\nDepending on how we select our sample, we may miss individuals from the population we’re interested in, and we might also include individuals that are not in the population.\n\nThe list we actually draw our sample from is the sampling frame."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec25/sampling.html#population-vs.-sampling-frame-vs.-sample-1",
    "href": "fa24/lectures_qmd_complete/lec25/sampling.html#population-vs.-sampling-frame-vs.-sample-1",
    "title": "Sampling",
    "section": "Population vs. Sampling Frame vs. Sample",
    "text": "Population vs. Sampling Frame vs. Sample\n\nExamples:\n\nA classroom of students in a school.\n\nSample: classroom\nPopulation: student body of the school\n\nPicking out 10 marbles from a bag with 100 marbles.\n\nSample: 10 marbles\nPopulation: bag of marbles\n\nPublished papers in an academic journal.\n\nSample: published papers in the journal\nPopulation: all research happening in the field\n\n\nSampling Frame: All classrooms\nSampling Frame: All marbles\nSampling Frame: All accessible papers"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec25/sampling.html#population-vs.-sampling-frame-vs.-sample-2",
    "href": "fa24/lectures_qmd_complete/lec25/sampling.html#population-vs.-sampling-frame-vs.-sample-2",
    "title": "Sampling",
    "section": "Population vs. Sampling Frame vs. Sample",
    "text": "Population vs. Sampling Frame vs. Sample\n\nLet’s say you’re planning a social event for all second-year students at your school. Since you only have the budget to cater pizza, you want to figure out what pizza toppings second-year students enjoy, and buy pizza toppings according to how popular they are.\n\nOur population is second-year students. Since our social event is for second-year students, the preferences of students that are not second-years is not relevant.\n\nIn order to figure out the most popular flavors, you survey every student walking into the cafeteria from 12 PM to 1 PM by asking what their favorite topping is. Assume that everyone responds.\n\nOur sampling frame is students walking into the cafeteria between 12 and 1."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec25/sampling.html#population-vs.-sampling-frame-vs.-sample-3",
    "href": "fa24/lectures_qmd_complete/lec25/sampling.html#population-vs.-sampling-frame-vs.-sample-3",
    "title": "Sampling",
    "section": "Population vs. Sampling Frame vs. Sample",
    "text": "Population vs. Sampling Frame vs. Sample\n\nIf we draw a sample from this sampling frame, is our sample representative? Why or why not?\n\nNot necessarily. Our survey will include the responses of students that are not second-years, who might have different preferences than the second-years.\n\nHow can we change our sampling method to make our sample look more like our population?\n\nWe could send out an email to only second-year students, only record the response of second-year students, conduct the survey in more locations…\n\nIf a sample is representative, then it looks like the population. In this case, our sample may not be very representative.\nAre our results generalizable?\n\nMaybe! For example, first-year students might have similar pizza preferences, but professors might not."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec25/sampling.html#sampling-approaches",
    "href": "fa24/lectures_qmd_complete/lec25/sampling.html#sampling-approaches",
    "title": "Sampling",
    "section": "Sampling Approaches",
    "text": "Sampling Approaches\n\n➤\n\nRecap\n\n\nSample Setting\n\n\nBiases\n\n\nSampling Approaches"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec25/sampling.html#simple-random-sampling",
    "href": "fa24/lectures_qmd_complete/lec25/sampling.html#simple-random-sampling",
    "title": "Sampling",
    "section": "Simple Random Sampling",
    "text": "Simple Random Sampling\n\nSample drawn uniformly at random, without replacement\nEvery subset of the population has the same chance of being chosen from the sampling frame\n\nEach individual has the same probability of selection as any other individual\nEach pair has the same probability of selection as any other pair\nEach trio has the same probability of selection as any other trio…"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec25/sampling.html#complex-sampling",
    "href": "fa24/lectures_qmd_complete/lec25/sampling.html#complex-sampling",
    "title": "Sampling",
    "section": "Complex Sampling",
    "text": "Complex Sampling\n\nStratified random sampling: Divide populations into subgroups (these are the strata) based on population characteristics, then draw random sample from each strata.\n\nCharacteristics within each strata should be homogenous, but characteristics between different strata should be heterogeneous\nRequires detailed population information, which may not be readily available\nImproves representativeness by carefully curating the makeup of the sampling frame"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec25/sampling.html#quota-sampling",
    "href": "fa24/lectures_qmd_complete/lec25/sampling.html#quota-sampling",
    "title": "Sampling",
    "section": "Quota Sampling",
    "text": "Quota Sampling\n\nQuota sampling is a non-probability sampling technique where you arbitrarily select a sample that includes a specific number of samples from particular categories.\n\nExample: You’re a classical musician who wants to know what piece of music other orchestra members want to play. In order to figure this out, you ask the first two violin players, first two trumpet players, first flute player, first three viola players, and first percussionist you see at rehearsal.\nEasier to do than stratified random sampling, with similar intentions"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec25/sampling.html#snowball-sampling",
    "href": "fa24/lectures_qmd_complete/lec25/sampling.html#snowball-sampling",
    "title": "Sampling",
    "section": "Snowball Sampling",
    "text": "Snowball Sampling\n\nSnowball sampling is a non-probabilistic sampling method where existing study subjects recruit future subjects from among their acquaintances, such as through a referral program.\n\nUseful when study subjects have a rare characteristic that you are interested in studying. The concept of homophily is why it’s easier to find subjects with the rare characteristic by referral.\nThis could lead to skewed results due to in-group bias and bias introduced through the non-probabilistic method of constructing the sample."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec22/computational-social-science.html",
    "href": "fa24/lectures_qmd_complete/lec22/computational-social-science.html",
    "title": "Computational Social Science",
    "section": "",
    "text": "➤\n\nRecap\n\n\nSample Setting\n\n\nBiases\n\n\nSampling Approaches"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec22/computational-social-science.html#computational-social-science",
    "href": "fa24/lectures_qmd_complete/lec22/computational-social-science.html#computational-social-science",
    "title": "Computational Social Science",
    "section": "",
    "text": "➤\n\nRecap\n\n\nSample Setting\n\n\nBiases\n\n\nSampling Approaches"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec22/computational-social-science.html#what-is-computational-social-science",
    "href": "fa24/lectures_qmd_complete/lec22/computational-social-science.html#what-is-computational-social-science",
    "title": "Computational Social Science",
    "section": "What is Computational Social Science?",
    "text": "What is Computational Social Science?\n\n\nSpeaker notes\n\nA little useless…"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec22/computational-social-science.html#what-is-computational-social-science-1",
    "href": "fa24/lectures_qmd_complete/lec22/computational-social-science.html#what-is-computational-social-science-1",
    "title": "Computational Social Science",
    "section": "What is Computational Social Science?",
    "text": "What is Computational Social Science?\n\n\nSpeaker notes\n\nSource: https://direct.mit.edu/coli/article/50/1/237/118498/Can-Large-Language-Models-Transform-Computational"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec22/sampling-approaches.html",
    "href": "fa24/lectures_qmd_complete/lec22/sampling-approaches.html",
    "title": "Sampling Approaches",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 22\nThinking about representation.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec22/sampling-approaches.html#sampling-and-css",
    "href": "fa24/lectures_qmd_complete/lec22/sampling-approaches.html#sampling-and-css",
    "title": "Sampling Approaches",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 22\nThinking about representation.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec22/sampling-approaches.html#population-vs.-sampling-frame-vs.-sample",
    "href": "fa24/lectures_qmd_complete/lec22/sampling-approaches.html#population-vs.-sampling-frame-vs.-sample",
    "title": "Sampling Approaches",
    "section": "Population vs. Sampling Frame vs. Sample",
    "text": "Population vs. Sampling Frame vs. Sample\n\nGiven a research question, the population is the group you want to learn something about.\n\nHowever, directly studying the population as a whole is often not possible! Data might not exist at that scale, or it might be too costly to collect, if it’s even possible to gather that information.\n\nSo, we want to use a sample from the population to make inferences.\n\nIf the sample is a good representation of the population, we can make useful analyses at a much lower cost.\n\nDepending on how we select our sample, we may miss individuals from the population we’re interested in, and we might also include individuals that are not in the population.\n\nThe list we actually draw our sample from is the sampling frame."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec22/sampling-approaches.html#population-vs.-sampling-frame-vs.-sample-1",
    "href": "fa24/lectures_qmd_complete/lec22/sampling-approaches.html#population-vs.-sampling-frame-vs.-sample-1",
    "title": "Sampling Approaches",
    "section": "Population vs. Sampling Frame vs. Sample",
    "text": "Population vs. Sampling Frame vs. Sample\n\nExamples:\n\nA classroom of students in a school.\n\nSample: classroom\nPopulation: student body of the school\n\nPicking out 10 marbles from a bag with 100 marbles.\n\nSample: 10 marbles\nPopulation: bag of marbles\n\nPublished papers in an academic journal.\n\nSample: published papers in the journal\nPopulation: all research happening in the field\n\n\nSampling Frame: All classrooms\nSampling Frame: All marbles\nSampling Frame: All accessible papers"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec22/sampling-approaches.html#population-vs.-sampling-frame-vs.-sample-2",
    "href": "fa24/lectures_qmd_complete/lec22/sampling-approaches.html#population-vs.-sampling-frame-vs.-sample-2",
    "title": "Sampling Approaches",
    "section": "Population vs. Sampling Frame vs. Sample",
    "text": "Population vs. Sampling Frame vs. Sample\n\nLet’s say you’re planning a social event for all second-year students at your school. Since you only have the budget to cater pizza, you want to figure out what pizza toppings second-year students enjoy, and buy pizza toppings according to how popular they are.\n\nOur population is second-year students. Since our social event is for second-year students, the preferences of students that are not second-years is not relevant.\n\nIn order to figure out the most popular flavors, you survey every student walking into the cafeteria from 12 PM to 1 PM by asking what their favorite topping is. Assume that everyone responds.\n\nOur sampling frame is students walking into the cafeteria between 12 and 1."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec22/sampling-approaches.html#population-vs.-sampling-frame-vs.-sample-3",
    "href": "fa24/lectures_qmd_complete/lec22/sampling-approaches.html#population-vs.-sampling-frame-vs.-sample-3",
    "title": "Sampling Approaches",
    "section": "Population vs. Sampling Frame vs. Sample",
    "text": "Population vs. Sampling Frame vs. Sample\n\nIf we draw a sample from this sampling frame, is our sample representative? Why or why not?\n\nNot necessarily. Our survey will include the responses of students that are not second-years, who might have different preferences than the second-years.\n\nHow can we change our sampling method to make our sample look more like our population?\n\nWe could send out an email to only second-year students, only record the response of second-year students, conduct the survey in more locations…\n\nIf a sample is representative, then it looks like the population. In this case, our sample may not be very representative.\nAre our results generalizable?\n\nMaybe! For example, first-year students might have similar pizza preferences, but professors might not."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec22/sampling-approaches.html#sampling-approaches",
    "href": "fa24/lectures_qmd_complete/lec22/sampling-approaches.html#sampling-approaches",
    "title": "Sampling Approaches",
    "section": "Sampling Approaches",
    "text": "Sampling Approaches\n\n➤\n\nRecap\n\n\nSample Setting\n\n\nBiases\n\n\nSampling Approaches"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec22/sampling-approaches.html#simple-random-sampling",
    "href": "fa24/lectures_qmd_complete/lec22/sampling-approaches.html#simple-random-sampling",
    "title": "Sampling Approaches",
    "section": "Simple Random Sampling",
    "text": "Simple Random Sampling\n\nSample drawn uniformly at random, without replacement\nEvery subset of the population has the same chance of being chosen from the sampling frame\n\nEach individual has the same probability of selection as any other individual\nEach pair has the same probability of selection as any other pair\nEach trio has the same probability of selection as any other trio…"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec22/sampling-approaches.html#complex-sampling",
    "href": "fa24/lectures_qmd_complete/lec22/sampling-approaches.html#complex-sampling",
    "title": "Sampling Approaches",
    "section": "Complex Sampling",
    "text": "Complex Sampling\n\nStratified random sampling: Divide populations into subgroups (these are the strata) based on population characteristics, then draw random sample from each strata.\n\nCharacteristics within each strata should be homogenous, but characteristics between different strata should be heterogeneous\nRequires detailed population information, which may not be readily available\nImproves representativeness by carefully curating the makeup of the sampling frame"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec22/sampling-approaches.html#quota-sampling",
    "href": "fa24/lectures_qmd_complete/lec22/sampling-approaches.html#quota-sampling",
    "title": "Sampling Approaches",
    "section": "Quota Sampling",
    "text": "Quota Sampling\n\nQuota sampling is a non-probability sampling technique where you arbitrarily select a sample that includes a specific number of samples from particular categories.\n\nExample: You’re a classical musician who wants to know what piece of music other orchestra members want to play. In order to figure this out, you ask the first two violin players, first two trumpet players, first flute player, first three viola players, and first percussionist you see at rehearsal.\nEasier to do than stratified random sampling, with similar intentions"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec22/sampling-approaches.html#snowball-sampling",
    "href": "fa24/lectures_qmd_complete/lec22/sampling-approaches.html#snowball-sampling",
    "title": "Sampling Approaches",
    "section": "Snowball Sampling",
    "text": "Snowball Sampling\n\nSnowball sampling is a non-probabilistic sampling method where existing study subjects recruit future subjects from among their acquaintances, such as through a referral program.\n\nUseful when study subjects have a rare characteristic that you are interested in studying. The concept of homophily is why it’s easier to find subjects with the rare characteristic by referral.\nThis could lead to skewed results due to in-group bias and bias introduced through the non-probabilistic method of constructing the sample."
  },
  {
    "objectID": "fa24/lectures_qmd/lec20.html",
    "href": "fa24/lectures_qmd/lec20.html",
    "title": "Lecture 20 Data 6 Fall 2024 - More Iteration",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 20\nDoing things over and over and over again (again).\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd/lec20.html#slide-1-more-iteration",
    "href": "fa24/lectures_qmd/lec20.html#slide-1-more-iteration",
    "title": "Lecture 20 Data 6 Fall 2024 - More Iteration",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 20\nDoing things over and over and over again (again).\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd/lec20.html#slide-2-week-11",
    "href": "fa24/lectures_qmd/lec20.html#slide-2-week-11",
    "title": "Lecture 20 Data 6 Fall 2024 - More Iteration",
    "section": "Slide 2: Week 11",
    "text": "Slide 2: Week 11\n\nHomework 4, Reading 5 released TONIGHT!!\nHomework 4 due next Thursday\nReading 5 due next next Thursday\nQuiz 2 next Friday\n\nScope: group/pivot, visualizations, control, iteration\n\nSurvey due tonight!\nAnnouncements!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec20.html#slide-3-todays-roadmap",
    "href": "fa24/lectures_qmd/lec20.html#slide-3-todays-roadmap",
    "title": "Lecture 20 Data 6 Fall 2024 - More Iteration",
    "section": "Slide 3: Today’s Roadmap",
    "text": "Slide 3: Today’s Roadmap\n\nReview: For Loops\nWhile Loops\nExamples\nDemo: Sorting an Array\nLecture 20, Data 6 Fall 2024"
  },
  {
    "objectID": "fa24/lectures_qmd/lec20.html#slide-4-review-for-loops",
    "href": "fa24/lectures_qmd/lec20.html#slide-4-review-for-loops",
    "title": "Lecture 20 Data 6 Fall 2024 - More Iteration",
    "section": "Slide 4: Review: For Loops",
    "text": "Slide 4: Review: For Loops\n\n\nReview: For Loops\n\n\nWhile Loops\n\n\nExamples\n\n\nDemo: Sorting an Array\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec20.html#slide-5-what-would-be-the-output-of-the-following-code",
    "href": "fa24/lectures_qmd/lec20.html#slide-5-what-would-be-the-output-of-the-following-code",
    "title": "Lecture 20 Data 6 Fall 2024 - More Iteration",
    "section": "Slide 5: What would be the output of the following code?",
    "text": "Slide 5: What would be the output of the following code?\n\n\nSpeaker notes\n\nhttps://pythontutor.com/cp/composingprograms.html#code=%0A%0Acounter%20%3D%200%0Alst%20%3D%20%5B1,%202,%203,%204%5D%0Afor%20i%20in%20range%28len%28lst%29%29%3A%20%23Range%20is%20a%20built-in%20version%20of%20np.arange%0A%20%20%20%20counter%20%2B%3D%20lst%5Bi%5D%0Aprint%28counter%29&cumulative=true&mode=edit&origin=composingprograms.js&py=3&rawInputLstJSON=%5B%5D"
  },
  {
    "objectID": "fa24/lectures_qmd/lec20.html#slide-6-what-about-this",
    "href": "fa24/lectures_qmd/lec20.html#slide-6-what-about-this",
    "title": "Lecture 20 Data 6 Fall 2024 - More Iteration",
    "section": "Slide 6: What about this?",
    "text": "Slide 6: What about this?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec20.html#slide-7-what-about-this",
    "href": "fa24/lectures_qmd/lec20.html#slide-7-what-about-this",
    "title": "Lecture 20 Data 6 Fall 2024 - More Iteration",
    "section": "Slide 7: What about this?",
    "text": "Slide 7: What about this?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec20.html#slide-8-create-a-new-array-such-that-each-element-has-its-square-added-after-it.",
    "href": "fa24/lectures_qmd/lec20.html#slide-8-create-a-new-array-such-that-each-element-has-its-square-added-after-it.",
    "title": "Lecture 20 Data 6 Fall 2024 - More Iteration",
    "section": "Slide 8: Create a new array such that each element has it’s square added after it.",
    "text": "Slide 8: Create a new array such that each element has it’s square added after it."
  },
  {
    "objectID": "fa24/lectures_qmd/lec20.html#slide-9-copy-paste-this-code-into-a-jupyter-notebook",
    "href": "fa24/lectures_qmd/lec20.html#slide-9-copy-paste-this-code-into-a-jupyter-notebook",
    "title": "Lecture 20 Data 6 Fall 2024 - More Iteration",
    "section": "Slide 9: Copy Paste this Code into a Jupyter Notebook",
    "text": "Slide 9: Copy Paste this Code into a Jupyter Notebook\n\nfrom datascience import *\nimport numpy as np\ndata = make_array(1, 2, 3)\ndef square(i):\nreturn i * i\nresulting_array = …\nfor …:\nresulting_array = …\nresulting_array = …\nresulting_array"
  },
  {
    "objectID": "fa24/lectures_qmd/lec20.html#slide-10-skeleton-code",
    "href": "fa24/lectures_qmd/lec20.html#slide-10-skeleton-code",
    "title": "Lecture 20 Data 6 Fall 2024 - More Iteration",
    "section": "Slide 10: Skeleton Code",
    "text": "Slide 10: Skeleton Code"
  },
  {
    "objectID": "fa24/lectures_qmd/lec20.html#slide-11-while-loops",
    "href": "fa24/lectures_qmd/lec20.html#slide-11-while-loops",
    "title": "Lecture 20 Data 6 Fall 2024 - More Iteration",
    "section": "Slide 11: While Loops",
    "text": "Slide 11: While Loops\n\n\nReview: For Loops\n\n\nWhile Loops\n\n\nExamples\n\n\nDemo: Sorting an Array\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec20.html#slide-12-two-types-of-loops",
    "href": "fa24/lectures_qmd/lec20.html#slide-12-two-types-of-loops",
    "title": "Lecture 20 Data 6 Fall 2024 - More Iteration",
    "section": "Slide 12: Two Types of Loops",
    "text": "Slide 12: Two Types of Loops\n\nLoops allow us to repeat the execution of code.\nThere are two types of loops in Python: the while loop and the for loop.\nwhile :\n\n“While this condition is true, repeat this code.”\nfor  in :\n\n“For each element of this sequence, repeat this code.”\nSequences include arrays, lists, strings and more."
  },
  {
    "objectID": "fa24/lectures_qmd/lec20.html#slide-13-while-loops",
    "href": "fa24/lectures_qmd/lec20.html#slide-13-while-loops",
    "title": "Lecture 20 Data 6 Fall 2024 - More Iteration",
    "section": "Slide 13: While Loops",
    "text": "Slide 13: While Loops\n\nWhile loops repeat the code in their body while a certain boolean expression is True.\nWhile loops are often used when we don’t know how many times we need our loop to repeat\nWe often keep track of some sort of counter and check it is above, below, or equal to a certain value."
  },
  {
    "objectID": "fa24/lectures_qmd/lec20.html#slide-14-which-loop-should-i-use",
    "href": "fa24/lectures_qmd/lec20.html#slide-14-which-loop-should-i-use",
    "title": "Lecture 20 Data 6 Fall 2024 - More Iteration",
    "section": "Slide 14: Which Loop Should I Use? 🤔",
    "text": "Slide 14: Which Loop Should I Use? 🤔\n\nFor Loop: when you know how many iterations will be run in advance. This will usually be the case moving forward.\nWhile Loop: when you don’t know how many iterations will be run in advance."
  },
  {
    "objectID": "fa24/lectures_qmd/lec20.html#slide-15-which-loop-should-i-use",
    "href": "fa24/lectures_qmd/lec20.html#slide-15-which-loop-should-i-use",
    "title": "Lecture 20 Data 6 Fall 2024 - More Iteration",
    "section": "Slide 15: Which Loop Should I Use? 🤔",
    "text": "Slide 15: Which Loop Should I Use? 🤔\n\nBoth sum_squares_for and sum_squares_while have the same functionality. But we prefer the for loop implementation as it is more concise.\nDo This!\nDon’t Do This!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec20.html#slide-16-examples",
    "href": "fa24/lectures_qmd/lec20.html#slide-16-examples",
    "title": "Lecture 20 Data 6 Fall 2024 - More Iteration",
    "section": "Slide 16: Examples",
    "text": "Slide 16: Examples\n\n\nReview: For Loops\n\n\nWhile Loops\n\n\nExamples\n\n\nDemo: Sorting an Array\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec20.html#slide-17-example-fibonacci-sequence",
    "href": "fa24/lectures_qmd/lec20.html#slide-17-example-fibonacci-sequence",
    "title": "Lecture 20 Data 6 Fall 2024 - More Iteration",
    "section": "Slide 17: Example: Fibonacci Sequence",
    "text": "Slide 17: Example: Fibonacci Sequence\n\n0, 1, 1, 2, 3, 5, 8, 13, 21, 34, …"
  },
  {
    "objectID": "fa24/lectures_qmd/lec20.html#slide-18-example-prime-factorization",
    "href": "fa24/lectures_qmd/lec20.html#slide-18-example-prime-factorization",
    "title": "Lecture 20 Data 6 Fall 2024 - More Iteration",
    "section": "Slide 18: Example: Prime Factorization",
    "text": "Slide 18: Example: Prime Factorization"
  },
  {
    "objectID": "fa24/lectures_qmd/lec20.html#slide-19-in-conclusion",
    "href": "fa24/lectures_qmd/lec20.html#slide-19-in-conclusion",
    "title": "Lecture 20 Data 6 Fall 2024 - More Iteration",
    "section": "Slide 19: In Conclusion…",
    "text": "Slide 19: In Conclusion…"
  },
  {
    "objectID": "fa24/lectures_qmd/lec20.html#slide-20-summary",
    "href": "fa24/lectures_qmd/lec20.html#slide-20-summary",
    "title": "Lecture 20 Data 6 Fall 2024 - More Iteration",
    "section": "Slide 20: Summary",
    "text": "Slide 20: Summary\n\nFor loops perform one iteration for each element of a sequence.\nThis is very useful when working with arrays\nIf we don’t have an array we’re working with, we can use np.arange() to make a range to iterate over\nWhile loops repeat code as long as a boolean expression is True.\nwhile :\n\n“While this condition is true, repeat this code.”\nfor  in :\n\n“For each element of this sequence, repeat this code.”"
  },
  {
    "objectID": "fa24/lectures_qmd/lec20.html#slide-21-recap",
    "href": "fa24/lectures_qmd/lec20.html#slide-21-recap",
    "title": "Lecture 20 Data 6 Fall 2024 - More Iteration",
    "section": "Slide 21: Recap",
    "text": "Slide 21: Recap\n\nNext Time\nIteration\n\nWhile Loops\nSorting!\n\nQuick Check:\nhttps://docs.google.com/forms/d/e/1FAIpQLScOUAcRdVpYL0fB0b_HUuOz10vu0VzcOTnRFMFBYpGzwQZvmA/viewform?usp=sf_link\nDictionaries, File Formats"
  },
  {
    "objectID": "fa24/lectures_qmd/lec09.html",
    "href": "fa24/lectures_qmd/lec09.html",
    "title": "[Lec 9] Data 6 Fall 2024 - Applying",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 9\nWriting functions to augment our tables.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd/lec09.html#slide-1-applying",
    "href": "fa24/lectures_qmd/lec09.html#slide-1-applying",
    "title": "[Lec 9] Data 6 Fall 2024 - Applying",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 9\nWriting functions to augment our tables.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd/lec09.html#slide-2-week-5",
    "href": "fa24/lectures_qmd/lec09.html#slide-2-week-5",
    "title": "[Lec 9] Data 6 Fall 2024 - Applying",
    "section": "Slide 2: Week 5",
    "text": "Slide 2: Week 5\n\nHomework 2 released tonight, due next Friday\n\nSorry for the delay. It’ll be shorter than Homework 1 and will have no hidden tests. Turns out, autograders take time to write…\n\nAnnouncements!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec09.html#slide-3-todays-roadmap",
    "href": "fa24/lectures_qmd/lec09.html#slide-3-todays-roadmap",
    "title": "[Lec 9] Data 6 Fall 2024 - Applying",
    "section": "Slide 3: Today’s Roadmap",
    "text": "Slide 3: Today’s Roadmap\n\nMotivation\nApplying with .apply\nMasking with Boolean Arrays\nLecture 16, Data 6 Fall 2024"
  },
  {
    "objectID": "fa24/lectures_qmd/lec09.html#slide-4-untitled",
    "href": "fa24/lectures_qmd/lec09.html#slide-4-untitled",
    "title": "[Lec 9] Data 6 Fall 2024 - Applying",
    "section": "Slide 4: (untitled)",
    "text": "Slide 4: (untitled)\n\nReview:\nFirst python tutor\nSecond question!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec09.html#slide-5-motivation",
    "href": "fa24/lectures_qmd/lec09.html#slide-5-motivation",
    "title": "[Lec 9] Data 6 Fall 2024 - Applying",
    "section": "Slide 5: Motivation",
    "text": "Slide 5: Motivation\n\n\nMotivation\n\n\nApplying with .apply\n\n\nMasking with Boolean Arrays\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec09.html#slide-6-array-operations",
    "href": "fa24/lectures_qmd/lec09.html#slide-6-array-operations",
    "title": "[Lec 9] Data 6 Fall 2024 - Applying",
    "section": "Slide 6: Array Operations",
    "text": "Slide 6: Array Operations\n\nIt’s easy to apply mathematical operations to every element of an array. Remember, columns are arrays."
  },
  {
    "objectID": "fa24/lectures_qmd/lec09.html#slide-7-other-functions",
    "href": "fa24/lectures_qmd/lec09.html#slide-7-other-functions",
    "title": "[Lec 9] Data 6 Fall 2024 - Applying",
    "section": "Slide 7: Other Functions",
    "text": "Slide 7: Other Functions\n\nHowever, not all operations work nicely with arrays. For example, we may want to:\nTake a dog’s first and last name and generate its email, first.last@dogschool.edu.\nFactor in a dog’s size when computing its human age (larger dogs age faster).\nWe can write functions to do each of these things for one dog, but what about for all dogs?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec09.html#slide-8-applying-with-.apply",
    "href": "fa24/lectures_qmd/lec09.html#slide-8-applying-with-.apply",
    "title": "[Lec 9] Data 6 Fall 2024 - Applying",
    "section": "Slide 8: Applying with .apply",
    "text": "Slide 8: Applying with .apply\n\n\nMotivation\n\n\nApplying with .apply\n\n\nMasking with Boolean Arrays\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec09.html#slide-9-.apply",
    "href": "fa24/lectures_qmd/lec09.html#slide-9-.apply",
    "title": "[Lec 9] Data 6 Fall 2024 - Applying",
    "section": "Slide 9: .apply()",
    "text": "Slide 9: .apply()\n\nThe method\nt.apply(function, column_or_columns)\napplies function to every element in column_or_columns, and returns an array with the results.\nIf you only supply one column name, function should only take one argument.\nIf you supply X column names, function should take X arguments."
  },
  {
    "objectID": "fa24/lectures_qmd/lec09.html#slide-10",
    "href": "fa24/lectures_qmd/lec09.html#slide-10",
    "title": "[Lec 9] Data 6 Fall 2024 - Applying",
    "section": "Slide 10: ‹#›",
    "text": "Slide 10: ‹#›"
  },
  {
    "objectID": "fa24/lectures_qmd/lec09.html#slide-11",
    "href": "fa24/lectures_qmd/lec09.html#slide-11",
    "title": "[Lec 9] Data 6 Fall 2024 - Applying",
    "section": "Slide 11: ‹#›",
    "text": "Slide 11: ‹#›"
  },
  {
    "objectID": "fa24/lectures_qmd/lec09.html#slide-12-quick-check-1",
    "href": "fa24/lectures_qmd/lec09.html#slide-12-quick-check-1",
    "title": "[Lec 9] Data 6 Fall 2024 - Applying",
    "section": "Slide 12: Quick Check 1",
    "text": "Slide 12: Quick Check 1\n\nSuppose profs is the table shown below. The elements in the ‘gross’ column right now are strings. Fill in the blanks to replace the elements in the ‘gross’ column with integers. (Hint: use the fix_income function)\ndef fix_income(income):\nreturn income.replace(‘,’, ’’)\nfixed_income = profs.apply(_____, _____)\nprofs = profs.with_columns(‘gross’, _____)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec09.html#slide-13-data-cleaning",
    "href": "fa24/lectures_qmd/lec09.html#slide-13-data-cleaning",
    "title": "[Lec 9] Data 6 Fall 2024 - Applying",
    "section": "Slide 13: Data Cleaning",
    "text": "Slide 13: Data Cleaning\n\nData cleaning is the process of looking through data to fix inconsistencies. One such inconsistency is when the information in a column is stored as one type, but really should be stored as another – like in the Quick Check you just answered.\nThe real largest income is over 2.3 million, but the “dirty” version of the data doesn’t reflect that."
  },
  {
    "objectID": "fa24/lectures_qmd/lec09.html#slide-14-masking-with",
    "href": "fa24/lectures_qmd/lec09.html#slide-14-masking-with",
    "title": "[Lec 9] Data 6 Fall 2024 - Applying",
    "section": "Slide 14: Masking with",
    "text": "Slide 14: Masking with\nBoolean Arrays\n\n\nMotivation\n\n\nApplying with .apply\n\n\nMasking with Boolean Arrays\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec09.html#slide-15-masks-and-arrays",
    "href": "fa24/lectures_qmd/lec09.html#slide-15-masks-and-arrays",
    "title": "[Lec 9] Data 6 Fall 2024 - Applying",
    "section": "Slide 15: Masks and Arrays",
    "text": "Slide 15: Masks and Arrays\n\nMasking – also known as boolean indexing – is the process of indexing into an array or table with a array of booleans.\nOnly the elements at indexes 0 and 3."
  },
  {
    "objectID": "fa24/lectures_qmd/lec09.html#slide-16-masks-with-tables",
    "href": "fa24/lectures_qmd/lec09.html#slide-16-masks-with-tables",
    "title": "[Lec 9] Data 6 Fall 2024 - Applying",
    "section": "Slide 16: Masks with Tables",
    "text": "Slide 16: Masks with Tables\n\nWe can achieve the same behavior with tables – by using where with just a single argument.\nPreviously, where required two arguments.\nJust one argument: a list of booleans."
  },
  {
    "objectID": "fa24/lectures_qmd/lec09.html#slide-17-.where",
    "href": "fa24/lectures_qmd/lec09.html#slide-17-.where",
    "title": "[Lec 9] Data 6 Fall 2024 - Applying",
    "section": "Slide 17: .where()",
    "text": "Slide 17: .where()\n\nwhere behaves slightly differently depending on if you give it one argument or two, but under the hood it is doing the same thing – returning a table with only the rows where some boolean condition is True.\nt.where(column, pred) returns a new table with only the rows from t where column satisfies the predicate pred.\nt.where(boolean_arr) returns a new table with only the rows from t where the corresponding value in boolean_arr is True.\nQuestion: Why would we ever need the single-argument version of where? Isn’t it worse?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec09.html#slide-18-in-conclusion",
    "href": "fa24/lectures_qmd/lec09.html#slide-18-in-conclusion",
    "title": "[Lec 9] Data 6 Fall 2024 - Applying",
    "section": "Slide 18: In Conclusion…",
    "text": "Slide 18: In Conclusion…"
  },
  {
    "objectID": "fa24/lectures_qmd/lec09.html#slide-19-summary",
    "href": "fa24/lectures_qmd/lec09.html#slide-19-summary",
    "title": "[Lec 9] Data 6 Fall 2024 - Applying",
    "section": "Slide 19: Summary",
    "text": "Slide 19: Summary"
  },
  {
    "objectID": "fa24/lectures_qmd/lec09.html#slide-20-recap",
    "href": "fa24/lectures_qmd/lec09.html#slide-20-recap",
    "title": "[Lec 9] Data 6 Fall 2024 - Applying",
    "section": "Slide 20: Recap",
    "text": "Slide 20: Recap\n\nNext Time\nApplying Functions to Columns\nMasking with Boolean Arrays\nhttps://forms.gle/tcMM8Zp3C52FvLEK7\nComparisons\nBoolean Operators"
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html",
    "href": "fa24/lectures_qmd/lec25.html",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 25\nA quick dive into some statistics.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-1-sampling-and-randomness",
    "href": "fa24/lectures_qmd/lec25.html#slide-1-sampling-and-randomness",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 25\nA quick dive into some statistics.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-2-httpstinyurl.comdata6check",
    "href": "fa24/lectures_qmd/lec25.html#slide-2-httpstinyurl.comdata6check",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 2: https://tinyurl.com/data6check",
    "text": "Slide 2: https://tinyurl.com/data6check"
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-3-week-15",
    "href": "fa24/lectures_qmd/lec25.html#slide-3-week-15",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 3: Week 15",
    "text": "Slide 3: Week 15\n\nCourse evals - 1% extra credit if we hit at least 80% participation rate :D\nFinal Project Part 2 due December 9th\n\nReminder about OH and EdStem!\n\nOH on the glade - sometime during RRR week (likely Monday since that’s the project deadline)\n\nI will bring snacks & a volleyball\n\nAnnouncements!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-4-todays-roadmap",
    "href": "fa24/lectures_qmd/lec25.html#slide-4-todays-roadmap",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 4: Today’s Roadmap",
    "text": "Slide 4: Today’s Roadmap\n\nSampling\nRandomness\nLecture 25, Data 6 Fall 2024"
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-5-quick-aside-break-keyword",
    "href": "fa24/lectures_qmd/lec25.html#slide-5-quick-aside-break-keyword",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 5: Quick Aside: break keyword",
    "text": "Slide 5: Quick Aside: break keyword\n\n\nRandomness\n\n\nSimulation\n\n\nRepeated Simulations\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-6-lets-go-to-the-notebook",
    "href": "fa24/lectures_qmd/lec25.html#slide-6-lets-go-to-the-notebook",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 6: Let’s go to the notebook…",
    "text": "Slide 6: Let’s go to the notebook…\n\nI didn’t cover the break keyword, which is used in the Final Project part 2\nThe break keyword must be used within some sort of iteration (while or for loop)\n\nAs soon as we encounter the break keyword, we exit out of the loop\nIf used in a nested loop, we only exit from the innermost loop"
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-7-exam-prep-dictionaries",
    "href": "fa24/lectures_qmd/lec25.html#slide-7-exam-prep-dictionaries",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 7: Exam Prep: Dictionaries",
    "text": "Slide 7: Exam Prep: Dictionaries\n\n\nRandomness\n\n\nSimulation\n\n\nRepeated Simulations\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-8-dictionary-review",
    "href": "fa24/lectures_qmd/lec25.html#slide-8-dictionary-review",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 8: Dictionary Review",
    "text": "Slide 8: Dictionary Review\n\nGood practice for the final project + exam :D (see speaker notes for the Python Tutor link)\n\n\n\nSpeaker notes\n\nhttps://pythontutor.com/cp/composingprograms.html#code=check%20%3D%20%7B%7D%0A%0Afor%20i%20in%20np.arange%281,%20100%29%3A%0A%20%20%20%20if%20i%20%25%204%20%3D%3D%200%3A%0A%20%20%20%20%20%20%20%20break%0A%20%20%20%20check%5Bstr%28i%29%5D%20%3D%20i%0A%0Aprint%28check%5B0%5D%29%0Aprint%28check%5B%221%22%5D%29%0Aprint%28check%5B1%5D%29%0A%0A%0A&cumulative=true&mode=edit&origin=composingprograms.js&py=3&rawInputLstJSON=%5B%5D"
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-9-sample-setting",
    "href": "fa24/lectures_qmd/lec25.html#slide-9-sample-setting",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 9: Sample Setting",
    "text": "Slide 9: Sample Setting\n\n➤\n\nRecap\n\n\nSample Setting\n\n\nBiases\n\n\nSampling Approaches"
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-10-why-talk-about-samples",
    "href": "fa24/lectures_qmd/lec25.html#slide-10-why-talk-about-samples",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 10: Why talk about samples?",
    "text": "Slide 10: Why talk about samples?\n\nIf you want to create your own dataset, rather than use materials-based research\nRemember the concepts of external validity/generalizability!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-11-what-is-a-sample",
    "href": "fa24/lectures_qmd/lec25.html#slide-11-what-is-a-sample",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 11: What is a Sample?",
    "text": "Slide 11: What is a Sample?\n\nA sample is a subset of the population used to make inferences about the overall group.\nExamples:\n\nA classroom of students in a school.\n\nSample: classroom\nPopulation: student body of the school\n\nPicking out 10 marbles from a bag with 100 marbles.\n\nSample: 10 marbles\nPopulation: bag of marbles\n\nPublished papers in an academic journal.\n\nSample: published papers in the journal\nPopulation: all research happening in the field"
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-12-motivating-question",
    "href": "fa24/lectures_qmd/lec25.html#slide-12-motivating-question",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 12: Motivating Question",
    "text": "Slide 12: Motivating Question\n\nWhy would would we need to take a sample? What are the pros and cons?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-13-population-vs.-sampling-frame-vs.-sample",
    "href": "fa24/lectures_qmd/lec25.html#slide-13-population-vs.-sampling-frame-vs.-sample",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 13: Population vs. Sampling Frame vs. Sample",
    "text": "Slide 13: Population vs. Sampling Frame vs. Sample\n\nGiven a research question, the population is the group you want to learn something about.\n\nHowever, directly studying the population as a whole is often not possible! Data might not exist at that scale, or it might be too costly to collect, if it’s even possible to gather that information.\n\nSo, we want to use a sample from the population to make inferences.\n\nIf the sample is a good representation of the population, we can make useful analyses at a much lower cost.\n\nDepending on how we select our sample, we may miss individuals from the population we’re interested in, and we might also include individuals that are not in the population.\n\nThe list we actually draw our sample from is the sampling frame."
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-14-population-vs.-sampling-frame-vs.-sample",
    "href": "fa24/lectures_qmd/lec25.html#slide-14-population-vs.-sampling-frame-vs.-sample",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 14: Population vs. Sampling Frame vs. Sample",
    "text": "Slide 14: Population vs. Sampling Frame vs. Sample\n\nExamples:\n\nA classroom of students in a school.\n\nSample: classroom\nPopulation: student body of the school\n\nPicking out 10 marbles from a bag with 100 marbles.\n\nSample: 10 marbles\nPopulation: bag of marbles\n\nPublished papers in an academic journal.\n\nSample: published papers in the journal\nPopulation: all research happening in the field\n\n\nSampling Frame: All classrooms\nSampling Frame: All marbles\nSampling Frame: All accessible papers"
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-15-visualizing-the-relationship",
    "href": "fa24/lectures_qmd/lec25.html#slide-15-visualizing-the-relationship",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 15: Visualizing the Relationship",
    "text": "Slide 15: Visualizing the Relationship\n\nPopulation\nSampling Frame\nSample"
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-16-population-vs.-sampling-frame-vs.-sample",
    "href": "fa24/lectures_qmd/lec25.html#slide-16-population-vs.-sampling-frame-vs.-sample",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 16: Population vs. Sampling Frame vs. Sample",
    "text": "Slide 16: Population vs. Sampling Frame vs. Sample\n\nLet’s say you’re planning a social event for all second-year students at your school. Since you only have the budget to cater pizza, you want to figure out what pizza toppings second-year students enjoy, and buy pizza toppings according to how popular they are.\n\nOur population is second-year students. Since our social event is for second-year students, the preferences of students that are not second-years is not relevant.\n\nIn order to figure out the most popular flavors, you survey every student walking into the cafeteria from 12 PM to 1 PM by asking what their favorite topping is. Assume that everyone responds.\n\nOur sampling frame is students walking into the cafeteria between 12 and 1."
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-17-population-vs.-sampling-frame-vs.-sample",
    "href": "fa24/lectures_qmd/lec25.html#slide-17-population-vs.-sampling-frame-vs.-sample",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 17: Population vs. Sampling Frame vs. Sample",
    "text": "Slide 17: Population vs. Sampling Frame vs. Sample\n\nIf we draw a sample from this sampling frame, is our sample representative? Why or why not?\n\nNot necessarily. Our survey will include the responses of students that are not second-years, who might have different preferences than the second-years.\n\nHow can we change our sampling method to make our sample look more like our population?\n\nWe could send out an email to only second-year students, only record the response of second-year students, conduct the survey in more locations…\n\nIf a sample is representative, then it looks like the population. In this case, our sample may not be very representative.\nAre our results generalizable?\n\nMaybe! For example, first-year students might have similar pizza preferences, but professors might not."
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-18-key-terms",
    "href": "fa24/lectures_qmd/lec25.html#slide-18-key-terms",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 18: Key Terms",
    "text": "Slide 18: Key Terms\n\nPopulation: the group you want to learn something about\nSampling frame: the list from which the sample is taken\n\nRemember that this is not necessarily the same as the population!\n\nSample: a subset of the sampling frame used to make inferences about the population\nRepresentativeness: how similar a sample is to the intended population\nGeneralizability: the degree to which your results can be applied to a broader population or domain of interest, based on your sampling and data collection methods"
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-19-sampling-approaches",
    "href": "fa24/lectures_qmd/lec25.html#slide-19-sampling-approaches",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 19: Sampling Approaches",
    "text": "Slide 19: Sampling Approaches\n\n➤\n\nRecap\n\n\nSample Setting\n\n\nBiases\n\n\nSampling Approaches"
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-20-probabilistic-sampling-methods",
    "href": "fa24/lectures_qmd/lec25.html#slide-20-probabilistic-sampling-methods",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 20: Probabilistic Sampling Methods",
    "text": "Slide 20: Probabilistic Sampling Methods"
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-21-simple-random-sampling",
    "href": "fa24/lectures_qmd/lec25.html#slide-21-simple-random-sampling",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 21: Simple Random Sampling",
    "text": "Slide 21: Simple Random Sampling\n\nSample drawn uniformly at random, without replacement\nEvery subset of the population has the same chance of being chosen from the sampling frame\n\nEach individual has the same probability of selection as any other individual\nEach pair has the same probability of selection as any other pair\nEach trio has the same probability of selection as any other trio…"
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-22-complex-sampling",
    "href": "fa24/lectures_qmd/lec25.html#slide-22-complex-sampling",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 22: Complex Sampling",
    "text": "Slide 22: Complex Sampling\n\nStratified random sampling: Divide populations into subgroups (these are the strata) based on population characteristics, then draw random sample from each strata.\n\nCharacteristics within each strata should be homogenous, but characteristics between different strata should be heterogeneous\nRequires detailed population information, which may not be readily available\nImproves representativeness by carefully curating the makeup of the sampling frame"
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-23-non-probabilistic-sampling-methods",
    "href": "fa24/lectures_qmd/lec25.html#slide-23-non-probabilistic-sampling-methods",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 23: Non-Probabilistic Sampling Methods",
    "text": "Slide 23: Non-Probabilistic Sampling Methods"
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-24-quota-sampling",
    "href": "fa24/lectures_qmd/lec25.html#slide-24-quota-sampling",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 24: Quota Sampling",
    "text": "Slide 24: Quota Sampling\n\nQuota sampling is a non-probability sampling technique where you arbitrarily select a sample that includes a specific number of samples from particular categories.\n\nExample: You’re a classical musician who wants to know what piece of music other orchestra members want to play. In order to figure this out, you ask the first two violin players, first two trumpet players, first flute player, first three viola players, and first percussionist you see at rehearsal.\nEasier to do than stratified random sampling, with similar intentions"
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-25-snowball-sampling",
    "href": "fa24/lectures_qmd/lec25.html#slide-25-snowball-sampling",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 25: Snowball Sampling",
    "text": "Slide 25: Snowball Sampling\n\nSnowball sampling is a non-probabilistic sampling method where existing study subjects recruit future subjects from among their acquaintances, such as through a referral program.\n\nUseful when study subjects have a rare characteristic that you are interested in studying. The concept of homophily is why it’s easier to find subjects with the rare characteristic by referral.\nThis could lead to skewed results due to in-group bias and bias introduced through the non-probabilistic method of constructing the sample."
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-26-in-summary",
    "href": "fa24/lectures_qmd/lec25.html#slide-26-in-summary",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 26: In Summary…",
    "text": "Slide 26: In Summary…\n\nRandom sampling is better when you have a clearly defined, homogenous population\n\nStratified random sampling allows us to identify subgroups within a population for better representation and generalizability, but requires more granular data\n\nNon-probabilistic sampling is better when your sampling frame is smaller, but introduces more selection bias"
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-27-randomness",
    "href": "fa24/lectures_qmd/lec25.html#slide-27-randomness",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 27: Randomness",
    "text": "Slide 27: Randomness\n\n\nRandomness\n\n\nSimulation\n\n\nRepeated Simulations\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-28-what-is-randomness",
    "href": "fa24/lectures_qmd/lec25.html#slide-28-what-is-randomness",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 28: What Is Randomness?",
    "text": "Slide 28: What Is Randomness?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-29-what-phenomena-are-random",
    "href": "fa24/lectures_qmd/lec25.html#slide-29-what-phenomena-are-random",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 29: What Phenomena are Random?",
    "text": "Slide 29: What Phenomena are Random?\n\nThe lack of pattern or predictability.\nDice roll\nCoin flip\nLottery\nHorse races?\nWeather?\nGrades?\nWho wins the World Cup?\nRandomness\nAre some things ‘more random’ than others?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-30-computation-and-randomness",
    "href": "fa24/lectures_qmd/lec25.html#slide-30-computation-and-randomness",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 30: Computation and Randomness",
    "text": "Slide 30: Computation and Randomness\n\nQuestion: What problem does this pose?\nAnswer: Computers cannot, on their own, generate truly random numbers. So… now what? 🤔\nComputer programs take our instructions (code) and execute them. Their outputs are entirely predictable.\nRandomness is the lack of pattern or predictability in events. (Some events may be more likely than others.)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-31-generating-random-numbers",
    "href": "fa24/lectures_qmd/lec25.html#slide-31-generating-random-numbers",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 31: Generating Random Numbers",
    "text": "Slide 31: Generating Random Numbers\n\nBecause computers rely on predictable instructions, we need to be clever about how we introduce randomness in our programs.\nThere are two types of random number generators.\nTrue Random Number Generators\nGenerate random numbers through some truly random physical process.\nRolling a dice.\nMeasuring atmospheric noise caused by lightning.\nPros: Truly random.\nCons: Expensive to get this information into a computer (but can be done).\nPseudo-Random Number Generators\nGenerate numbers that seem random using mathematical formulas or pre-determined lists.\nEntirely determined by a “seed” (can be thought of as a key).\nPros: Easy to generate lots of numbers. We will use these.\nCons: Not technically random."
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-32-np.random",
    "href": "fa24/lectures_qmd/lec25.html#slide-32-np.random",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 32: np.random",
    "text": "Slide 32: np.random\n\nnp.random is a submodule of numpy that contains functions involving random numbers and random selection. Here are some useful functions. Determinism = having some replicable sequence."
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-33-some-examples",
    "href": "fa24/lectures_qmd/lec25.html#slide-33-some-examples",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 33: Some Examples",
    "text": "Slide 33: Some Examples"
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-34-in-conclusion",
    "href": "fa24/lectures_qmd/lec25.html#slide-34-in-conclusion",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 34: In Conclusion…",
    "text": "Slide 34: In Conclusion…"
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-35-summary",
    "href": "fa24/lectures_qmd/lec25.html#slide-35-summary",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 35: Summary",
    "text": "Slide 35: Summary\n\nnp.random is a submodule for generating pseudo-random numbers.\n\nnp.random.randint generates random integer(s).\nnp.random.choice randomly selects elements from an array.\nnp.random.seed sets the seed of a cell..\n\nRandomness underpins the field of statistics, which is an integral component of data science."
  },
  {
    "objectID": "fa24/lectures_qmd/lec25.html#slide-36-recap",
    "href": "fa24/lectures_qmd/lec25.html#slide-36-recap",
    "title": "[Lec 25] Data 6 Fall 2024 - Sampling and Randomness",
    "section": "Slide 36: Recap",
    "text": "Slide 36: Recap\n\nNext Time\nSamples\nRandomness\nLab on randomness and simulations"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html",
    "href": "fa24/lectures_qmd/lec18.html",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 18\nExpanding our programming toolkit.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-1-comparisons-and-control",
    "href": "fa24/lectures_qmd/lec18.html#slide-1-comparisons-and-control",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 18\nExpanding our programming toolkit.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-2-week-10",
    "href": "fa24/lectures_qmd/lec18.html#slide-2-week-10",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 2: Week 10",
    "text": "Slide 2: Week 10\n\nReading 5 and Homework 4 will be released next Monday\n\nYou’ll get 2.5 weeks for reading 5, and 1.5 weeks for homework 4\nHomework 4 content is in scope for quiz 2 (which is in 2 weeks)\n\nReading 4 and Homework 3 are due this Thursday!\nDiscussion this week is mandatory; attendance will be taken\nAnnouncements!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-3-todays-roadmap",
    "href": "fa24/lectures_qmd/lec18.html#slide-3-todays-roadmap",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 3: Today’s Roadmap",
    "text": "Slide 3: Today’s Roadmap\n\nComparisons\nBoolean Operators\nTruth Tables\nIf and If-Else Statements\nElif\nTruthy Values\nLecture 18, Data 6 Fall 2024"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-4-program-control-flow",
    "href": "fa24/lectures_qmd/lec18.html#slide-4-program-control-flow",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 4: Program Control Flow",
    "text": "Slide 4: Program Control Flow\n\nSo far, we have written code where we execute every line in sequence:\nA critical piece of programming is control flow: syntax structures that selectively choose to run (or not to run) lines of code.\nOver the next lecture, we will see howboolean expressions play a key role in program control flow!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-5-george-boole-1815-1864",
    "href": "fa24/lectures_qmd/lec18.html#slide-5-george-boole-1815-1864",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 5: George Boole (1815-1864)",
    "text": "Slide 5: George Boole (1815-1864)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-6-comparisons",
    "href": "fa24/lectures_qmd/lec18.html#slide-6-comparisons",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 6: Comparisons",
    "text": "Slide 6: Comparisons\n\n\nComparisons\n\n\nBoolean Operators\n\n\nTruth Tables\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-7-comparisons",
    "href": "fa24/lectures_qmd/lec18.html#slide-7-comparisons",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 7: Comparisons",
    "text": "Slide 7: Comparisons\n\nNaturally, we will want to compare values in our code.\n# is age at least age_limit?\nage_limit = 21\nage = 17\n# is password_guess equal to true_password?\ntrue_password = ‘qwerty1093x!’\npassword_guess = ‘QWERTY1093x!’"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-8-comparison-operators",
    "href": "fa24/lectures_qmd/lec18.html#slide-8-comparison-operators",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 8: Comparison Operators",
    "text": "Slide 8: Comparison Operators\n\nEach of these comparisons evaluate to True if the statement holds, and False if it doesn’t."
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-9-examples",
    "href": "fa24/lectures_qmd/lec18.html#slide-9-examples",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 9: Examples",
    "text": "Slide 9: Examples\n\n3 == 3 # True\n‘hello’ != ‘howdy’ # True\n-3 &gt; -2 # False\n-3 &lt; -2 # True\n‘alpha’ &gt;= ‘beta’ # False"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-10-equality",
    "href": "fa24/lectures_qmd/lec18.html#slide-10-equality",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 10: Equality",
    "text": "Slide 10: Equality\n\n= and == have very different meanings in Python. This is unlike algebra, where we use the same equals sign for different purposes.\nx = 5 # set x equal to 5\nx == 5 # is x equal to 5?\ny = x == 5 # valid, common code!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-11-comparing-different-types",
    "href": "fa24/lectures_qmd/lec18.html#slide-11-comparing-different-types",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 11: Comparing Different Types",
    "text": "Slide 11: Comparing Different Types\n\nYou can check for equality (== and !=) with values of any type.\n17 == ‘17’ # False\n‘zebra’ != True # True\nTrue == 1.0 # True\nBut you can only check for inequality between values of the same “category”:\n5 &gt; True # True\n‘alpha’ &gt;= ‘beta’ # False\n‘alpha’ &gt;= 5 # TypeError!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-12-be-careful",
    "href": "fa24/lectures_qmd/lec18.html#slide-12-be-careful",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 12: Be Careful…",
    "text": "Slide 12: Be Careful…\n\nRemember floating point issues from a three weeks ago?\n0.1 * 2 == 0.2 # True\n0.1 * 6 == 0.6 # False, because 0.1 * 6 = 0.60000000001\nUsing == to see if two floats are equal is generally not reliable. Instead, check if the difference is negligible using abs:\nabs(0.1 * 6 - 0.6) &lt; 0.0001 # True"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-13-string-containment",
    "href": "fa24/lectures_qmd/lec18.html#slide-13-string-containment",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 13: String Containment",
    "text": "Slide 13: String Containment\n\nThe in keyword allows us to check if one string is a substring of another, or if an element is present in our array/list.\n‘berkeley’ in ‘uc berkeley’ # True\n‘stanford’ in ‘uc berkeley’ # False\n‘berkeley’ in ‘UC BERKELEY’ # False\n1 in [1, 2, 3] # True"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-14-questions",
    "href": "fa24/lectures_qmd/lec18.html#slide-14-questions",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 14: Questions?",
    "text": "Slide 14: Questions?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-15-quick-check-1",
    "href": "fa24/lectures_qmd/lec18.html#slide-15-quick-check-1",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 15: Quick Check 1",
    "text": "Slide 15: Quick Check 1\n\nWhat is the value of not_passed after running these two lines?\npassed = 0.5 * 30 + 0.5 * 100 &gt;= 65\nnot_passed = passed == False"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-16-boolean-operators",
    "href": "fa24/lectures_qmd/lec18.html#slide-16-boolean-operators",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 16: Boolean Operators",
    "text": "Slide 16: Boolean Operators\n\n\nComparisons\n\n\nBoolean Operators\n\n\nTruth Tables\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-17-motivation",
    "href": "fa24/lectures_qmd/lec18.html#slide-17-motivation",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 17: Motivation",
    "text": "Slide 17: Motivation\n\nSometimes, we’ll need to check multiple conditions at once.\nyear = ‘junior’\nunits = 125\n# are both conditions true? is at least one true?\nyear_check = year == ‘senior’\nunits_check = units &gt;= 120"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-18-boolean-operators",
    "href": "fa24/lectures_qmd/lec18.html#slide-18-boolean-operators",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 18: Boolean operators",
    "text": "Slide 18: Boolean operators\n\nBoolean operators allow us to combine the result of multiple booleans.\nand and or operate on two (or more) operands; not operates on just one."
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-19-examples",
    "href": "fa24/lectures_qmd/lec18.html#slide-19-examples",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 19: Examples",
    "text": "Slide 19: Examples\n\nyear = ‘junior’\nunits = 125\nyear_check = year == ‘senior’ # False\nunits_check = units &gt;= 120 # True\nready_to_grad = year_check and units_check # False\nalmost_ready = year_check or units_check # True"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-20-examples",
    "href": "fa24/lectures_qmd/lec18.html#slide-20-examples",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 20: Examples",
    "text": "Slide 20: Examples\n\nIt’s best practice to use parentheses when expressions become complex, to avoid any ambiguity.\nn = 12\n(n % 2 == 0) and (n % 4 == 0) # True\n(n % 2 == 0) and not (n % 5 == 0) # True\n(n % 3 != 0) and (n % 4 != 0) # False\nAlso note that not x == c and x != c are equivalent expressions."
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-21-more-than-two-operands",
    "href": "fa24/lectures_qmd/lec18.html#slide-21-more-than-two-operands",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 21: More Than Two Operands",
    "text": "Slide 21: More Than Two Operands\n\nWe defined and and or in terms of two operands, but they work with any number of operands:\nTrue and False and True and True # False\nTrue or False or True or True # True\nand: True only if all operands are True.\nor: True if at least one operand is True."
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-22-compound-boolean-expressions",
    "href": "fa24/lectures_qmd/lec18.html#slide-22-compound-boolean-expressions",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 22: Compound boolean expressions",
    "text": "Slide 22: Compound boolean expressions\n\nThings can get pretty wacky!\n3 &lt; 4 &lt;= 5 # True\n3 &lt; 4 &gt; 2 &lt; 11 &gt; -1 # True\n3 &lt; 4 &lt; 2 &gt; 11 &gt; -1 # False\nBut again, just because you can do something doesn’t mean you should.\nThe first line is fine, but don’t use the latter two."
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-23-questions",
    "href": "fa24/lectures_qmd/lec18.html#slide-23-questions",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 23: Questions?",
    "text": "Slide 23: Questions?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-24-quick-check-2",
    "href": "fa24/lectures_qmd/lec18.html#slide-24-quick-check-2",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 24: Quick Check 2",
    "text": "Slide 24: Quick Check 2\n\nWhat are the values of wear_socks and wear_jacket after running the following lines of code?\ntemp = 67\nraining = bool(0)\nwear_socks = (not not raining) and (temp &lt; 60)\nwear_jacket = (not wear_socks) or (temp &gt; 65)\nwear_jacket = wear_jacket and wear_socks"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-25-motivation",
    "href": "fa24/lectures_qmd/lec18.html#slide-25-motivation",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 25: Motivation",
    "text": "Slide 25: Motivation\n\nGiven a boolean expression, it would be nice if we could do something based on whether or not the expression is True.\ndef ready_to_graduate(year, units):\nreturn (year == ‘senior’) and (units &gt;= 120)\n# if student is ready to graduate: email them ‘ready to graduate!’\n# if not: email them ‘not ready to graduate yet!’"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-26-if-statements-an-example",
    "href": "fa24/lectures_qmd/lec18.html#slide-26-if-statements-an-example",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 26: If Statements: An Example",
    "text": "Slide 26: If Statements: An Example\n\nIf statements allow our code to make decisions."
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-27-if-and-if-else",
    "href": "fa24/lectures_qmd/lec18.html#slide-27-if-and-if-else",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 27: If and If-Else",
    "text": "Slide 27: If and If-Else\n\n\nMotivation\n\n\nIf and If-Else Statements\n\n\nElif\n\n\nTruthy Values\n\n\nDemo\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-28-if-statements",
    "href": "fa24/lectures_qmd/lec18.html#slide-28-if-statements",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 28: If Statements",
    "text": "Slide 28: If Statements\n\nIf statements are used to control which lines of code are run, according to some boolean expression(s).\nThe most basic if-statement includes just one header: if.\nif :\n\nIf  is True,  is run. Otherwise, it is not run"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-29-example",
    "href": "fa24/lectures_qmd/lec18.html#slide-29-example",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 29: Example",
    "text": "Slide 29: Example"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-30-if-else",
    "href": "fa24/lectures_qmd/lec18.html#slide-30-if-else",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 30: If-Else",
    "text": "Slide 30: If-Else\n\nOptionally, you can also use the else header. Use else if you want your code to do something in the event that  is False.\nif :\n\nelse:\n\nIf  is True,  is run.\nIf  is False,  is run."
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-31-example",
    "href": "fa24/lectures_qmd/lec18.html#slide-31-example",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 31: Example",
    "text": "Slide 31: Example"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-32-example",
    "href": "fa24/lectures_qmd/lec18.html#slide-32-example",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 32: Example",
    "text": "Slide 32: Example\n\nSince functions “exit” when they see the return keyword, you can sometimes achieve the effect of using else without explicitly writing else.\nEquivalent!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-33-questions",
    "href": "fa24/lectures_qmd/lec18.html#slide-33-questions",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 33: Questions?",
    "text": "Slide 33: Questions?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-34",
    "href": "fa24/lectures_qmd/lec18.html#slide-34",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 34: ‹#›",
    "text": "Slide 34: ‹#›\n\nComplete the implementation of the function a_max, which returns 1 if a is both:\nPositive\nStrictly larger than b and c\nAnd -1 otherwise.\ndef a_max(a, b, c):\n…"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-35-be-concise",
    "href": "fa24/lectures_qmd/lec18.html#slide-35-be-concise",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 35: Be Concise!",
    "text": "Slide 35: Be Concise!\n\n# Not ideal\ndef is_23(n):\nif n == 23:\nreturn True\nelse:\nreturn False\n# Better\ndef is_23(n):\nreturn n == 23"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-36-elif",
    "href": "fa24/lectures_qmd/lec18.html#slide-36-elif",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 36: Elif",
    "text": "Slide 36: Elif\n\n\nMotivation\n\n\nIf and If-Else Statements\n\n\nElif\n\n\nTruthy Values\n\n\nDemo\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-37-motivation",
    "href": "fa24/lectures_qmd/lec18.html#slide-37-motivation",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 37: Motivation",
    "text": "Slide 37: Motivation\n\ndef sign(x):\nif x &gt; 0:\nreturn ‘Positive’\nelif x == 0:\nreturn ‘Neither’\nelse:\nreturn ‘Negative’\nInstead of having just 2 branches, what if we wanted multiple?\nThere’s a third header we should be aware of: elif (stands for “else if”)."
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-38-general-structure-of-a-conditional-statement",
    "href": "fa24/lectures_qmd/lec18.html#slide-38-general-structure-of-a-conditional-statement",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 38: General Structure of a Conditional Statement",
    "text": "Slide 38: General Structure of a Conditional Statement\n\nMust start with an if.\nZero or more elif in the middle.\nZero or one else, at the end only.\nif &lt;boolean expression 1&gt;:\n\nelif &lt;boolean expression 2&gt;:\n&lt;elif body 1&gt;\nelif &lt;boolean expression 3&gt;:\n&lt;elif body 2&gt;\n…\nelse:\n\nThe body of the first True expression is run, and everything else is skipped.\nIf none of the expressions are True, the  is run (if it’s there)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-39-quick-check",
    "href": "fa24/lectures_qmd/lec18.html#slide-39-quick-check",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 39: Quick Check",
    "text": "Slide 39: Quick Check\n\nComplete the implementation of the function num_pos, which prints (but does not return) the number of positive arguments it is passed in (0, 1, or 2).\ndef num_pos(a, b):\n…"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-40-be-careful-with-indentation",
    "href": "fa24/lectures_qmd/lec18.html#slide-40-be-careful-with-indentation",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 40: Be Careful with Indentation!",
    "text": "Slide 40: Be Careful with Indentation!\n\nIndentation makes a big difference.\nif x &gt; 5:\nprint(‘somewhat big!’)\nif x % 2 == 0:\nprint(‘and even too!’)\nelse:\nprint(‘tiny.’)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-41-truthy-values",
    "href": "fa24/lectures_qmd/lec18.html#slide-41-truthy-values",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 41: Truthy Values",
    "text": "Slide 41: Truthy Values\n\n\nMotivation\n\n\nIf and If-Else Statements\n\n\nElif\n\n\nTruthy Values\n\n\nDemo\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-42-casting-to-bool",
    "href": "fa24/lectures_qmd/lec18.html#slide-42-casting-to-bool",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 42: Casting to bool",
    "text": "Slide 42: Casting to bool\n\nWe didn’t discuss this in depth earlier, but we can cast any value in Python to bool.\nThis is unlike int (for example) where the input to the int() function had to look like an integer.\nbool(15) # True\nbool(’’) # False\nbool(‘bool’) # True\nbool(-1e15) # True\nbool(None) # False"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-43-truthy-values",
    "href": "fa24/lectures_qmd/lec18.html#slide-43-truthy-values",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 43: Truthy Values",
    "text": "Slide 43: Truthy Values\n\nIt turns out that almost everything evaluates to True when converted to bool.\nThese are pretty much the only exceptions (these all evaluate to False):\nFalse\n’’(the empty string)\n0 (and hence 0.0)\nNone\nGenerally things that are empty (empty lists, sets, dictionaries, etc)\nIf something evaluates to True when converted to bool, we call it a truthy value. Otherwise, we call it a falsy value."
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-44-truthy-values-in-practice",
    "href": "fa24/lectures_qmd/lec18.html#slide-44-truthy-values-in-practice",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 44: Truthy Values in Practice",
    "text": "Slide 44: Truthy Values in Practice\n\nConditional statements use the truthiness of an expression."
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-45-questions",
    "href": "fa24/lectures_qmd/lec18.html#slide-45-questions",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 45: Questions?",
    "text": "Slide 45: Questions?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-46-summary",
    "href": "fa24/lectures_qmd/lec18.html#slide-46-summary",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 46: Summary",
    "text": "Slide 46: Summary\n\nConditional statements are used to control which blocks of code are run.\nAll conditional statements begin with the if keyword.\nOptionally, we can use the elif and else keywords.\nReminder: indentation matters!\nAll values in Python have a “truthy value”, which are used implicitly in conditional statements."
  },
  {
    "objectID": "fa24/lectures_qmd/lec18.html#slide-47-recap",
    "href": "fa24/lectures_qmd/lec18.html#slide-47-recap",
    "title": "[Lec 18] Data 6 Fall 2024 - Comparisons and Control",
    "section": "Slide 47: Recap",
    "text": "Slide 47: Recap\n\nNext Time\nControl\n\nIf-Else Statements\nElif\n\nTruthy Values\nhttps://forms.gle/fvUoxjuD2EPLCeL59\nQuick Check\nIteration\n\nFor Loops"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html",
    "href": "fa24/lectures_qmd/lec02.html",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 02\nGetting familiar with our computing environment, and\nwriting our first Python programs.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University\ndata6.org/fa24/syllabus/#acknowledgements-"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-1-jupyter-notebooks-arithmetic",
    "href": "fa24/lectures_qmd/lec02.html#slide-1-jupyter-notebooks-arithmetic",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 02\nGetting familiar with our computing environment, and\nwriting our first Python programs.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University\ndata6.org/fa24/syllabus/#acknowledgements-"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-2-lecture-2",
    "href": "fa24/lectures_qmd/lec02.html#slide-2-lecture-2",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 2: Lecture 2",
    "text": "Slide 2: Lecture 2\n\nMake sure to fill out the welcome survey, posted on website!\nIntroduction post (also due next Tuesday)\nUpdate - three quick check drops\nLecture recordings by request\nHave a good long weekend!\n(Optional) Add songs to the collaborative playlist for pre-lecture vibes\n\nhttps://open.spotify.com/playlist/134DozgaTBxHXXta3fvydW?si=ad9e10b2e86d48d2&pt=fc545d61d6ebd5e6ce36910eabdc475a\n\nAnnouncements!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-3-todays-roadmap",
    "href": "fa24/lectures_qmd/lec02.html#slide-3-todays-roadmap",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 3: Today’s Roadmap",
    "text": "Slide 3: Today’s Roadmap\n\nProgramming in Python\n\nWhat Is Python Code?\nWhere Do We Write Code?\n\nArithmetic\n\nExpressions and Operators\nExample: Incidence\n\nJupyter Shortcuts\nComments, Data Types, and Errors\nLecture 02, Data 6 Fall 2024"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-4-experiences-with-coding",
    "href": "fa24/lectures_qmd/lec02.html#slide-4-experiences-with-coding",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 4: Experiences with Coding",
    "text": "Slide 4: Experiences with Coding"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-5-what-is-python-code",
    "href": "fa24/lectures_qmd/lec02.html#slide-5-what-is-python-code",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 5: What is Python Code?",
    "text": "Slide 5: What is Python Code?\n\n\nProgramming in Python\n\n\nArithmetic\n\n\nJupyter Shortcuts\n\n\nComments, Data Types, and Errors\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-6-what-is-a-computer-program-what-is-code",
    "href": "fa24/lectures_qmd/lec02.html#slide-6-what-is-a-computer-program-what-is-code",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 6: What is a computer program? What is code?",
    "text": "Slide 6: What is a computer program? What is code?\n\nCode refers to a computer program writtenin a particular programming language.\nIn this class, we use the Python language to write Python code.\nA computer program is a [set or sequence] of instructions in a programming language. [Wikipedia]\nComputer programs are nothing more than recipes: we write programs that tell the computer exactly what to do, and it does exactly that – nothing more, and nothing less.\nCommon (cold) take: computers are dumb."
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-7-why-python",
    "href": "fa24/lectures_qmd/lec02.html#slide-7-why-python",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 7: Why Python?",
    "text": "Slide 7: Why Python?\n\nPopular.\nVariety of uses.\n\nWeb development.\nScientific computing.\nData science and machine learning.\nNot really used for developing applications.\n\nData 8, CS61A, and more!\nEasy to dive right in!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-8-where-do-we-write-code",
    "href": "fa24/lectures_qmd/lec02.html#slide-8-where-do-we-write-code",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 8: Where Do We Write Code?",
    "text": "Slide 8: Where Do We Write Code?\n\n\nProgramming in Python\n\n\nArithmetic\n\n\nJupyter Shortcuts\n\n\nComments, Data Types, and Errors\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-9-where-do-we-write-code",
    "href": "fa24/lectures_qmd/lec02.html#slide-9-where-do-we-write-code",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 9: Where do we write code?",
    "text": "Slide 9: Where do we write code?\n\nTraditionally, code is written in a text editor or IDE, and then run in a command-line interface.\nVS Code, a popular text editor.\nCommand Line Interface\nWhile we could do everything in command-line interfaces, they aren’t the best suited for data science work, which often requires visualizations and written reports."
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-10-where-do-we-write-code",
    "href": "fa24/lectures_qmd/lec02.html#slide-10-where-do-we-write-code",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 10: Where do we write code?",
    "text": "Slide 10: Where do we write code?\n\nJupyter Notebooks allow us to write and run code within a single document. They also allow us to embedded text and code. We will use these exclusively!\nYou will learn about more coding tools if you take more CS/DS classes."
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-11-a-brief-history-of-jupyter",
    "href": "fa24/lectures_qmd/lec02.html#slide-11-a-brief-history-of-jupyter",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 11: A Brief History of Jupyter",
    "text": "Slide 11: A Brief History of Jupyter\n\nFernando Pérez’s Faculty Page"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-12-datahub",
    "href": "fa24/lectures_qmd/lec02.html#slide-12-datahub",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 12: DataHub",
    "text": "Slide 12: DataHub\n\nWe access all code in this class by going to\ndatahub.berkeley.edu\nDataHub is a Berkeley-hosted server that runs Jupyter notebooks. All students have their own DataHub “container”; think of this as your own virtual computer.\nThis is where you will work on all assignments.\nYou will not need to install anything locally (meaning that you could theoretically do all assignments for this class on your phone). All you need is a web browser.\nCourse staff can access everything in your DataHub to help debug your code.\nWorks like magic! Let’s go there now."
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-13-two-ways-to-access-jupyter-notebooks",
    "href": "fa24/lectures_qmd/lec02.html#slide-13-two-ways-to-access-jupyter-notebooks",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 13: Two ways to access Jupyter Notebooks",
    "text": "Slide 13: Two ways to access Jupyter Notebooks\n\nAccessing Jupyter Notebook\nGo to datahub.berkeley.edu (if you want to make your own notebook)\nFrom our course website: data6.org/fa24/"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-14-why-write-code-as-a-data-scientist",
    "href": "fa24/lectures_qmd/lec02.html#slide-14-why-write-code-as-a-data-scientist",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 14: Why write code as a data scientist?",
    "text": "Slide 14: Why write code as a data scientist?\n\nCompute\nVisualize\nShare"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-15-expressions-and-operators",
    "href": "fa24/lectures_qmd/lec02.html#slide-15-expressions-and-operators",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 15: Expressions and Operators",
    "text": "Slide 15: Expressions and Operators\n\n\nProgramming in Python\n\n\nArithmetic\n\n\nJupyter Shortcuts\n\n\nComments, Data Types, and Errors\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-16-python-as-a-calculator",
    "href": "fa24/lectures_qmd/lec02.html#slide-16-python-as-a-calculator",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 16: Python as a calculator",
    "text": "Slide 16: Python as a calculator\n\nFor now, think of Python as a calculator:\nCalculators take expressions and compute values.\n17\n-1 + 3.14\n2 ** 3\n(17 - 14) / 2\n15 % 2\nThe following are all expressions.\nNotes:\nExpressions consist of values (like 2) and operators (like + and **).\nExpressions evaluate to values.\nexpression"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-17-order-of-operations",
    "href": "fa24/lectures_qmd/lec02.html#slide-17-order-of-operations",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 17: Order of Operations",
    "text": "Slide 17: Order of Operations\n\nPython expressions use the same order of operations that you learned in earlier math classes (PEMDAS).\nBut sometimes, it’s not clear which operator is evaluated first. When you’re not sure, or you want to fix a certain order, use parentheses."
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-18-common-python-operators",
    "href": "fa24/lectures_qmd/lec02.html#slide-18-common-python-operators",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 18: Common Python Operators",
    "text": "Slide 18: Common Python Operators"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-19-example-incidence",
    "href": "fa24/lectures_qmd/lec02.html#slide-19-example-incidence",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 19: Example: Incidence",
    "text": "Slide 19: Example: Incidence\n\n\nProgramming in Python\n\n\nArithmetic\n\n\nJupyter Shortcuts\n\n\nComments, Data Types, and Errors\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-20-tuberculosis-united-states-2021",
    "href": "fa24/lectures_qmd/lec02.html#slide-20-tuberculosis-united-states-2021",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 20: Tuberculosis – United States, 2021",
    "text": "Slide 20: Tuberculosis – United States, 2021\n\nWhat is incidence?\nWhy use it here?\nCDC Morbidity and Mortality Weekly Report (MMWR) 03/25/2022.\nCheck out the source for data!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-21-incidence-rate",
    "href": "fa24/lectures_qmd/lec02.html#slide-21-incidence-rate",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 21: Incidence Rate",
    "text": "Slide 21: Incidence Rate\n\nUse Python to validate these values:\n2020 incidence\n2021 incidence\n†TB incidence is computed as “Cases per 100,000 persons using mid-year population estimates from the U.S. Census Bureau.”\nCDC MMWR source\nU.S. Census population estimates source (2019), source (2020-2021)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-22-congratulations",
    "href": "fa24/lectures_qmd/lec02.html#slide-22-congratulations",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 22: Congratulations!",
    "text": "Slide 22: Congratulations!\n\nIncidence is useful when comparing case rates across differently sized populations.\nYou just wrote your first program.\n🎉"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-23-tuberculosis-united-states-2021",
    "href": "fa24/lectures_qmd/lec02.html#slide-23-tuberculosis-united-states-2021",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 23: Tuberculosis – United States, 2021",
    "text": "Slide 23: Tuberculosis – United States, 2021\n\nWhat is incidence?\nWhy use it here?\nCDC Morbidity and Mortality Weekly Report (MMWR) 03/25/2022.\nCheck out the source for data!\n✅\nTo explore in lab!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-24-jupyter-shortcuts",
    "href": "fa24/lectures_qmd/lec02.html#slide-24-jupyter-shortcuts",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 24: Jupyter Shortcuts",
    "text": "Slide 24: Jupyter Shortcuts\n\n\nProgramming in Python\n\n\nArithmetic\n\n\nJupyter Shortcuts\n\n\nComments, Data Types, and Errors\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-25-summary-so-far",
    "href": "fa24/lectures_qmd/lec02.html#slide-25-summary-so-far",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 25: Summary So Far",
    "text": "Slide 25: Summary So Far\n\nWhen you run a code cell, it runs all of the expressions you’ve written in that cell and outputs only the value of the last evaluated expression.\nYou just wrote your first program.\n(we will discuss workarounds next time)\nShift + Enter"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-26-cells",
    "href": "fa24/lectures_qmd/lec02.html#slide-26-cells",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 26: Cells",
    "text": "Slide 26: Cells\n\nCode cells. This is where you write and execute code.\nWhen run, code cells output the value of the last evaluated expression.\nJupyter Notebooks are made up of cells. There are two main types of cells:\nMarkdown cells. This is where you write text and images that aren’t Python code.\nYou’ll explore Markdown in lab (documentation).\nMarkdown cells are always “run”, except when you’re editing them.\nIn this dropdown menu, you can view and change the type of cell you are currently editing."
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-27-markdown-cells",
    "href": "fa24/lectures_qmd/lec02.html#slide-27-markdown-cells",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 27: Markdown Cells",
    "text": "Slide 27: Markdown Cells"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-28-edit-mode-vs.-command-mode",
    "href": "fa24/lectures_qmd/lec02.html#slide-28-edit-mode-vs.-command-mode",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 28: Edit mode vs. command mode",
    "text": "Slide 28: Edit mode vs. command mode\n\nEdit mode: when you’re actively typing in the cell.\nCommand mode: when you’re not actively typing in the cell.\nKeyboard shortcuts are specific to the mode you’re using.\nHit the ESCAPE key on your keyboard to switch from edit mode to command mode."
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-29-reference-for-keyboard-shortcuts",
    "href": "fa24/lectures_qmd/lec02.html#slide-29-reference-for-keyboard-shortcuts",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 29: Reference for Keyboard Shortcuts",
    "text": "Slide 29: Reference for Keyboard Shortcuts\n\nUse this as a reference, don’t try to memorize these right now. Also, you can always use the toolbar!! You don’t have to use the keyboard shortcut."
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-30-comments-data-types-and-errors",
    "href": "fa24/lectures_qmd/lec02.html#slide-30-comments-data-types-and-errors",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 30: Comments, Data Types, and Errors",
    "text": "Slide 30: Comments, Data Types, and Errors\n\n\nProgramming in Python\n\n\nArithmetic\n\n\nJupyter Shortcuts\n\n\nComments, Data Types, and Errors\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-31-comments",
    "href": "fa24/lectures_qmd/lec02.html#slide-31-comments",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 31: Comments",
    "text": "Slide 31: Comments\n\nWhich version do you prefer?\nComments are used to explain what code does. Good programmers write code that is self-evident and use comments only where necessary. In assignments, we’ll also use comments to provide you with instructions."
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-32-comments",
    "href": "fa24/lectures_qmd/lec02.html#slide-32-comments",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 32: Comments",
    "text": "Slide 32: Comments\n\nWhich version do you prefer?\nComments are used to explain what code does. Good programmers write code that is self-evident and use comments only where necessary. In assignments, we’ll also use comments to provide you with instructions.\nYou can have both code and comments on the same line.\nAnything on a line after # is a comment and is not evaluated."
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-33-common-python-operators",
    "href": "fa24/lectures_qmd/lec02.html#slide-33-common-python-operators",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 33: Common Python Operators",
    "text": "Slide 33: Common Python Operators\n\n✅"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-34-common-python-operators",
    "href": "fa24/lectures_qmd/lec02.html#slide-34-common-python-operators",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 34: Common Python Operators",
    "text": "Slide 34: Common Python Operators\n\nWait, why are there two division operators?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-35-data-types",
    "href": "fa24/lectures_qmd/lec02.html#slide-35-data-types",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 35: Data Types",
    "text": "Slide 35: Data Types\n\nWe glossed over something earlier:\nThere are two different number data types to represent numbers in Python:\nThe data type of a value determines how Python evaluates expressions involving that value"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-36-arithmetic-operators-with-ints-and-floats",
    "href": "fa24/lectures_qmd/lec02.html#slide-36-arithmetic-operators-with-ints-and-floats",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 36: Arithmetic operators with ints and floats",
    "text": "Slide 36: Arithmetic operators with ints and floats\n\nWhen you add, subtract, and multiply int’s, the result will always be an int.\nAnytime you use a float in a calculation, the result is a float."
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-37-two-different-division-operators-modulo",
    "href": "fa24/lectures_qmd/lec02.html#slide-37-two-different-division-operators-modulo",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 37: Two Different Division Operators + Modulo",
    "text": "Slide 37: Two Different Division Operators + Modulo\n\nWhen you add, subtract, and multiply int’s, the result will always be an int.\nAnytime you use a float in a calculation, the result is a float.\nPython has several division-related operators:\n“Regular” division /\nInteger division, //\nModulo operator, %\nWhat is the modulo operator?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-38-the-pitfalls-of-floating-point",
    "href": "fa24/lectures_qmd/lec02.html#slide-38-the-pitfalls-of-floating-point",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 38: The Pitfalls of Floating Point",
    "text": "Slide 38: The Pitfalls of Floating Point\n\nSometimes when performing calculations with floating point numbers, you will see a small amount of random error added or subtracted to your result.\nThis is a consequence of how numbers are stored in computers. There’s nothing we can really do about it, but you should be aware of it!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-39-errors",
    "href": "fa24/lectures_qmd/lec02.html#slide-39-errors",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 39: Errors…",
    "text": "Slide 39: Errors…"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-40-everyone-gets-them",
    "href": "fa24/lectures_qmd/lec02.html#slide-40-everyone-gets-them",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 40: … everyone gets them",
    "text": "Slide 40: … everyone gets them"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-41-errors",
    "href": "fa24/lectures_qmd/lec02.html#slide-41-errors",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 41: Errors",
    "text": "Slide 41: Errors\n\nThis will happen a lot: a central goal in this class is to learn how to interpret and address error messages.\n…we get an error message.\nIf we try dividing by 0…"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-42-syntax-errors",
    "href": "fa24/lectures_qmd/lec02.html#slide-42-syntax-errors",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 42: Syntax errors",
    "text": "Slide 42: Syntax errors\n\nSyntax errors create nonsensical Python code. These errors will soon become your close friends.\nNotice that the error message tells you where in your code the error occurred (with a line number and an arrow). Use that!\nExplore the code! Experimentation is encouraged. Hypothesize, edit/run code, and observe results"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-43-in-conclusion",
    "href": "fa24/lectures_qmd/lec02.html#slide-43-in-conclusion",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 43: In Conclusion…",
    "text": "Slide 43: In Conclusion…"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-44-summary",
    "href": "fa24/lectures_qmd/lec02.html#slide-44-summary",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 44: Summary",
    "text": "Slide 44: Summary\n\nWe write code to tell our computer what to do. In this class, and in many other settings, we use the Python programming language.\nWe write all of our code in Jupyter Notebooks, which allow us to see the output of our code in the same document in which we wrote our code. They’re commonly used in data science.\nPython can be thought of as a calculator, that takes expressions and computes their values.\nWe learned several different arithmetic operators, each of which can be used in an expression.\nPython stores integers and decimals in different ways.\nComments help make our code more readable and sustainable.\nWhen our code has an error, the error message can help us fix it."
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-45-we-covered-a-lot-today.",
    "href": "fa24/lectures_qmd/lec02.html#slide-45-we-covered-a-lot-today.",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 45: We covered a lot today.",
    "text": "Slide 45: We covered a lot today.\nDon’t try and memorize it all! You will become more familiar with these commands as you work through labs and homework assignments.\n\nWe covered a lot today.\nDon’t try and memorize it all!\nYou will become more familiar with these commands as you work through labs and homework assignments.\nDon’t be discouraged!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-46-recap",
    "href": "fa24/lectures_qmd/lec02.html#slide-46-recap",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 46: Recap",
    "text": "Slide 46: Recap\n\nWhat is code?\nHow do we run code?\nArithmetic.\nRunning our first programs.\nComments, number types, and errors.\nCall Expressions\nNames and Assignment Statements\nMemory\nData Types\nNext Time"
  },
  {
    "objectID": "fa24/lectures_qmd/lec02.html#slide-47-quick-check",
    "href": "fa24/lectures_qmd/lec02.html#slide-47-quick-check",
    "title": "[Lec 02] Data 6 Fall 2024 - Jupyter Notebooks, Arithmetic",
    "section": "Slide 47: Quick Check",
    "text": "Slide 47: Quick Check\n\nhttps://docs.google.com/forms/d/e/1FAIpQLSd_-F_f1QIX0lbbFxav7l1ZuxAcS20PjYDk9-HBhLi_BvWj4w/viewform?usp=sf_link"
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html",
    "href": "fa24/lectures_qmd/lec17.html",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 17\nScatter plots and line plots.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University\ndata6.org/fa24/syllabus/#acknowledgements-"
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-1-visualizing-two-numerical-variables",
    "href": "fa24/lectures_qmd/lec17.html#slide-1-visualizing-two-numerical-variables",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 17\nScatter plots and line plots.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University\ndata6.org/fa24/syllabus/#acknowledgements-"
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-2-week-9",
    "href": "fa24/lectures_qmd/lec17.html#slide-2-week-9",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 2: Week 9",
    "text": "Slide 2: Week 9\n\nLet’s have a great class :)\nHomework 3 has released – due 10/31 11 PM\nReading 4 has released – due 10/31 11PM\nHomework 3 Clarifications\nnp.median will be added to Reference Sheet\nQ3b: please make sure that the rows are “Gender” and the columns are “Admission”\nAnnouncements!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-3-todays-roadmap",
    "href": "fa24/lectures_qmd/lec17.html#slide-3-todays-roadmap",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 3: Today’s Roadmap",
    "text": "Slide 3: Today’s Roadmap\n\nReview: Histograms\nReview: Overlaid and Side-by-Side Histograms\nReview: Grouped Bar Charts\nScatter Plots\nCustomizing Scatter Plots\nLine Plots\nMultiple Line Plots\nLecture 17, Data 6 Fall 2024"
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-4-review-histograms",
    "href": "fa24/lectures_qmd/lec17.html#slide-4-review-histograms",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 4: Review: Histograms",
    "text": "Slide 4: Review: Histograms\n\n\nReview: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-5-todays-data",
    "href": "fa24/lectures_qmd/lec17.html#slide-5-todays-data",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 5: Today’s Data",
    "text": "Slide 5: Today’s Data\n\nOur first dataset today comes from Basketball Reference. It contains per-game averages of players in the 2019-2020 NBA season.\n‘Player’(str) : name.\n‘Pos’(str) : general position (either Forward or Guard).\n‘Tm’(str) : abbreviated team.\n‘PTS’(float): average number of points scored per game.\n‘TRB’(float): average number of rebounds per game.\n‘AST’(float): average number of assists per game.\n‘3PA’(float): average number of three-point shots attempted per game.\n‘3P%’(float): average proportion of three-point shots that go in."
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-6-overlaid-and-side-by-side-histograms",
    "href": "fa24/lectures_qmd/lec17.html#slide-6-overlaid-and-side-by-side-histograms",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 6: Overlaid and Side-by-Side Histograms",
    "text": "Slide 6: Overlaid and Side-by-Side Histograms\n\n\nReview: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-7-histograms",
    "href": "fa24/lectures_qmd/lec17.html#slide-7-histograms",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 7: Histograms",
    "text": "Slide 7: Histograms\n\nA histogram visualizes the distribution of a numerical variable by binning. The method\nt.hist(column, density = False)\ncreates a histogram of the column column of t. This column must contain numerical values.\nIt automatically chooses bins for us. We can change them.\nWe will always set density = False."
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-8-group-and-overlay",
    "href": "fa24/lectures_qmd/lec17.html#slide-8-group-and-overlay",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 8: group and overlay",
    "text": "Slide 8: group and overlay\n\nWe can create grouped histograms by using the group and overlay arguments in hist.\nTo create one histogram for every unique category in some categorical column, assign the group argument to the name of the categorical column.\nt.hist(column, density = False, group = categorical_column)\nBy default, the above creates multiple histograms on the same set of axes. If you would rather have multiple individual histograms, set the overlay argument to False.\nt.hist(column, density = False, group = categorical_column, overlay = False)\nWhat if we want to show the distribution of a numerical variable, grouped by some categorical variable? For example, tips on weekends vs. tips on weekdays?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-9-example",
    "href": "fa24/lectures_qmd/lec17.html#slide-9-example",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 9: Example",
    "text": "Slide 9: Example\n\nIt can be hard to compare two distributions if one has significantly more observations than the other.\nWhen comparing distributions, compare the shape, not the absolute heights."
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-10-grouped-bar-charts",
    "href": "fa24/lectures_qmd/lec17.html#slide-10-grouped-bar-charts",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 10: Grouped Bar Charts",
    "text": "Slide 10: Grouped Bar Charts\n\n\nReview: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-11-separate-bar-charts",
    "href": "fa24/lectures_qmd/lec17.html#slide-11-separate-bar-charts",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 11: Separate Bar Charts",
    "text": "Slide 11: Separate Bar Charts\n\ntop_10.barh(‘track_name’, ‘rank’)\ntop_10.barh(‘track_name’, ‘peak_rank’)\nSpotify keeps track of each song’s “peak rank”, which is a song’s lowest rank since its release on the platform.\nWith our current tools, we’d likely make two different plots, which are difficult to compare:"
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-12-grouped-bar-charts",
    "href": "fa24/lectures_qmd/lec17.html#slide-12-grouped-bar-charts",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 12: Grouped Bar Charts",
    "text": "Slide 12: Grouped Bar Charts\n\ntop_10.select(‘rank’,\n‘track_name’,\n‘peak_rank’)\n\n.barh(‘track_name’)\nWe can use t.select() to build a “narrower” table with one categorical variable + several variables.\nIf the table we call barh on has multiple numerical columns, it will draw bars for each of them, and each column will get its own color!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-13-barh-optional-parameter-overlay",
    "href": "fa24/lectures_qmd/lec17.html#slide-13-barh-optional-parameter-overlay",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 13: barh() Optional Parameter: overlay",
    "text": "Slide 13: barh() Optional Parameter: overlay\n\ntop_10.select(‘rank’,\n‘track_name’,\n‘peak_rank’)\n\n.barh(‘track_name’, overlay = False)\nbarh() also has an optional parameter: overlay.\nIf not supplied, then by default barh will plot all numerical variables as bars on the same plot.\nIf supplied (overlay = False), then barh will plot each numerical variable on separate plots."
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-14-scatter-plots",
    "href": "fa24/lectures_qmd/lec17.html#slide-14-scatter-plots",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 14: Scatter Plots",
    "text": "Slide 14: Scatter Plots\n\n\nReview: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-15-question",
    "href": "fa24/lectures_qmd/lec17.html#slide-15-question",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 15: Question",
    "text": "Slide 15: Question\n\nWhat if we want to visualize two numerical variables at once?\nHeight vs. weight\nTip vs. total bill\nNumber of rebounds vs. number of points\nSo far, we’ve visualized the following combinations of variables:\nBar Chart: One categorical variable, one numerical variable\n\nTop songs on Spotify\n\nHistogram: One numerical variable\n\nDistribution of tips\nFrequency of cookies"
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-16-scatter-plots",
    "href": "fa24/lectures_qmd/lec17.html#slide-16-scatter-plots",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 16: Scatter Plots",
    "text": "Slide 16: Scatter Plots\n\nScatter plots are used to visualize two numerical variables at once. To create a scatter plot from a table, you need two columns:\nA numerical column for the x-axis.\nA numerical column for the y-axis.\nThe resulting graph has one point for every row in your table.\nWe call this a graph of “y vs. x”"
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-17-.scatter",
    "href": "fa24/lectures_qmd/lec17.html#slide-17-.scatter",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 17: .scatter()",
    "text": "Slide 17: .scatter()\n\nThe method t.scatter(column_for_x, column_for_y)\ncreates a scatter plot using the specified columns. Both columns must contain numerical values.\nIf only column_for_x is provided, a separate scatter plot is drawn for every other column in t (similar to the behavior of barh).\n“On average, as the number of points a player averages increases, the number of assists they average also increases.”"
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-18",
    "href": "fa24/lectures_qmd/lec17.html#slide-18",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 18: ‹#›",
    "text": "Slide 18: ‹#›\n\nQuick Check !!\nFill in the blanks to create the scatter plot showing three point attempts (“3PA”) vs. rebounds (“TRB”) for Forwards.\nnba.where(…, …).scatter(…, …)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-19-example",
    "href": "fa24/lectures_qmd/lec17.html#slide-19-example",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 19: Example",
    "text": "Slide 19: Example\n\nHow do we get this cool line? :D"
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-20-customizing-scatter-plots",
    "href": "fa24/lectures_qmd/lec17.html#slide-20-customizing-scatter-plots",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 20: Customizing Scatter Plots",
    "text": "Slide 20: Customizing Scatter Plots\n\n\nReview: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-21-encoding",
    "href": "fa24/lectures_qmd/lec17.html#slide-21-encoding",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 21: Encoding",
    "text": "Slide 21: Encoding\n\nAs with barh and hist, we can use xaxis_title, yaxis_title, title, width, and height to tweak scatter plots.\nWe can also take things a step further, by changing the following properties for each point:\nSize – make all points bigger, or make size proportional to some other numerical variable (e.g. older players have larger points).\nColor – different colors for different categories (e.g. one color for forwards, one color for guards).\nLabels – labeling each point according to a category (name, position, team, etc.)."
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-22-point-size",
    "href": "fa24/lectures_qmd/lec17.html#slide-22-point-size",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 22: Point Size",
    "text": "Slide 22: Point Size\n\nAs 3PA increases, point size increases.\nThere are two relevant arguments:\ns (int): assign this to change the default size of all points.\nsizes (str): assign this to the name of a numerical column in your table; point sizes will be proportional to the values in this column."
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-23-point-color",
    "href": "fa24/lectures_qmd/lec17.html#slide-23-point-color",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 23: Point Color",
    "text": "Slide 23: Point Color\n\n“Guards tend to have fewer rebounds and more three-point attempts than forwards.”\ngroup (str): assign this to the name of a categorical column in your table.\nPoint colors will be determined according to the category.\nEffectively two separate scatter plots sharing the same axis."
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-24-labels",
    "href": "fa24/lectures_qmd/lec17.html#slide-24-labels",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 24: Labels",
    "text": "Slide 24: Labels\n\nlabels (str): assign this to the name of any column in your table.\n\nEach point will be labeled according to its value.\nThe more points you have, the harder the labels will be to read.\n\nYou cannot combine labels and group.\n\nNot currently implemented in datascience.\nCan combine labels and sizes, and most other encodings."
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-25-untitled",
    "href": "fa24/lectures_qmd/lec17.html#slide-25-untitled",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 25: (untitled)",
    "text": "Slide 25: (untitled)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-26-line-plots",
    "href": "fa24/lectures_qmd/lec17.html#slide-26-line-plots",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 26: Line Plots",
    "text": "Slide 26: Line Plots\n\n\nReview: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-27-new-dataset",
    "href": "fa24/lectures_qmd/lec17.html#slide-27-new-dataset",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 27: New dataset",
    "text": "Slide 27: New dataset\n\nOur second dataset also comes from Basketball Reference. This dataset contains team-based average statistics for each year.\nA little bit about our new dataset:\n‘Season’: the second calendar year for each season (e.g. 2018 refers to the 2017-18 season).\n‘FGA’: the average number of field goal attempts (shot attempts) per game.\n‘Pace’: the average number of times a team had possession of the ball per game."
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-28-motivating-line-plots",
    "href": "fa24/lectures_qmd/lec17.html#slide-28-motivating-line-plots",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 28: Motivating Line Plots",
    "text": "Slide 28: Motivating Line Plots\n\nWhile a scatter plot would theoretically work in such a scenario, there are some key differences that lead us to another type of plot.\nThere’s only one y for every x.\n\nThere’s only one number of COVID cases per day.\nThere can be many people with the same height when graphing weight vs. height.\n\nWe want to emphasize a trend by “connecting the dots”.\n\n🤔\n\nWhat if we want to visualize two numerical variables, but one of them is time?\nCOVID cases per day in Alameda County.\nAverage rainfall for each month of the year in San Diego."
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-29-.plot",
    "href": "fa24/lectures_qmd/lec17.html#slide-29-.plot",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 29: .plot()",
    "text": "Slide 29: .plot()\n\n“The league slowed down in the late 90s and early 2000s, but is speeding back up.”\nThe method t.plot(column_for_x, column_for_y)\ncreates a line plot using the specified columns. Both columns must contain numerical values.\ncolumn_for_x should contain some time-based variable.\nIf only column_for_x is provided, a separate line plot is drawn for every other column in t (similar to the behavior of barh and scatter)."
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-30-examples",
    "href": "fa24/lectures_qmd/lec17.html#slide-30-examples",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 30: Examples",
    "text": "Slide 30: Examples\n\n“The three-point shot has rapidly increased in popularity over the past decade.”"
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-31-multiple-line-plots",
    "href": "fa24/lectures_qmd/lec17.html#slide-31-multiple-line-plots",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 31: Multiple Line Plots",
    "text": "Slide 31: Multiple Line Plots\n\n\nReview: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-32-multiple-line-plots",
    "href": "fa24/lectures_qmd/lec17.html#slide-32-multiple-line-plots",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 32: Multiple Line Plots",
    "text": "Slide 32: Multiple Line Plots\n\nIf we provide plot with only a single column name, it will draw lines for every other column in your table.\nIf you want to do this, make sure to select columns first!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-33-in-conclusion",
    "href": "fa24/lectures_qmd/lec17.html#slide-33-in-conclusion",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 33: In Conclusion…",
    "text": "Slide 33: In Conclusion…"
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-34-scatter-plots-vs.-line-plots",
    "href": "fa24/lectures_qmd/lec17.html#slide-34-scatter-plots-vs.-line-plots",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 34: Scatter Plots vs. Line Plots",
    "text": "Slide 34: Scatter Plots vs. Line Plots\n\nLine plots visualize the relationship between two numerical variables — one of them is ordered.\nx-axis generally represents time or distance.\nThere should only be one y value for every x value.\nUseful for identifying trends over time\nScatter plots visualize the relationship between any two numerical variables.\nNo need to have unique x (or y) values.\nUseful for identifying patterns between variables"
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-35-overlaid-bar-charts-vs.-overlaid-histograms",
    "href": "fa24/lectures_qmd/lec17.html#slide-35-overlaid-bar-charts-vs.-overlaid-histograms",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 35: Overlaid Bar Charts vs. Overlaid Histograms",
    "text": "Slide 35: Overlaid Bar Charts vs. Overlaid Histograms\n\nOverlaid Histograms visualize the relationship between one continuous numerical variable and one categorical variable\nThere should only be one y value for every x value.\nUseful for comparing numerical distributions\nOverlaid Bar Charts visualize the relationship of two or more categorical variables (normally same categories).\nUseful for comparing categorical distributions"
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-36-summary-scatter",
    "href": "fa24/lectures_qmd/lec17.html#slide-36-summary-scatter",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 36: Summary: scatter",
    "text": "Slide 36: Summary: scatter\n\nThe method t.scatter(column_for_x, column_for_y)creates a scatter plot using the specified columns. Both columns must contain numerical values.\nOptional arguments, in addition to xaxis_title, width, etc:\ns (int): changes default size of all points.\nsizes (str): point sizes will be proportional to the values in this numerical column.\ngroup (str): points will be colored according to category in this categorical column.\nlabels (str): points will be labeled according to their value in this column."
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-37-summary-plot",
    "href": "fa24/lectures_qmd/lec17.html#slide-37-summary-plot",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 37: Summary: plot",
    "text": "Slide 37: Summary: plot\n\nThe method t.plot(column_for_x, column_for_y)creates a line plot using the specified columns. Both columns must contain numerical values.\ncolumn_for_x should contain some time-based variable.\nIf only column_for_x is provided, a separate line plot is drawn for every other column in t (similar to the behavior of barh and scatter).\n\nSee Slide 32 for an example. We didn’t demo this behavior for scatter.\n\nOptional arguments, in addition to xaxis_title, width, etc:\noverlay (bool): If drawing multiple lines, setting overlay to False will draw multiple separate plots."
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-38-recap",
    "href": "fa24/lectures_qmd/lec17.html#slide-38-recap",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 38: Recap",
    "text": "Slide 38: Recap\n\nReview: Histograms\nReview: Overlaid and Side-by-Side Histograms\nReview: Grouped Bar Charts\nScatter Plots\nCustomizing Scatter Plots\nLine Plots\nMultiple Line Plots\nComparisons\nControl\nNext Time\nhttps://docs.google.com/forms/d/e/1FAIpQLSc1o_RQNjcXnE5hvVBiiRkEdaPycXDzII5OXOo_Bl_k-1U3kg/viewform"
  },
  {
    "objectID": "fa24/lectures_qmd/lec17.html#slide-39-thank-you",
    "href": "fa24/lectures_qmd/lec17.html#slide-39-thank-you",
    "title": "[Lec 17] Data 6 Fall 2024 - Visualizing Two Numerical Variables",
    "section": "Slide 39: THANK YOU !!",
    "text": "Slide 39: THANK YOU !!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html",
    "href": "fa24/lectures_qmd/lec15.html",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 15\nAll about histograms and bar charts.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-1-visualizing-categorical-and-numerical-variables",
    "href": "fa24/lectures_qmd/lec15.html#slide-1-visualizing-categorical-and-numerical-variables",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 15\nAll about histograms and bar charts.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-2-week-8",
    "href": "fa24/lectures_qmd/lec15.html#slide-2-week-8",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 2: Week 8",
    "text": "Slide 2: Week 8\n\nIf you cannot make a mandatory social sciences discussion, please email data6@berkeley.edu and we’ll see what we can do\nHW3 will be released tomorrow and the deadline will be pushed back to match the Reading 4 deadline (10/31)\nAssign your pages!\nAnnouncements!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-3-no-exam-prep-question-today",
    "href": "fa24/lectures_qmd/lec15.html#slide-3-no-exam-prep-question-today",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 3: No Exam Prep Question Today :(",
    "text": "Slide 3: No Exam Prep Question Today :("
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-4-todays-roadmap",
    "href": "fa24/lectures_qmd/lec15.html#slide-4-todays-roadmap",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 4: Today’s Roadmap",
    "text": "Slide 4: Today’s Roadmap\n\nCategorical Variables\n\nCategorical Distributions\nBar Charts\nGrouped Bar Charts\n\nNumerical Variables\n\nReview: Bar Charts\nNumerical Distributions, Histograms\nChoosing Bins\nOverlaid and Side-by-Side Histograms\n\nLecture 09, Data 6 Fall 2024"
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-5-variable-types-and-distributions",
    "href": "fa24/lectures_qmd/lec15.html#slide-5-variable-types-and-distributions",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 5: Variable Types and Distributions",
    "text": "Slide 5: Variable Types and Distributions\n\n\nCategorical Distributions\n\n\nBar Charts\n\n\nGrouped Bar Charts\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-6-variable-types-for-visualization",
    "href": "fa24/lectures_qmd/lec15.html#slide-6-variable-types-for-visualization",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 6: Variable Types for Visualization",
    "text": "Slide 6: Variable Types for Visualization\n\nRecall that in data science, a variable is a measurable feature, attribute, and/or representation of a concept. It can have different values for different individuals.\nThe type of a variable determines which visualizations are appropriate.\nNumerical (or quantitative): Variables that have values from a numerical scale, where differences are meaningful and values can be ordered.\n\nExamples: Number of cars, number of counties, GPA, price, temperature\n\nCategorical (or qualitative): Variables that have descriptive values\n\nExamples: Highest degree attained, colors, political affiliation\n\nJust because the values are numerical does not mean that the variable is of numerical type!\n\nExample: Student ID numbers can be stored in an int, but performing arithmetic on these numbers is meaningless."
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-7-variable-distributions",
    "href": "fa24/lectures_qmd/lec15.html#slide-7-variable-distributions",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 7: Variable Distributions",
    "text": "Slide 7: Variable Distributions\n\nGiven a specific dataset, a variable has a distribution:\nFor each different value of the variable, the frequency of individuals that have that value.\nFrequency: number or percent of individuals (depends on definition of “individual”; more later)\nA distribution table of the categorical variable Cookie. Each row represents a different value of Cookie.\nA bar chart that plots the distribution of the categorical variable Cookie."
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-8-bar-charts",
    "href": "fa24/lectures_qmd/lec15.html#slide-8-bar-charts",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 8: Bar Charts",
    "text": "Slide 8: Bar Charts\n\nDisplay all values of a categorical variable, along with their respective frequencies.\nOne bar for each category\nChoose the order of bars\nLength of bar is the frequency (percent or count) of individuals in that category.\nNot a bar chart; each respondent could pick more answer, so the bars represent overlapping groups..\nA bar chart that plots the distribution of the categorical variable Cookie.\nPercents of survey respondents on “a major reason they would find it difficult to quarantine themselves for at least 14 days”\nSource: Pew Research"
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-9-.barh",
    "href": "fa24/lectures_qmd/lec15.html#slide-9-.barh",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 9: .barh( )",
    "text": "Slide 9: .barh( )\n\nThe method\nt.barh(column_for_categories)\ncreates a bar chart with:\nThe values of the column column_for_categories as the categories on the y-axis. This column should contain a categorical variable, and values should be unique.\nBars for every other column in t, assuming all other columns are numerical variables.\ncookies.barh(‘Cookie’)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-10-debugging-bar-charts",
    "href": "fa24/lectures_qmd/lec15.html#slide-10-debugging-bar-charts",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 10: Debugging bar charts",
    "text": "Slide 10: Debugging bar charts\n\n\nCategorical Distributions\n\n\nBar Charts\n\n\nGrouped Bar Charts\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-11-spotify-dataset",
    "href": "fa24/lectures_qmd/lec15.html#slide-11-spotify-dataset",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 11: Spotify Dataset",
    "text": "Slide 11: Spotify Dataset\n\nSpotify Charts\nKaggle Dataset"
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-12-whats-wrong",
    "href": "fa24/lectures_qmd/lec15.html#slide-12-whats-wrong",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 12: What’s wrong?",
    "text": "Slide 12: What’s wrong?\n\nKaggle Dataset\nValueError: The column ‘artist_names’ contains non-numerical values. A plot cannot be drawn for this column.\ntop_10.barh(“track_name”)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-13-whats-wrong-fix",
    "href": "fa24/lectures_qmd/lec15.html#slide-13-whats-wrong-fix",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 13: What’s wrong? Fix",
    "text": "Slide 13: What’s wrong? Fix\n\nKaggle Dataset\ntop_10.barh(“track_name”, “streams”)\nWe had to ensure we were solely plotting the right columns\n.barh only works with numerical columns for plotting"
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-14-whats-wrong",
    "href": "fa24/lectures_qmd/lec15.html#slide-14-whats-wrong",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 14: What’s wrong?",
    "text": "Slide 14: What’s wrong?\n\nKaggle Dataset\nrelease_year.barh(‘released_year’, ‘count’)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-15-whats-wrong",
    "href": "fa24/lectures_qmd/lec15.html#slide-15-whats-wrong",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 15: What’s wrong?",
    "text": "Slide 15: What’s wrong?\n\nKaggle Dataset\nrelease_year.sort(“released_year”).barh(‘released_year’, ‘count’)\nA valid bar chart—if not a bit hard to interpret!\nWhat could make this better:\nSort categories in yearly order\nOr sort categories in order of numerical value (here, count)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-16-better-bar-charts",
    "href": "fa24/lectures_qmd/lec15.html#slide-16-better-bar-charts",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 16: Better bar charts",
    "text": "Slide 16: Better bar charts\n\n\nCategorical Distributions\n\n\nBar Charts\n\n\nGrouped Bar Charts\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-17-top-952-streams-top-10-days-on-chart",
    "href": "fa24/lectures_qmd/lec15.html#slide-17-top-952-streams-top-10-days-on-chart",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 17: Top 952 (# streams) → Top 10 (days on chart)",
    "text": "Slide 17: Top 952 (# streams) → Top 10 (days on chart)\n\nThe Kaggle Dataset in streams actually contains the “Top” 952 songs from each day.\nThe resulting bar chart is unreadable:\nInstead:\nWhat if we wanted just the top 10?\nWhat if we wanted the top 10 by in_spotify_charts, not by # streams?\n…\n…\n(200 bars)\nstreams.barh(\n“track_name”,\n“streams”)\nPlotting the right visualization requires creating the right table!\n\n\n\nSpeaker notes\n\nInsert demo"
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-18-takeaways",
    "href": "fa24/lectures_qmd/lec15.html#slide-18-takeaways",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 18: Takeaways",
    "text": "Slide 18: Takeaways\n\nPlotting the right visualization requires creating the right table.\nWith method chaining, Python evaluates method calls left-to-right.\nTo plot our top 10 by # of days on chart:\n\nStart with the existing streams table (top 952 by streams)\nSort by # of days on chart, descending\nTake the first 10 rows\n\nNote np.arange(10) argument, i.e., rows 0 to 9\n\nPlot the resulting bar chart\n\n(streams\n.sort(“streams”,\ndescending=True)\n.take(np.arange(10))\n.barh(“track_name”, “streams”)\n)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-19-visualization-note-bar-order",
    "href": "fa24/lectures_qmd/lec15.html#slide-19-visualization-note-bar-order",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 19: Visualization Note: Bar Order",
    "text": "Slide 19: Visualization Note: Bar Order\n\nDepending on the type of categorical variable we’re displaying, we may want to sort the bars of our bar charts differently.\nWhich to use? Depends on what you want to express through your visualization."
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-20-is-this-a-bar-chart",
    "href": "fa24/lectures_qmd/lec15.html#slide-20-is-this-a-bar-chart",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 20: Is this a bar chart?",
    "text": "Slide 20: Is this a bar chart?\n\ntop_10.barh(‘artist_names’, ‘streams’)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-21-is-this-a-bar-chart",
    "href": "fa24/lectures_qmd/lec15.html#slide-21-is-this-a-bar-chart",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 21: Is this a bar chart?",
    "text": "Slide 21: Is this a bar chart?\n\ntop_10.barh(‘artist_names’, ‘streams’)\nNo!\nThere is not a distinct numerical value for each category in the artist_names variable. Put another way, our categorical values (“artist_names”) are not unique.\nOur plot can’t particularly be interpreted; what differentiates these bars?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-22-three-step-process-for-visualization",
    "href": "fa24/lectures_qmd/lec15.html#slide-22-three-step-process-for-visualization",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 22: Three-Step Process for Visualization",
    "text": "Slide 22: Three-Step Process for Visualization\n\nThis process will apply to all visualizations we create in this class, not just today’s bar charts:\nPre-Process\nCreate a table with only the columns necessary to create the visualization\nChoose the Plot Type\nCall the correct visualization (depending on variable type)\nCustomize the Plot\nProvide the correct arguments for visual customization\n✅\n✅"
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-23-summary-categorical-variables",
    "href": "fa24/lectures_qmd/lec15.html#slide-23-summary-categorical-variables",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 23: Summary (Categorical Variables)",
    "text": "Slide 23: Summary (Categorical Variables)\n\nBar charts are used to display the distribution of a categorical variable, or the relationship between a categorical variable and one or more numerical variables.\nThe method t.barh(column_for_categories) creates a bar chart with:\nThe values of the column column_for_categories as the categories on the y-axis. This column should contain a categorical variable, and values should be unique.\nBars for every other column in t. These columns should contain numerical variables.\n\nMultiple other columns → grouped bar chart.\n\nBars should be sorted depending on the type of the categorical variable."
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-24-numerical-distributions-histograms",
    "href": "fa24/lectures_qmd/lec15.html#slide-24-numerical-distributions-histograms",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 24: Numerical Distributions, Histograms",
    "text": "Slide 24: Numerical Distributions, Histograms\n\n\nReview: Bar Charts\n\n\nNumerical Distributions, Histograms\n\n\nChoosing Bins\n\n\nOverlaid and Side-by-Side Histograms\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-25-towards-numerical-distributions",
    "href": "fa24/lectures_qmd/lec15.html#slide-25-towards-numerical-distributions",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 25: Towards Numerical Distributions",
    "text": "Slide 25: Towards Numerical Distributions\n\nBar charts visualize the distribution of a categorical variable, or the relationship between a categorical variable and one or more numerical variables.\nBar charts cannot display the distribution of a numerical variable.\nQuestion: How might we display the distribution of a numerical variable?\nAnswer: One solution is to combine ranges of values into bins."
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-26-binning",
    "href": "fa24/lectures_qmd/lec15.html#slide-26-binning",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 26: Binning",
    "text": "Slide 26: Binning\n\nBinning is counting the number of numerical values that fall within ranges, called “bins”.\nA bin is defined by a left endpoint (lower bound) and right endpoint (upper bound).\nA value falls in a bin if it is greater than or equal to the left endpoint and less than the right endpoint.\n\n[a, b): a is included, b is not.\n\nThe width of a bin is its right endpoint minus its left endpoint.\n72, 61, 63, 74, 68, 67, 65, 73, 65, 62, 66"
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-27-histograms",
    "href": "fa24/lectures_qmd/lec15.html#slide-27-histograms",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 27: Histograms",
    "text": "Slide 27: Histograms\n\nA histogram visualizes the distribution of a numerical variable by binning. The method\nt.hist(column, density = False)\ncreates a histogram of the column column of t. This column must contain numerical values.\nIt automatically chooses bins for us. We can change them."
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-28-example",
    "href": "fa24/lectures_qmd/lec15.html#slide-28-example",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 28: Example",
    "text": "Slide 28: Example\n\nTelling us that the number of tips between $1.90 and $2.80 is 79."
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-29-why-do-we-need-density-false",
    "href": "fa24/lectures_qmd/lec15.html#slide-29-why-do-we-need-density-false",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 29: Why do we need density = False?",
    "text": "Slide 29: Why do we need density = False?\n\nBy setting density = False, the resulting histogram shows counts on the y-axis (i.e. number of observations per bin).\nThe default, density = True, creates a histogram with “percent per unit”.\n\nThe details of this are out of scope.\n\nData 8 will teach you about these types of histograms."
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-30-quick-check",
    "href": "fa24/lectures_qmd/lec15.html#slide-30-quick-check",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 30: Quick Check",
    "text": "Slide 30: Quick Check\n\nAnswer the following questions about this histogram of (fake) heights. If you don’t believe it’s possible to answer the question, write “can’t tell”.\nHow many heights are between 60 inches (inclusive) and 64 inches (exclusive)?\nHow many heights are between 62 inches (inclusive) and 68 inches (exclusive)?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-31-a-note-on-bins",
    "href": "fa24/lectures_qmd/lec15.html#slide-31-a-note-on-bins",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 31: A Note on Bins",
    "text": "Slide 31: A Note on Bins\n\nBy looking at a histogram, we cannot tell how values are distributed within a bin."
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-32-choosing-bins",
    "href": "fa24/lectures_qmd/lec15.html#slide-32-choosing-bins",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 32: Choosing Bins",
    "text": "Slide 32: Choosing Bins\n\n\nReview: Bar Charts\n\n\nNumPy Array Ranges\n\n\nNumerical Distributions, Histograms\n\n\nChoosing Bins\n\n\nOverlaid and Side-by-Side Histograms\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-33-bins",
    "href": "fa24/lectures_qmd/lec15.html#slide-33-bins",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 33: Bins",
    "text": "Slide 33: Bins\n\n.hist chooses bins by default for us.\nThe resulting histogram often looks nice, but has non-integer bins which are harder for us to interpret.\nWe can choose our own bins.\nWe will only consider histograms where all bins have equal width, though it is possible to draw histograms where bins have unequal width."
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-34-np.arange",
    "href": "fa24/lectures_qmd/lec15.html#slide-34-np.arange",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 34: np.arange()",
    "text": "Slide 34: np.arange()\n\nIf we only need a few bins, we can make an array of bins by hand, like in the previous example.\nBut if we want more than a handful of bins, it will be tiring to create them by hand. Instead, we can use np.arange to create an array of equally spaced values."
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-35-example",
    "href": "fa24/lectures_qmd/lec15.html#slide-35-example",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 35: Example",
    "text": "Slide 35: Example\n\nIt’s a good idea to determine the min and max values in a column before choosing bins, to make sure your bins encompass the entire range."
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-36-tradeoff",
    "href": "fa24/lectures_qmd/lec15.html#slide-36-tradeoff",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 36: Tradeoff",
    "text": "Slide 36: Tradeoff\n\nThe width of each bin used dramatically changes the resulting histogram.\nNarrow Bins → many bins, each with few values. Resulting histogram is choppy.\nWide Bins → few bins, each with many values. Resulting histogram is smooth.\nIn practice, it’s up to you to choose the bin size of your histogram.\nWidth = 3\nWidth = 7\nWidth = 10"
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-37-in-conclusion",
    "href": "fa24/lectures_qmd/lec15.html#slide-37-in-conclusion",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 37: In Conclusion…",
    "text": "Slide 37: In Conclusion…"
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-38-bar-charts-vs.-histograms",
    "href": "fa24/lectures_qmd/lec15.html#slide-38-bar-charts-vs.-histograms",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 38: Bar Charts vs. Histograms",
    "text": "Slide 38: Bar Charts vs. Histograms\n\nBar charts visualize the distribution of a categorical variable, or the relationship between a categorical variable and a numerical variable.\nLength of bar corresponds to value.\nWidth of bar means nothing.\nHistograms visualize the distribution of a numerical variable.\nLength of bar corresponds to number of values within bin.\nWidth of bar corresponds to the width of the bin.\n\nWider bin → more values within bin → smoother histogram."
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-39-summary",
    "href": "fa24/lectures_qmd/lec15.html#slide-39-summary",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 39: Summary",
    "text": "Slide 39: Summary\n\nA histogram visualizes the distribution of a numerical variable by binning. The method\nt.hist(column, density = False)\ncreates a histogram of the column column of t. This column must contain numerical values.\nOptional arguments:\nbins (array): allows us to manually select bins. Frequently used with np.arange.\ngroup (string): allows us to draw separate histograms, one for each unique value in the specified categorical column.\noverlay (boolean): only used in conjunction with group. If False, draws histograms on separate axes rather than on top of one another."
  },
  {
    "objectID": "fa24/lectures_qmd/lec15.html#slide-40-recap",
    "href": "fa24/lectures_qmd/lec15.html#slide-40-recap",
    "title": "[Lec 15] Data 6 Fall 2024 - Visualizing Categorical and Numerical Variables",
    "section": "Slide 40: Recap",
    "text": "Slide 40: Recap\n\nBar Charts\nDistributions\nCustomizing Visualizations\nNumerical Distributions\nHistograms\nBins\nOverlaid Plots\nQuick check: https://forms.gle/crxx77jiEfqx3HXYA\nVisualizing Multiple Variables\nScatter Plots\nNext Time"
  },
  {
    "objectID": "fa24/lectures_qmd/lec14.html",
    "href": "fa24/lectures_qmd/lec14.html",
    "title": "[Lec 14] Data 6 Fall 2024 - Introduction to Visualization",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 14\nThey say a picture is worth a thousand words… right?\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd/lec14.html#slide-1-introduction-to-visualization",
    "href": "fa24/lectures_qmd/lec14.html#slide-1-introduction-to-visualization",
    "title": "[Lec 14] Data 6 Fall 2024 - Introduction to Visualization",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 14\nThey say a picture is worth a thousand words… right?\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd/lec14.html#slide-2-week-8",
    "href": "fa24/lectures_qmd/lec14.html#slide-2-week-8",
    "title": "[Lec 14] Data 6 Fall 2024 - Introduction to Visualization",
    "section": "Slide 2: Week 8",
    "text": "Slide 2: Week 8\n\nAnnouncements!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec14.html#slide-3-todays-roadmap",
    "href": "fa24/lectures_qmd/lec14.html#slide-3-todays-roadmap",
    "title": "[Lec 14] Data 6 Fall 2024 - Introduction to Visualization",
    "section": "Slide 3: Today’s Roadmap",
    "text": "Slide 3: Today’s Roadmap\n\nExamples of Visualizations\nWhat is Visualization?\nVariable Types\nEncoding\nLecture 14, Data 6 Fall 2024"
  },
  {
    "objectID": "fa24/lectures_qmd/lec14.html#slide-4-data-6-content",
    "href": "fa24/lectures_qmd/lec14.html#slide-4-data-6-content",
    "title": "[Lec 14] Data 6 Fall 2024 - Introduction to Visualization",
    "section": "Slide 4: Data 6 Content",
    "text": "Slide 4: Data 6 Content\n\nModule 1\nIntroduction to Python and Jupyter Notebooks\nModule 2\nArrays & Table Methods\nModule 3\nData Visualization\nModule 4\nSocietal Context & Final Project"
  },
  {
    "objectID": "fa24/lectures_qmd/lec14.html#slide-5-examples-of-visualizations",
    "href": "fa24/lectures_qmd/lec14.html#slide-5-examples-of-visualizations",
    "title": "[Lec 14] Data 6 Fall 2024 - Introduction to Visualization",
    "section": "Slide 5: Examples of Visualizations",
    "text": "Slide 5: Examples of Visualizations\n\n\nExamples of Visualization\n\n\nWhat is Visualization?\n\n\nVariable Types\n\n\nEncoding\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec14.html#slide-6-what-do-you-see",
    "href": "fa24/lectures_qmd/lec14.html#slide-6-what-do-you-see",
    "title": "[Lec 14] Data 6 Fall 2024 - Introduction to Visualization",
    "section": "Slide 6: What do you see?",
    "text": "Slide 6: What do you see?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec14.html#slide-7-a-map-depicting-the-town-of-konya-turkey.-supposedly-the-worlds-first-map-6200-bc.",
    "href": "fa24/lectures_qmd/lec14.html#slide-7-a-map-depicting-the-town-of-konya-turkey.-supposedly-the-worlds-first-map-6200-bc.",
    "title": "[Lec 14] Data 6 Fall 2024 - Introduction to Visualization",
    "section": "Slide 7: A map depicting the town of Konya, Turkey. Supposedly the world’s first map (~6200 BC).",
    "text": "Slide 7: A map depicting the town of Konya, Turkey. Supposedly the world’s first map (~6200 BC).\n\nA map depicting the town of Konya, Turkey. Supposedly the world’s first map (~6200 BC)."
  },
  {
    "objectID": "fa24/lectures_qmd/lec14.html#slide-8-john-snows-map-depicting-cholera-cases-in-soho-london-1854.",
    "href": "fa24/lectures_qmd/lec14.html#slide-8-john-snows-map-depicting-cholera-cases-in-soho-london-1854.",
    "title": "[Lec 14] Data 6 Fall 2024 - Introduction to Visualization",
    "section": "Slide 8: John Snow’s map depicting cholera cases in SoHo, London (1854).",
    "text": "Slide 8: John Snow’s map depicting cholera cases in SoHo, London (1854).\n\nJohn Snow’s map depicting cholera cases in SoHo, London (1854).\nBars correspond to Cholera cases\nThis map helped to determine that the Broad Street water pump was the source of a massive Cholera outbreak."
  },
  {
    "objectID": "fa24/lectures_qmd/lec14.html#slide-9-florence-nightingales-visualization-depicting-deaths-in-the-crimean-war-1850s.",
    "href": "fa24/lectures_qmd/lec14.html#slide-9-florence-nightingales-visualization-depicting-deaths-in-the-crimean-war-1850s.",
    "title": "[Lec 14] Data 6 Fall 2024 - Introduction to Visualization",
    "section": "Slide 9: Florence Nightingale’s visualization depicting deaths in the Crimean war (1850s).",
    "text": "Slide 9: Florence Nightingale’s visualization depicting deaths in the Crimean war (1850s).\n\nFlorence Nightingale’s visualization depicting deaths in the Crimean war (1850s)."
  },
  {
    "objectID": "fa24/lectures_qmd/lec14.html#slide-10-maya-lins-vietnam-war-memorial-in-washington-dc-1982.",
    "href": "fa24/lectures_qmd/lec14.html#slide-10-maya-lins-vietnam-war-memorial-in-washington-dc-1982.",
    "title": "[Lec 14] Data 6 Fall 2024 - Introduction to Visualization",
    "section": "Slide 10: Maya Lin’s Vietnam War Memorial in Washington DC (1982).",
    "text": "Slide 10: Maya Lin’s Vietnam War Memorial in Washington DC (1982).\n\nMaya Lin’s Vietnam War Memorial in Washington DC (1982)."
  },
  {
    "objectID": "fa24/lectures_qmd/lec14.html#slide-11-daily-covid-cases-in-california-per-google-summer-2022.",
    "href": "fa24/lectures_qmd/lec14.html#slide-11-daily-covid-cases-in-california-per-google-summer-2022.",
    "title": "[Lec 14] Data 6 Fall 2024 - Introduction to Visualization",
    "section": "Slide 11: Daily COVID cases in California, per Google (Summer 2022).",
    "text": "Slide 11: Daily COVID cases in California, per Google (Summer 2022).\n\nDaily COVID cases in California, per Google (Summer 2022)."
  },
  {
    "objectID": "fa24/lectures_qmd/lec14.html#slide-12-what-is-visualization",
    "href": "fa24/lectures_qmd/lec14.html#slide-12-what-is-visualization",
    "title": "[Lec 14] Data 6 Fall 2024 - Introduction to Visualization",
    "section": "Slide 12: What is Visualization?",
    "text": "Slide 12: What is Visualization?\n\n\nExamples of Visualization\n\n\nWhat is Visualization?\n\n\nVariable Types\n\n\nEncoding\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec14.html#slide-13-what-is-visualization",
    "href": "fa24/lectures_qmd/lec14.html#slide-13-what-is-visualization",
    "title": "[Lec 14] Data 6 Fall 2024 - Introduction to Visualization",
    "section": "Slide 13: What is Visualization?",
    "text": "Slide 13: What is Visualization?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec14.html#slide-14-visualizations-are-for-humans",
    "href": "fa24/lectures_qmd/lec14.html#slide-14-visualizations-are-for-humans",
    "title": "[Lec 14] Data 6 Fall 2024 - Introduction to Visualization",
    "section": "Slide 14: Visualizations are for humans",
    "text": "Slide 14: Visualizations are for humans"
  },
  {
    "objectID": "fa24/lectures_qmd/lec14.html#slide-15-visualize-then-quantify",
    "href": "fa24/lectures_qmd/lec14.html#slide-15-visualize-then-quantify",
    "title": "[Lec 14] Data 6 Fall 2024 - Introduction to Visualization",
    "section": "Slide 15: Visualize, then quantify!",
    "text": "Slide 15: Visualize, then quantify!\n\nThese datasets all have several statistical properties in common – means, standard deviations, and correlations – but look very different when plotted.\nVisualization complements statistics. You can explore this more in future statistics courses."
  },
  {
    "objectID": "fa24/lectures_qmd/lec14.html#slide-16-whats-the-point-of-visualization",
    "href": "fa24/lectures_qmd/lec14.html#slide-16-whats-the-point-of-visualization",
    "title": "[Lec 14] Data 6 Fall 2024 - Introduction to Visualization",
    "section": "Slide 16: What’s the point of visualization?",
    "text": "Slide 16: What’s the point of visualization?\n\nCreating good visualizations is an art as much it is a science; there is often no “correct” way to visualize data.\nWe must be careful and deliberate when visualizing data, especially if our visualizations are going to be used in the real-world.\nIf you want to look at some creative, sophisticated visualizations, see\nThe John Hunter Excellence in Plotting Contest."
  },
  {
    "objectID": "fa24/lectures_qmd/lec14.html#slide-17-variable-types",
    "href": "fa24/lectures_qmd/lec14.html#slide-17-variable-types",
    "title": "[Lec 14] Data 6 Fall 2024 - Introduction to Visualization",
    "section": "Slide 17: Variable Types",
    "text": "Slide 17: Variable Types\n\n\nExamples of Visualization\n\n\nWhat is Visualization?\n\n\nVariable Types\n\n\nEncoding\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec14.html#slide-18-variable-types",
    "href": "fa24/lectures_qmd/lec14.html#slide-18-variable-types",
    "title": "[Lec 14] Data 6 Fall 2024 - Introduction to Visualization",
    "section": "Slide 18: Variable Types",
    "text": "Slide 18: Variable Types\n\nSuppose we have some data and want to create a visualization.\nQuestion: How do we know what kind of visualization to create? 🤔\nAnswer: It depends on the type(s) of information we want to visualize.\n\nBar charts work sometimes. But not all the time!\n\nWhere we are visualizing different variables (features) of a dataset, a lot depends on the type(s) of variables we’re working with:\nVariable types are different from data types like string, int, Table, etc.\nIn the next few slides we’ll study the different variable feature types, in order to make more informed decisions when creating visualizations."
  },
  {
    "objectID": "fa24/lectures_qmd/lec14.html#slide-19-can-do-arithmetic-with.",
    "href": "fa24/lectures_qmd/lec14.html#slide-19-can-do-arithmetic-with.",
    "title": "[Lec 14] Data 6 Fall 2024 - Introduction to Visualization",
    "section": "Slide 19: Can do arithmetic with.",
    "text": "Slide 19: Can do arithmetic with.\n\nCan do arithmetic with.\nCannot do arithmetic with.\nVariable Type"
  },
  {
    "objectID": "fa24/lectures_qmd/lec14.html#slide-20-example-area-codes",
    "href": "fa24/lectures_qmd/lec14.html#slide-20-example-area-codes",
    "title": "[Lec 14] Data 6 Fall 2024 - Introduction to Visualization",
    "section": "Slide 20: Example: Area Codes",
    "text": "Slide 20: Example: Area Codes\n\nJust because a variable has numbers for values does not make it numerical.\nSimilarly, a numerical variable might be stored as a string – in that case, you’ll need to convert the corresponding values to ints or floats, depending on what is appropriate.\nWarning: a categorical variable can have numbers for values!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec14.html#slide-21-quick-check-1",
    "href": "fa24/lectures_qmd/lec14.html#slide-21-quick-check-1",
    "title": "[Lec 14] Data 6 Fall 2024 - Introduction to Visualization",
    "section": "Slide 21: Quick Check 1",
    "text": "Slide 21: Quick Check 1\n\nDetermine the variable feature type of each of the following variables.\nFuel economy in miles per gallon.\nNumber of semesters at Berkeley.\nClass standing (freshman, sophomore, etc.).\nIncome bracket (low, medium, high).\nBank account number."
  },
  {
    "objectID": "fa24/lectures_qmd/lec14.html#slide-22-encoding",
    "href": "fa24/lectures_qmd/lec14.html#slide-22-encoding",
    "title": "[Lec 14] Data 6 Fall 2024 - Introduction to Visualization",
    "section": "Slide 22: Encoding",
    "text": "Slide 22: Encoding\n\n\nExamples of Visualization\n\n\nWhat is Visualization?\n\n\nVariable Types\n\n\nEncoding\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec14.html#slide-23-encoding",
    "href": "fa24/lectures_qmd/lec14.html#slide-23-encoding",
    "title": "[Lec 14] Data 6 Fall 2024 - Introduction to Visualization",
    "section": "Slide 23: Encoding",
    "text": "Slide 23: Encoding\n\nAn encoding is a mapping from a variable to a visual element.\nFor instance, in bar charts, length can visually encode a numerical variable (here, the average age).\nLonger bar = higher average age."
  },
  {
    "objectID": "fa24/lectures_qmd/lec14.html#slide-24",
    "href": "fa24/lectures_qmd/lec14.html#slide-24",
    "title": "[Lec 14] Data 6 Fall 2024 - Introduction to Visualization",
    "section": "Slide 24: ‹#›",
    "text": "Slide 24: ‹#›\n\nHow many variables are being encoded in this plot?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec14.html#slide-25-whats-wrong",
    "href": "fa24/lectures_qmd/lec14.html#slide-25-whats-wrong",
    "title": "[Lec 14] Data 6 Fall 2024 - Introduction to Visualization",
    "section": "Slide 25: What’s Wrong?",
    "text": "Slide 25: What’s Wrong?\n\nThis graph implies that Swedish cars are “greater” than cars from other countries in some sense, when they’re not.\nThe variable type determines the types of plots (and hence, encodings) that are appropriate.\nOver the next few weeks, we will learn how to create several kinds of plots and learn when each is appropriate."
  },
  {
    "objectID": "fa24/lectures_qmd/lec14.html#slide-26-in-conclusion",
    "href": "fa24/lectures_qmd/lec14.html#slide-26-in-conclusion",
    "title": "[Lec 14] Data 6 Fall 2024 - Introduction to Visualization",
    "section": "Slide 26: In Conclusion…",
    "text": "Slide 26: In Conclusion…"
  },
  {
    "objectID": "fa24/lectures_qmd/lec14.html#slide-27-summary",
    "href": "fa24/lectures_qmd/lec14.html#slide-27-summary",
    "title": "[Lec 14] Data 6 Fall 2024 - Introduction to Visualization",
    "section": "Slide 27: Summary",
    "text": "Slide 27: Summary\n\nIt is often easier to discern patterns in our data when we visualize it rather than looking at it in a table.\n\nWe visualize to further our understanding of our results and to communicate our results with others.\n\nThere are two main kinds of statistical variable types – numerical and categorical.\n\nNumerical variables are either discrete or continuous, while categorical variables are either ordinal or nominal.\nCategorical variables may be stored as numbers! (area codes)\n\nEncodings translate variables into visual properties.\n\nNot all encodings work for all variables – we’ll learn more about this soon."
  },
  {
    "objectID": "fa24/lectures_qmd/lec14.html#slide-28-coming-up",
    "href": "fa24/lectures_qmd/lec14.html#slide-28-coming-up",
    "title": "[Lec 14] Data 6 Fall 2024 - Introduction to Visualization",
    "section": "Slide 28: Coming Up…",
    "text": "Slide 28: Coming Up…"
  },
  {
    "objectID": "fa24/lectures_qmd/lec14.html#slide-29-visualization-tools",
    "href": "fa24/lectures_qmd/lec14.html#slide-29-visualization-tools",
    "title": "[Lec 14] Data 6 Fall 2024 - Introduction to Visualization",
    "section": "Slide 29: Visualization tools",
    "text": "Slide 29: Visualization tools\n\nWithout a computer:\n\nDrawing\nPainting\n\nWith a computer:\n\nWithout programming:\n\nPhotoshop\nFigma\nTableau\n\nWith programming:\n\nmatplotlib\nseaborn\nplotly\nD3.js\n\n\nThere are many Python visualization libraries that integrate well with tables.\nThis is nowhere near a comprehensive list!\nBoth are popular but less “modern”\nNewer, and can create interactive visualizations."
  },
  {
    "objectID": "fa24/lectures_qmd/lec14.html#slide-30-recap",
    "href": "fa24/lectures_qmd/lec14.html#slide-30-recap",
    "title": "[Lec 14] Data 6 Fall 2024 - Introduction to Visualization",
    "section": "Slide 30: Recap",
    "text": "Slide 30: Recap\n\nIntroduction to Visualization\nQuick Check\nhttps://forms.gle/9NGfvX38vUzZfZob8\nVisualizing categorical variables\nNext Time"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html",
    "href": "fa24/lectures_qmd/lec04.html",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 04\nStoring many values in a single name.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-1-arrays-and-variables",
    "href": "fa24/lectures_qmd/lec04.html#slide-1-arrays-and-variables",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 04\nStoring many values in a single name.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-2-week-2",
    "href": "fa24/lectures_qmd/lec04.html#slide-2-week-2",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 2: Week 2",
    "text": "Slide 2: Week 2\n\nWeekly survey released :O\n\nDue next Monday night!\n\nAccessing readings\nAnnouncements!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-3-todays-roadmap",
    "href": "fa24/lectures_qmd/lec04.html#slide-3-todays-roadmap",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 3: Today’s Roadmap",
    "text": "Slide 3: Today’s Roadmap\n\nStrings\nNoneType\n\nprint()\nDisplay vs. Output\n\nArrays\n\nArray Operations\n\nVariables in Data Science\nLecture 04, Data 6 Fall 2024"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-4-strings",
    "href": "fa24/lectures_qmd/lec04.html#slide-4-strings",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 4: Strings",
    "text": "Slide 4: Strings"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-5-strings",
    "href": "fa24/lectures_qmd/lec04.html#slide-5-strings",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 5: Strings",
    "text": "Slide 5: Strings\n\nThe third key data type in Python is string. Strings are used to store text.\nA string is a sequence of characters with single quotes ’’ or double quotes ““.\n“go bears!!”\n‘154’\n‘i am 21 years old’\n“”\n’’\nPython strings\nSince strings are values, they can also be used in assignment statements.\nstate = “California”"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-6-strings",
    "href": "fa24/lectures_qmd/lec04.html#slide-6-strings",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 6: Strings",
    "text": "Slide 6: Strings\n\nThe third key data type in Python is string. Strings are used to store text.\nA string is a sequence of characters with single quotes ’’ or double quotes ““.\n“go bears!!”\n‘154’\n‘i am 21 years old’\n“”\n’’\nPython strings\nSince strings are values, they can also be used in assignment statements.\nstate = “California”\nA few string operations:\nlen(): string length, i.e., the number of characters in a string\n+: string concatenation"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-7-casting-with-strings",
    "href": "fa24/lectures_qmd/lec04.html#slide-7-casting-with-strings",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 7: Casting with Strings",
    "text": "Slide 7: Casting with Strings\n\nWe can also typecast, or convert values between data types. Note that data type conversion is only valid “when it makes sense.”\nstr(x) # Returns x as a string"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-8-print",
    "href": "fa24/lectures_qmd/lec04.html#slide-8-print",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 8: print()",
    "text": "Slide 8: print()\n\n\nNoneType\n\n\nArrays\n\n\nVariables in Data Science\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-9-a-very-useful-function-for-human-display-print",
    "href": "fa24/lectures_qmd/lec04.html#slide-9-a-very-useful-function-for-human-display-print",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 9: A very useful function for human display: print()",
    "text": "Slide 9: A very useful function for human display: print()\n\nThe print() function displays values.\nWorks even if it’s not thelast line of a cell!\nStrings are displayed without quotes"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-10-a-very-useful-function-for-human-display-print",
    "href": "fa24/lectures_qmd/lec04.html#slide-10-a-very-useful-function-for-human-display-print",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 10: A very useful function for human display: print()",
    "text": "Slide 10: A very useful function for human display: print()\n\nTerminology going forward:\nPrint means display\nOutput means cell output\nThe print() function displays values.\nWorks even if it’s not thelast line of a cell!\nStrings are displayed without quotes\n⚠️ Note ⚠️\nPrint displays values.It does not produce cell output!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-11-hello-world",
    "href": "fa24/lectures_qmd/lec04.html#slide-11-hello-world",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 11: “Hello, World!”",
    "text": "Slide 11: “Hello, World!”\n\nThis is a common “first” program to test that a programming language works as expected.\nNow you understand it!!!\nhttps://en.wikipedia.org/wiki/%22Hello,_World!%22_program#Python\nprint(“Hello, World!”)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-12-review-of-print-and-typecasting",
    "href": "fa24/lectures_qmd/lec04.html#slide-12-review-of-print-and-typecasting",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 12: Review of print() and Typecasting",
    "text": "Slide 12: Review of print() and Typecasting\n\nIf your lines of code are too long, use the character to break code into multiple lines.\nThere are two common ways to print strings:\nMultiple arguments\nPython inserts a space character for display\nArguments can be different data types\nString concatenation\nProgrammer must insert space character for display\nOne string argument, so all values must be cast to string"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-13-nonetype",
    "href": "fa24/lectures_qmd/lec04.html#slide-13-nonetype",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 13: NoneType",
    "text": "Slide 13: NoneType\n\n\nNoneType\n\n\nArrays\n\n\nVariables in Data Science\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-14-nonetype",
    "href": "fa24/lectures_qmd/lec04.html#slide-14-nonetype",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 14: NoneType",
    "text": "Slide 14: NoneType\n\nThere are infinitely* many integers, floating point numbers, and strings.\nHowever, for the NoneType data type, there is only one value: None.\n*Actually a finite number because of how computers store information; take CS61C to learn more!\nNone is strange:\nCells will not output expressions thatevaluate to None.\nNone can be displayed (i.e., printed).\nNone is also referred to as the “null value.”"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-15-nonetype",
    "href": "fa24/lectures_qmd/lec04.html#slide-15-nonetype",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 15: NoneType",
    "text": "Slide 15: NoneType\n\nThere are infinitely* many integers, floating point numbers, and strings.\nHowever, for the NoneType data type, there is only one value: None.\n*Actually a finite number because of how computers store information; take CS61C to learn more!\nprint() returns None, therefore when evaluated as the last line in a cell:\nPrint displays the value of the evaluated argument\nBut the cell does not output anything!\ndisplay\noutput\nNone is strange:\nCells will not output expressions thatevaluate to None.\nNone can be displayed (i.e., printed).\nNone is also referred to as the “null value.”"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-16-python-data-types-summary",
    "href": "fa24/lectures_qmd/lec04.html#slide-16-python-data-types-summary",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 16: Python Data Types: Summary",
    "text": "Slide 16: Python Data Types: Summary\n\ncoming up\nour next topics\nso far"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-17-arrays",
    "href": "fa24/lectures_qmd/lec04.html#slide-17-arrays",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 17: Arrays",
    "text": "Slide 17: Arrays\n\n\nNoneType\n\n\nArrays\n\n\nVariables in Data Science\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-18-arrays-more-values",
    "href": "fa24/lectures_qmd/lec04.html#slide-18-arrays-more-values",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 18: Arrays = More Values!",
    "text": "Slide 18: Arrays = More Values!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-19-an-array-is-a-sequential-collection-of-values",
    "href": "fa24/lectures_qmd/lec04.html#slide-19-an-array-is-a-sequential-collection-of-values",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 19: An Array Is a Sequential Collection of Values",
    "text": "Slide 19: An Array Is a Sequential Collection of Values\n\nmultiple values organized together\narranged like a line/queue\nUse make_array() to create arrays.\nValues in an array must all be of the same data type, and Python will cast appropriately.\nArray with 4 ints\nArray with 4 floats\nArray with 3 strs"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-20-an-array-is-a-sequential-collection-of-values",
    "href": "fa24/lectures_qmd/lec04.html#slide-20-an-array-is-a-sequential-collection-of-values",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 20: An Array Is a Sequential Collection of Values",
    "text": "Slide 20: An Array Is a Sequential Collection of Values\n\nArrays allow us to write code that performs computation on many pieces of data at once.\nPython can assign an entire arrayof values to a single name.\nThe order of a array is fixed (i.e., they will be arranged in the order specified when building the array), and values can be repeated.\nmultiple values organized together\narranged like a line/queue\nUse make_array() to create arrays.\nValues in an array must all be of the same data type, and Python will cast appropriately.\nArray with 4 ints\nArray with 4 floats\nArray with 3 strs"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-21-side-note-datascience-package",
    "href": "fa24/lectures_qmd/lec04.html#slide-21-side-note-datascience-package",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 21: Side Note: datascience Package",
    "text": "Slide 21: Side Note: datascience Package\n\nfrom datascience import *\nThe datascience Python package was written by UC Berkeley specifically for data science education.\nWe generally put the import statement in a cell at the top of our notebook.\nAfter running the import statement, we can then call package functions without prepending datascience.\nThe make_array() functionis from this package!\n“Import everything from the data science package”"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-22-array-operations",
    "href": "fa24/lectures_qmd/lec04.html#slide-22-array-operations",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 22: Array Operations",
    "text": "Slide 22: Array Operations\n\n\nNoneType\n\n\nArrays\n\n\nVariables in Data Science\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-23-american-community-survey-acs-2020",
    "href": "fa24/lectures_qmd/lec04.html#slide-23-american-community-survey-acs-2020",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 23: American Community Survey (ACS) 2020",
    "text": "Slide 23: American Community Survey (ACS) 2020\n\n(Later) How is this data presented, and in what societal context was it analyzed?\n(Now) How can we use arrays to analyze this data?\nThe following table is drawn from the American Community Survey (ACS) of 2020. It shows education levels of adults 25 years or higher by state.\nWe show AL, CA, FL, NY, TX.\n\n\n\nSpeaker notes\n\nhttps://data.census.gov/cedsci/table?q=2020%20education&t=Age%20and%20Sex%3AEducational%20Attainment&g=0100000US%240400000"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-24-compute-of-non-hs-graduates-by-state",
    "href": "fa24/lectures_qmd/lec04.html#slide-24-compute-of-non-hs-graduates-by-state",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 24: Compute % of Non-HS Graduates by State",
    "text": "Slide 24: Compute % of Non-HS Graduates by State\n\nhs_or_higher = make_array(86.9, 83.9, 88.5, 87.2, 84.4)\nbelow_hs = 100 - hs_or_higher\nbelow_hs"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-25-arithmetic-on-arrays",
    "href": "fa24/lectures_qmd/lec04.html#slide-25-arithmetic-on-arrays",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 25: Arithmetic on Arrays:",
    "text": "Slide 25: Arithmetic on Arrays:\nEvaluation Returns a New Array\n\n⚠️ Evaluating array expressions returns a new array; it does not change the original array."
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-26-arithmetic-on-arrays",
    "href": "fa24/lectures_qmd/lec04.html#slide-26-arithmetic-on-arrays",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 26: Arithmetic on Arrays:",
    "text": "Slide 26: Arithmetic on Arrays:\nEvaluation Returns a New Array\n\n⚠️ Evaluating array expressions returns a new array; it does not change the original array.\nArray Arithmetic is Element-Wise\n\nArithmetic with an array and a numeric value"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-27-element-wise-arithmetic",
    "href": "fa24/lectures_qmd/lec04.html#slide-27-element-wise-arithmetic",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 27: Element-Wise Arithmetic",
    "text": "Slide 27: Element-Wise Arithmetic\n\nThis element-wise behavior works with all of the arithmetic operations you expect!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-28-estimate-bachelor-degrees-by-state",
    "href": "fa24/lectures_qmd/lec04.html#slide-28-estimate-bachelor-degrees-by-state",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 28: Estimate # Bachelor Degrees by State",
    "text": "Slide 28: Estimate # Bachelor Degrees by State\n\nbs_or_higher = make_array(26.2, 34.7, 30.5, 37.5, 30.7)\nstate_pop = make_array(…) # see demo\nbs_or_higher / 100 * state_pop"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-29-arithmetic-on-arrays",
    "href": "fa24/lectures_qmd/lec04.html#slide-29-arithmetic-on-arrays",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 29: Arithmetic on Arrays:",
    "text": "Slide 29: Arithmetic on Arrays:\nEvaluation Returns a New Array\n\n⚠️ Evaluating array expressions returns a new array; it does not change the original array.\nArray Arithmetic is Element-Wise\n\nArithmetic with an array and a numeric value\n\n\nArithmetic with two arrays of equal length (same number of values)."
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-30-variables-in-data-science",
    "href": "fa24/lectures_qmd/lec04.html#slide-30-variables-in-data-science",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 30: Variables in Data Science",
    "text": "Slide 30: Variables in Data Science\n\n\nNoneType\n\n\nArrays\n\n\nVariables in Data Science\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-31-terminology-data-tabular-data-and-records",
    "href": "fa24/lectures_qmd/lec04.html#slide-31-terminology-data-tabular-data-and-records",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 31: Terminology: Data, Tabular Data, and Records",
    "text": "Slide 31: Terminology: Data, Tabular Data, and Records\n\nA dataset is a collection of data.\n“[Data] are systematically collected elements of information about the world.”\n– King, Keohane, and Verba. Designing Social Inquiry (1994).\nIn this course we will often use tabular data:\nColumns\nRows (also known as records).\nrow\ncolumn\n\n\n\nSpeaker notes\n\n“Data” are systematically collected elements of information about the world. They can be qualitative or quantitative in style. Sometimes data are collected to evaluate a very specific theory, but not so infrequently, scholars collect data before knowing precisely what they are interested in finding out. Moreover, even if data are collected to evaluate a specific hypothesis, researchers may ultimately be interested in questions that had not occurred to them previously."
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-32-terminology-variables",
    "href": "fa24/lectures_qmd/lec04.html#slide-32-terminology-variables",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 32: Terminology: Variables",
    "text": "Slide 32: Terminology: Variables\n\nIn data science, a variable is a measurable feature, attribute, and/or representation of a concept. It can have different values for different individuals.\nvariable\n\n\n\nSpeaker notes\n\n“Data” are systematically collected elements of information about the world. They can be qualitative or quantitative in style. Sometimes data are collected to evaluate a very specific theory, but not so infrequently, scholars collect data before knowing precisely what they are interested in finding out. Moreover, even if data are collected to evaluate a specific hypothesis, researchers may ultimately be interested in questions that had not occurred to them previously."
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-33-terminology-variables",
    "href": "fa24/lectures_qmd/lec04.html#slide-33-terminology-variables",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 33: Terminology: Variables",
    "text": "Slide 33: Terminology: Variables\n\nIn data science, a variable is a measurable feature, attribute, and/or representation of a concept. It can have different values for different individuals.\nA column contains/captures all measurements for a particular variable from our dataset.\nExample 1: This column represents the estimated number of people 25 years or older in each state. Values are positive integers.\nvariable\n\n\n\nSpeaker notes\n\n“Data” are systematically collected elements of information about the world. They can be qualitative or quantitative in style. Sometimes data are collected to evaluate a very specific theory, but not so infrequently, scholars collect data before knowing precisely what they are interested in finding out. Moreover, even if data are collected to evaluate a specific hypothesis, researchers may ultimately be interested in questions that had not occurred to them previously."
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-34-terminology-variables",
    "href": "fa24/lectures_qmd/lec04.html#slide-34-terminology-variables",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 34: Terminology: Variables",
    "text": "Slide 34: Terminology: Variables\n\nIn data science, a variable is a measurable feature, attribute, and/or representation of a concept. It can have different values for different individuals.\nA column contains/captures all measurements for a particular variable from our dataset.\nExample 2: This column represents the recorded sex of each respondent. Values are binary categories.\nvariable\n\n\n\nSpeaker notes\n\n“Data” are systematically collected elements of information about the world. They can be qualitative or quantitative in style. Sometimes data are collected to evaluate a very specific theory, but not so infrequently, scholars collect data before knowing precisely what they are interested in finding out. Moreover, even if data are collected to evaluate a specific hypothesis, researchers may ultimately be interested in questions that had not occurred to them previously."
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-35-terminology-variables",
    "href": "fa24/lectures_qmd/lec04.html#slide-35-terminology-variables",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 35: Terminology: Variables",
    "text": "Slide 35: Terminology: Variables\n\nIn data science, a variable is a measurable feature, attribute, and/or representation of a concept. It can have different values for different individuals.\nvariable\nVariables are empirical measurements; they are often metrics that researchers create to approximate the specific dimensions of an abstract concept of a research question.\nSide note: In computer science, Python names are also called variables. However, in this class we’ll always try to refer to Python names as names to avoid confusing it with the data science definition of a variable.\n\n\n\nSpeaker notes\n\n“Data” are systematically collected elements of information about the world. They can be qualitative or quantitative in style. Sometimes data are collected to evaluate a very specific theory, but not so infrequently, scholars collect data before knowing precisely what they are interested in finding out. Moreover, even if data are collected to evaluate a specific hypothesis, researchers may ultimately be interested in questions that had not occurred to them previously."
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-36-case-study-american-community-survey-2020",
    "href": "fa24/lectures_qmd/lec04.html#slide-36-case-study-american-community-survey-2020",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 36: Case Study: American Community Survey (2020)",
    "text": "Slide 36: Case Study: American Community Survey (2020)\n\nImportant uses at local and national level:\nDistribution of federal/state funds\nEconomic development (infrastructure, hospitals, schools, bridges, etc.)\nEmergency management\nVariables are empirical measurements; they are often metrics that researchers create to approximate the specific dimensions of an abstract concept of a research question.\nConducted annually by the US Census Bureau.\nMailed to a sample of ~3.5 million household addressesin 50 states + DC + Puerto Rico.\nACS builds on Census questions and also asks questions on education, employment,internet access, and transportation.\nAbout the ACS"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-37-research-question-and-data-collection",
    "href": "fa24/lectures_qmd/lec04.html#slide-37-research-question-and-data-collection",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 37: Research Question and Data Collection",
    "text": "Slide 37: Research Question and Data Collection\n\nThe definition of variables is impacted not only by researchers’ interests, but also the process and limitations of data collection.\nWhat is the level of educational attainment in 2020 among US resident adults?\nPose the Research Question\nHousehold survey\nPrivate dataset by household\nPublic dataset by geographic region\naggregation\nTable 1\nTable 2\n(this lecture)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-38-defining-concepts-in-the-research-question",
    "href": "fa24/lectures_qmd/lec04.html#slide-38-defining-concepts-in-the-research-question",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 38: Defining Concepts in the Research Question",
    "text": "Slide 38: Defining Concepts in the Research Question\n\nTranslate a concept into a variable\nDefine the variable domain (i.e., all possible values)\nConsider other factors that may influence the outcomes of the study, and repeat\nWhat is the level of educational attainment in 2020 among US resident adults?\nPose the Research Question\nConcept: Education\nVariable: Highest degree received by academic institution\nLess than high school graduate\nHigh school graduate (includes equivalency)\nSome college or associate’s degree\nBachelor’s degree\nGraduate or professional degree\nVariable domains can be categorical, numeric, or qualitative! In this course we focus on the first two."
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-39-defining-concepts-in-the-research-question",
    "href": "fa24/lectures_qmd/lec04.html#slide-39-defining-concepts-in-the-research-question",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 39: Defining Concepts in the Research Question",
    "text": "Slide 39: Defining Concepts in the Research Question\n\nTranslate a concept into a variable\nDefine the variable domain (i.e., all possible values)\nConsider other factors that may influence the outcomes of the study, and repeat\nWhat is the level of educational attainment in 2020 among US resident adults?\nPose the Research Question\nConcept: US resident\nVariable: Address\nUS Postal address of a residence [where the survey is mailed]\nConcept: Adult\nVariable: Age bracket\nBelow 18\n18 to 25 (“young adult”)\n25 and up\n[recorded from age]"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-40-identifying-confounding-variables",
    "href": "fa24/lectures_qmd/lec04.html#slide-40-identifying-confounding-variables",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 40: Identifying Confounding Variables",
    "text": "Slide 40: Identifying Confounding Variables\n\nConfounding variables can be linked to other concepts in a way that makes two concepts appear related (even when they are not).\nTranslate a concept into a variable\nDefine the variable domain (i.e., all possible values)\nConsider other factors that may influence the outcomes of the study, and repeat\nWhat is the level of educational attainment in 2020 among US resident adults?\nPose the Research Question\nUS geographic region\nEducational attainment level\n?\nOther social systems?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-41-identifying-confounding-variables",
    "href": "fa24/lectures_qmd/lec04.html#slide-41-identifying-confounding-variables",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 41: Identifying Confounding Variables",
    "text": "Slide 41: Identifying Confounding Variables\n\nThese are just a few confounding variables measured in the ACS. What kinds of confounding variables would likely not be measured in a government study?\nWhat is the level of educational attainment in 2020 among US resident adults?\nPose the Research Question\nRace/Ethnicity\nWhite alone\nWhite alone, not Hispanic or Latino\nBlack alone\nAmerican Indian or Alaska Native alone\nAsian alone\nNative Hawaiian and Other Pacific Islander Alone\nSome other race alone\nTwo or more races\nHispanic or Latino Origin\nSex\nMale\nFemale\nIncome/Earnings\n(numeric amount)\nUS geographic region\nEducational attainment level\n?\n\n\n\nSpeaker notes\n\nhttps://www.nationalgeographic.com/culture/article/race-ethnicity “Race” is usually associated with biology and linked with physical characteristics such as skin color or hair texture. “Ethnicity” is linked with cultural expression and identification. However, both are social constructs used to categorize and characterize seemingly distinct populations."
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-42-in-conclusion",
    "href": "fa24/lectures_qmd/lec04.html#slide-42-in-conclusion",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 42: In Conclusion…",
    "text": "Slide 42: In Conclusion…"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-43-summary",
    "href": "fa24/lectures_qmd/lec04.html#slide-43-summary",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 43: Summary",
    "text": "Slide 43: Summary\n\nThe print() function is used to display things. It always returns None\nThe Python None represents the absence of a value.\n\nNone can be printed, but is not outputted\n\nWe use arrays to store and work with multiple values at once\n\nWe can perform (element-wise) arithmetic operations and other functions on arrays\n\nIn data science, a variable is a measurable feature, attribute, and/or representation of a concept\n\nWe will use “name” to refer to Python names and “variable” to refer to data science variables"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-44-recap",
    "href": "fa24/lectures_qmd/lec04.html#slide-44-recap",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 44: Recap",
    "text": "Slide 44: Recap\n\nStrings\nNoneType\nArrays\nVariables in Data Science\nNumPy\nArray Indexing\nWorking with Data\nNext Time"
  },
  {
    "objectID": "fa24/lectures_qmd/lec04.html#slide-45-quick-check",
    "href": "fa24/lectures_qmd/lec04.html#slide-45-quick-check",
    "title": "[Lec 04] Data 6 Fall 2024 - Arrays and Variables",
    "section": "Slide 45: Quick Check",
    "text": "Slide 45: Quick Check\n\nhttps://docs.google.com/forms/d/e/1FAIpQLScYs6zjwSLq_f2PWgQIotZ6MwTdfVp1pgHifXvLxGGWO46hbg/viewform?usp=sf_link"
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html",
    "href": "fa24/lectures_qmd/lec11.html",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 11\nBreaking programs into smaller pieces.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html#slide-1-functions",
    "href": "fa24/lectures_qmd/lec11.html#slide-1-functions",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 11\nBreaking programs into smaller pieces.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html#slide-2-week-5",
    "href": "fa24/lectures_qmd/lec11.html#slide-2-week-5",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "Slide 2: Week 5",
    "text": "Slide 2: Week 5\n\nReading 2 due Thursday at 11 PM\n\nNo grace period!!\n\nHomework 1 grades will be released tonight\nAnnouncements!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html#slide-3-todays-roadmap",
    "href": "fa24/lectures_qmd/lec11.html#slide-3-todays-roadmap",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "Slide 3: Today’s Roadmap",
    "text": "Slide 3: Today’s Roadmap\n\nFunctions and Parameters\nParameter Scope and Return Values\nString Methods\nDemo\nLecture 11, Data 6 Fall 2024"
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html#slide-4-advanced-table-work",
    "href": "fa24/lectures_qmd/lec11.html#slide-4-advanced-table-work",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "Slide 4: Advanced Table Work",
    "text": "Slide 4: Advanced Table Work\n\nTables"
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html#slide-5-functions-and-parameters",
    "href": "fa24/lectures_qmd/lec11.html#slide-5-functions-and-parameters",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "Slide 5: Functions and Parameters",
    "text": "Slide 5: Functions and Parameters\n\n\nFunctions and Parameters\n\n\nParameter Scope and Return Values\n\n\nString Methods\n\n\nDemo\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html#slide-6-motivation",
    "href": "fa24/lectures_qmd/lec11.html#slide-6-motivation",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "Slide 6: Motivation",
    "text": "Slide 6: Motivation\n\nWe’ve used a few of Python’s built-in functions so far.\nint(‘-14’) # Evaluates to -14\nabs(-14) # Evaluates to 14\nmax(-14, 15) # Evaluates to 15\nprint(‘zoology’) # Prints zoology, evaluates to None\nThese functions return a value or have some side effect (e.g. printing)."
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html#slide-7-motivation",
    "href": "fa24/lectures_qmd/lec11.html#slide-7-motivation",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "Slide 7: Motivation",
    "text": "Slide 7: Motivation\n\nRight now, if we want to perform a calculation for different values, we need to copy-and-paste our code."
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html#slide-8-functions",
    "href": "fa24/lectures_qmd/lec11.html#slide-8-functions",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "Slide 8: Functions",
    "text": "Slide 8: Functions\n\nA key facet of Python and many other programming languages is the concept of a function.\nFunctions are a way to divide our code into small subparts to prevent us from writing repetitive code. They abstract away the complexity of operations, kind of like a toaster:"
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html#slide-9-functions",
    "href": "fa24/lectures_qmd/lec11.html#slide-9-functions",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "Slide 9: Functions",
    "text": "Slide 9: Functions\n\nFunctions are a way to divide our code into small subparts to prevent us from writing repetitive code.\ndef calc_grade(bins, scores):\nreturn sum(bins * scores/100)\ncalc_grade(data6_bins, data6_scores) # Evaluates to 100\ncalc_grade(data8_bins, data8_scores) # Evaluates to 91.75"
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html#slide-10-defining-new-functions",
    "href": "fa24/lectures_qmd/lec11.html#slide-10-defining-new-functions",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "Slide 10: Defining New Functions",
    "text": "Slide 10: Defining New Functions\n\nAll function definitions use the same syntax structure.\ndef calc_grade(bins, scores):\nreturn sum(bins * scores/100)\ndef is a keyword in Python. It means “define”.\ncalc_grade is the name of our new function.\nOur function has two parameters: bins and scores.\nAfter the first line, we must indent using 4 spaces or one tab.\nThe return keyword determines what our function outputs."
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html#slide-11-parameters",
    "href": "fa24/lectures_qmd/lec11.html#slide-11-parameters",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "Slide 11: Parameters",
    "text": "Slide 11: Parameters\n\nParameters are the names that a function requires as an input, that are defined in its “signature”.\nParameters are placeholders for the values that will be passed into the function when it is called.\n# This function has one parameter, x.\n# When we call the function, the value we pass in\n# as an argument will replace x in the computation.\ndef triple(x):\nreturn x*3"
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html#slide-12-untitled",
    "href": "fa24/lectures_qmd/lec11.html#slide-12-untitled",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "Slide 12: (untitled)",
    "text": "Slide 12: (untitled)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html#slide-13-examples",
    "href": "fa24/lectures_qmd/lec11.html#slide-13-examples",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "Slide 13: Examples",
    "text": "Slide 13: Examples\n\n# Functions can have zero parameters!\ndef always_true():\nreturn True\n# The body of a function can be\n# longer than one line.\ndef pythagorean(a, b):\nc_squared = a**2 + b**2\nreturn c_squared**0.5"
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html#slide-14-indentation",
    "href": "fa24/lectures_qmd/lec11.html#slide-14-indentation",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "Slide 14: Indentation",
    "text": "Slide 14: Indentation\n\nThis is the first time we’ve written code where indentation is required.\nFortunately, when defining a function in a Jupyter Notebook, indentation usually happens automatically."
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html#slide-15",
    "href": "fa24/lectures_qmd/lec11.html#slide-15",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "Slide 15: ‹#›",
    "text": "Slide 15: ‹#›\n\nSuppose we define the function mystery as follows.\ndef mystery(t):\nreturn t + ‘0’\nWhat will be the values of alpha, beta, and charlie be after running the following code? If the function call errors, write Error.\nalpha = mystery(‘19’)\nbeta = mystery(19)\ncharlie = mystery(‘1’ + ‘9’)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html#slide-16-parameter-scope-and-return-values",
    "href": "fa24/lectures_qmd/lec11.html#slide-16-parameter-scope-and-return-values",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "Slide 16: Parameter Scope and Return Values",
    "text": "Slide 16: Parameter Scope and Return Values\n\n\nFunctions and Parameters\n\n\nParameter Scope and Return Values\n\n\nString Methods\n\n\nDemo\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html#slide-17-scope",
    "href": "fa24/lectures_qmd/lec11.html#slide-17-scope",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "Slide 17: Scope",
    "text": "Slide 17: Scope\n\nThe names you choose for a function’s parameters are only known to that function (known as “local scope”). The rest of your notebook is unaffected by parameter names."
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html#slide-18-scope",
    "href": "fa24/lectures_qmd/lec11.html#slide-18-scope",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "Slide 18: Scope",
    "text": "Slide 18: Scope\n\nSimilarly, you can choose parameter names that also exist as names outside of your function.\nWe do this sometimes, but it can get confusing."
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html#slide-19-scope",
    "href": "fa24/lectures_qmd/lec11.html#slide-19-scope",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "Slide 19: Scope",
    "text": "Slide 19: Scope\n\nYou can also use names that don’t overlap with parameter names within your function.\nIn such cases, the function looks “outside” of its definition to the rest of your notebook to see if it can find that name anywhere."
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html#slide-20-aside-out-of-scope",
    "href": "fa24/lectures_qmd/lec11.html#slide-20-aside-out-of-scope",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "Slide 20: Aside: “Out of Scope”",
    "text": "Slide 20: Aside: “Out of Scope”\n\nIn Data 6 (and other CS/DS classes), when we say a concept is “out of scope”, this is where it comes from."
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html#slide-21-operators-are-evaluated-first-then-operands",
    "href": "fa24/lectures_qmd/lec11.html#slide-21-operators-are-evaluated-first-then-operands",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "Slide 21: Operators Are Evaluated First, then Operands",
    "text": "Slide 21: Operators Are Evaluated First, then Operands\n\nRemember, operators are evaluated first to determine what function is being called, then the operands."
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html#slide-22-be-careful",
    "href": "fa24/lectures_qmd/lec11.html#slide-22-be-careful",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "Slide 22: Be Careful…",
    "text": "Slide 22: Be Careful…\n\nIf you call a function with the wrong number of arguments, Python will give you an error.\nSome functions, like print and min, can take varying numbers of arguments. We’ll see how to define these later."
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html#slide-23-a-word-on-vocabulary",
    "href": "fa24/lectures_qmd/lec11.html#slide-23-a-word-on-vocabulary",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "Slide 23: A Word on Vocabulary",
    "text": "Slide 23: A Word on Vocabulary\n\nThis is not a class where you should try and memorize vocabulary. With that said, things may be a little hazy.\ndef minmax(a, b, c):\nreturn min(a, b) == max(b, c)\nresult = minmax(3, 3 + 4, int(True))"
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html#slide-24-return-values",
    "href": "fa24/lectures_qmd/lec11.html#slide-24-return-values",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "Slide 24: Return Values",
    "text": "Slide 24: Return Values\n\nFunctions are not required to “return” anything. If a function doesn’t explicitly return anything, it will return None (like print)."
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html#slide-25-return-statements",
    "href": "fa24/lectures_qmd/lec11.html#slide-25-return-statements",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "Slide 25: Return Statements",
    "text": "Slide 25: Return Statements\n\nOnce we reach a return keyword, our function is done running. Nothing after it is run."
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html#slide-26",
    "href": "fa24/lectures_qmd/lec11.html#slide-26",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "Slide 26: ‹#›",
    "text": "Slide 26: ‹#›\n\nWhat is the value of total after running this code?\ntotal = 3\ndef square_and_cube(a, b):\nreturn a**2 + total**b\ntotal = square_and_cube(1, 2)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html#slide-27-string-methods",
    "href": "fa24/lectures_qmd/lec11.html#slide-27-string-methods",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "Slide 27: String Methods",
    "text": "Slide 27: String Methods\n\n\nFunctions and Parameters\n\n\nParameter Scope and Return Values\n\n\nString Methods\n\n\nDemo\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html#slide-28-methods",
    "href": "fa24/lectures_qmd/lec11.html#slide-28-methods",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "Slide 28: Methods",
    "text": "Slide 28: Methods\n\nMethods are functions with slightly different syntax.\n‘ian’.upper() # Evaluates to ‘IAN’\nMethods use “dot notation”.\nIn our class, we will not write any methods of our own; we’ll only write functions of our own.\nHowever, many of the data types we will deal with have built-in methods that we will use."
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html#slide-29-string-methods",
    "href": "fa24/lectures_qmd/lec11.html#slide-29-string-methods",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "Slide 29: String Methods",
    "text": "Slide 29: String Methods\n\nJust like tables have table methods, strings have string methods that can be used on any string. For now, here are some methods that work on strings that you should know.\nAssume that the line s = ‘JuNiOR12’ has been run.\nThere are many more, but we will use them as they become relevant."
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html#slide-30-.split",
    "href": "fa24/lectures_qmd/lec11.html#slide-30-.split",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "Slide 30: .split",
    "text": "Slide 30: .split\n\nstr.split(separator) is used to separate (or split) parts of the string str into separate elements in a list based on the separator string. If no separator is specified, the method will default to splitting by “ ” (the space character)."
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html#slide-31-.join",
    "href": "fa24/lectures_qmd/lec11.html#slide-31-.join",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "Slide 31: .join",
    "text": "Slide 31: .join\n\nstr.join(arr_of_strings) is used to join together the strings in the array arr_of_strings into a single string separated by str. str.join can be thought of as the opposite of str.split."
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html#slide-32-in-conclusion",
    "href": "fa24/lectures_qmd/lec11.html#slide-32-in-conclusion",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "Slide 32: In Conclusion…",
    "text": "Slide 32: In Conclusion…"
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html#slide-33-summary",
    "href": "fa24/lectures_qmd/lec11.html#slide-33-summary",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "Slide 33: Summary",
    "text": "Slide 33: Summary\n\nFunctions are a way to divide our code into small subparts to prevent us from writing repetitive code.\nThe inputs to a function are known as parameters.\nTo specify a function’s output, we use the return keyword.\nParameters are a little nuanced:\nThey are only visible to the body of your function; the rest of your notebook can’t use them.\nOperands are evaluated before being passed into your function.\nMethods are like functions. String methods help us manipulate strings."
  },
  {
    "objectID": "fa24/lectures_qmd/lec11.html#slide-34-recap",
    "href": "fa24/lectures_qmd/lec11.html#slide-34-recap",
    "title": "[Lec 14] Data 6 Fall 2024 - Functions",
    "section": "Slide 34: Recap",
    "text": "Slide 34: Recap\n\nFunctions\nFunction Parameters\nReturn Values\nString Methods\nForm\nGrouping\nPivoting\nNext Time"
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html",
    "href": "fa24/lectures_qmd/lec13.html",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 12\nExtracting and aggregating information from tables.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-1-grouping-pivoting",
    "href": "fa24/lectures_qmd/lec13.html#slide-1-grouping-pivoting",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 12\nExtracting and aggregating information from tables.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-2-week-7",
    "href": "fa24/lectures_qmd/lec13.html#slide-2-week-7",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 2: Week 7",
    "text": "Slide 2: Week 7\n\nReading assignment 3 released\nQuiz 1 scores released\nLecture 13\nA note on double jeopardy\nClarifications\nSurvey due next Monday!\nAnnouncements!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-3-on-exam-scores",
    "href": "fa24/lectures_qmd/lec13.html#slide-3-on-exam-scores",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 3: On Exam Scores…",
    "text": "Slide 3: On Exam Scores…\n\nExam scores are out!\nA few observations on my end:\nLeft skewed-distribution\n\nWill focus on a lot more practice before building onto examples\n\nSocial sciences research & scope had a lower average than most other questions"
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-4-on-the-usage-of-ai",
    "href": "fa24/lectures_qmd/lec13.html#slide-4-on-the-usage-of-ai",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 4: On the usage of AI",
    "text": "Slide 4: On the usage of AI\n\nIf you choose to use generative AI on your coding assignments (homeworks, labs, projects), that’s your choice\n\nI think there are situations where it is helpful/useful! I’ve also tried to show you cases where it has failed\n\nPlease don’t use generative AI to summarize or write any part of your reading responses\n\nIt’s what makes us human. Our humanity, our experiences, our understanding of the world around us…\n\nA brief aside…"
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-5-todays-roadmap",
    "href": "fa24/lectures_qmd/lec13.html#slide-5-todays-roadmap",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 5: Today’s Roadmap",
    "text": "Slide 5: Today’s Roadmap\n\nHigher order functions\nGrouping with .group\nGrouping by Multiple Columns\nPivot Tables with .pivot\nLecture 12, Data 6 Fall 2024"
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-6-higher-order-functions",
    "href": "fa24/lectures_qmd/lec13.html#slide-6-higher-order-functions",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 6: Higher order functions",
    "text": "Slide 6: Higher order functions\n\n\nHigher order functions\n\n2.Grouping with .group\n\nGrouping by Multiple Columns\n\n\nPivot Tables with .pivot\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-7-higher-order-functions",
    "href": "fa24/lectures_qmd/lec13.html#slide-7-higher-order-functions",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 7: Higher Order Functions",
    "text": "Slide 7: Higher Order Functions\n\nHigher order functions are functions that can take in a function as an input or returns a function as an output.\nWe’ll be focusing on the first case: functions that take in inputs.\nWhat is an example of a method that takes in a function as a parameter that we’ve used in this class?\nSource"
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-8-higher-order-functions-demo",
    "href": "fa24/lectures_qmd/lec13.html#slide-8-higher-order-functions-demo",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 8: Higher order functions: Demo",
    "text": "Slide 8: Higher order functions: Demo\n\nDemo link here\nSource"
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-9-grouping-with-.group",
    "href": "fa24/lectures_qmd/lec13.html#slide-9-grouping-with-.group",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 9: Grouping with .group",
    "text": "Slide 9: Grouping with .group\n\n\nGrouping with .group\n\n\nGrouping by Multiple Columns\n\n\nPivot Tables with .pivot\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-10-aggregating-with-.group",
    "href": "fa24/lectures_qmd/lec13.html#slide-10-aggregating-with-.group",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 10: Aggregating with .group()",
    "text": "Slide 10: Aggregating with .group()\n\nThe term “group” in data science is most commonly associated with data aggregation and disaggregation.\nAggregation: A process in which information is gathered and expressed in collective or summary form.\nUseful for getting information about groups based on variables (age, profession, income) while simultaneously preserving confidentiality of individuals\nDisaggregation (aka disentanglement): A process of taking aggregated data and breaking it down into smaller information units.\nUseful to highlight outcomes that pertain to individual subsets of results/outcomes (e.g., gender, location, socio-cultural/ethnic background, age groups, etc.) to expose hidden trends\nSource\n\n\n\nSpeaker notes\n\nhttps://www.nccih.ca/docs/context/FS-ImportanceDisaggregatedData-EN.pdf"
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-11-.group",
    "href": "fa24/lectures_qmd/lec13.html#slide-11-.group",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 11: .group()",
    "text": "Slide 11: .group()\n\nQuestion: What is the relationship between the table on the right and the table on the left?\nAnswer: Same data, different unit of analysis. The right table is an aggregated view of the left table, grouped by artist."
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-12-.group",
    "href": "fa24/lectures_qmd/lec13.html#slide-12-.group",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 12: .group()",
    "text": "Slide 12: .group()\n\nThe method t.group(column) counts the number of rows for each unique value in column, and returns a two-column table with the results.\nNote: t.group(column) only keeps the column column, the frequency counts, and no others."
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-13-quick-check-1",
    "href": "fa24/lectures_qmd/lec13.html#slide-13-quick-check-1",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 13: Quick Check 1",
    "text": "Slide 13: Quick Check 1\n\nFill in the blanks to create “Top 10 Artists”: The 10 artists with the most songs in the Spotify Daily Top 200 streams table.\ntop_10_artists = streams.group(…).sort(…, descending=…)\n.take(np.arange(…))"
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-14-group-sort-take",
    "href": "fa24/lectures_qmd/lec13.html#slide-14-group-sort-take",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 14: group + sort + take = ❤️",
    "text": "Slide 14: group + sort + take = ❤️\n\nThis is a common pattern: grouping and then sorting, and then taking.\nHere, it gives us the 10 artists with the most songs in the Spotify Daily Top 200 streams table.\ntop_10_artists = streams.group(‘artist_names’)\n\n.sort(‘count’,\ndescending=True)\n\n.take(np.arange(10))"
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-15-advanced-grouping",
    "href": "fa24/lectures_qmd/lec13.html#slide-15-advanced-grouping",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 15: Advanced Grouping",
    "text": "Slide 15: Advanced Grouping\n\n\nGrouping with .group\n\n\nGrouping by Multiple Columns\n\n\nPivot Tables with .pivot\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-16-todays-data-2021-cars",
    "href": "fa24/lectures_qmd/lec13.html#slide-16-todays-data-2021-cars",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 16: Today’s Data: 2021 Cars",
    "text": "Slide 16: Today’s Data: 2021 Cars\n\nToday we’ll use data from the US Department of Energy that contains basic information about all 2021 model-year cars sold in the US.\nClick here for the source.\nClick here for a spreadsheet version of the data.\nNote:\nManufacturer is who owns the Brand.\n\nGM owns Buick, Cadillac, Chevrolet, GMC.\n\nDisplacement is the engine size in liters.\nMPG is miles per gallon."
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-17-question-what-is-the-relationship-between-the-table-on-the-right-and-the-table-on-the-left",
    "href": "fa24/lectures_qmd/lec13.html#slide-17-question-what-is-the-relationship-between-the-table-on-the-right-and-the-table-on-the-left",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 17: Question: What is the relationship between the table on the right and the table on the left?",
    "text": "Slide 17: Question: What is the relationship between the table on the right and the table on the left?\n\nQuestion: What is the relationship between the table on the right and the table on the left?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-18-question-what-is-the-relationship-between-the-table-on-the-right-and-the-table-on-the-left-now",
    "href": "fa24/lectures_qmd/lec13.html#slide-18-question-what-is-the-relationship-between-the-table-on-the-right-and-the-table-on-the-left-now",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 18: Question: What is the relationship between the table on the right and the table on the left now?",
    "text": "Slide 18: Question: What is the relationship between the table on the right and the table on the left now?\n\nQuestion: What is the relationship between the table on the right and the table on the left now?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-19-mean",
    "href": "fa24/lectures_qmd/lec13.html#slide-19-mean",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 19: mean:",
    "text": "Slide 19: mean:\n\nmean:\n6\n20.5"
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-20",
    "href": "fa24/lectures_qmd/lec13.html#slide-20",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 20: ‹#›",
    "text": "Slide 20: ‹#›"
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-21",
    "href": "fa24/lectures_qmd/lec13.html#slide-21",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 21: ‹#›",
    "text": "Slide 21: ‹#›"
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-22-gm.groupbrand-np.mean",
    "href": "fa24/lectures_qmd/lec13.html#slide-22-gm.groupbrand-np.mean",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 22: gm.group(‘Brand’, np.mean)",
    "text": "Slide 22: gm.group(‘Brand’, np.mean)\n\ngm.group(‘Brand’, np.mean)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-23-.group",
    "href": "fa24/lectures_qmd/lec13.html#slide-23-.group",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 23: .group",
    "text": "Slide 23: .group\n\nThe method t.group(column, collect) combines/aggregates all rows with the same value for column into a single row in the resulting table, according to the function collect.\nThe collect argument is optional.\n\nlen: number of grouped values (default).\nlist: list of all grouped values.\nsum: total of all grouped values.\nnp.mean: average of all grouped values.\n\ncollect can be function that works on arrays!\n\nYou can write your own functions if you need to.\nIf it doesn’t work with non-numeric values (like sum), it skips non-numeric columns."
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-24-you-cant-sum-strings-so-the-model-sum-column-is-empty.",
    "href": "fa24/lectures_qmd/lec13.html#slide-24-you-cant-sum-strings-so-the-model-sum-column-is-empty.",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 24: You can’t sum strings, so the ‘Model sum’ column is empty.",
    "text": "Slide 24: You can’t sum strings, so the ‘Model sum’ column is empty.\n\nYou can’t sum strings, so the ‘Model sum’ column is empty.\nWe get the same numbers (2, 3, 3, 1) if we don’t specify a collect function.\nExample"
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-25-translating-between-units-of-analysis",
    "href": "fa24/lectures_qmd/lec13.html#slide-25-translating-between-units-of-analysis",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 25: Translating Between Units of Analysis",
    "text": "Slide 25: Translating Between Units of Analysis\n\nSuppose we have data on 4-year R1 higher education institutions across the United States.\nDisaggregation is impossible unless we have data at a finer-grained unit of analysis to begin with."
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-26-which-columns-should-we-group-by",
    "href": "fa24/lectures_qmd/lec13.html#slide-26-which-columns-should-we-group-by",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 26: Which Columns Should We Group By?",
    "text": "Slide 26: Which Columns Should We Group By?\n\nIt usually only makes sense to group by columns that store categorical information that is shared across multiple rows.\nIf you had a bunch of dogs, you could group by\nBreed.\nSize (small, medium, large).\nSex.\nColor.\nIt wouldn’t make sense to group by weight in pounds, since every dog will have a slightly different weight and two dogs having the exact same weight doesn’t tell you much."
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-27-questions",
    "href": "fa24/lectures_qmd/lec13.html#slide-27-questions",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 27: Questions?",
    "text": "Slide 27: Questions?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-28-quick-check-2",
    "href": "fa24/lectures_qmd/lec13.html#slide-28-quick-check-2",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 28: Quick Check 2",
    "text": "Slide 28: Quick Check 2\n\nFill in the blanks so that the following evaluates to the average miles per gallon for all 6-cylinder vehicles in cars.\ncars.group(‘Cylinders’, ____)\n\n.where(____, 6)\n\n.column(____)\n\n.____"
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-29-grouping-by-multiple-columns",
    "href": "fa24/lectures_qmd/lec13.html#slide-29-grouping-by-multiple-columns",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 29: Grouping by Multiple Columns",
    "text": "Slide 29: Grouping by Multiple Columns\n\n\nGrouping with .group\n\n\nGrouping by Multiple Columns\n\n\nPivot Tables with .pivot\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-30-question-what-is-the-relationship-between-the-table-on-the-right-and-the-table-on-the-left",
    "href": "fa24/lectures_qmd/lec13.html#slide-30-question-what-is-the-relationship-between-the-table-on-the-right-and-the-table-on-the-left",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 30: Question: What is the relationship between the table on the right and the table on the left?",
    "text": "Slide 30: Question: What is the relationship between the table on the right and the table on the left?\n\nQuestion: What is the relationship between the table on the right and the table on the left?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-31-grouping-by-multiple-columns",
    "href": "fa24/lectures_qmd/lec13.html#slide-31-grouping-by-multiple-columns",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 31: Grouping by Multiple Columns",
    "text": "Slide 31: Grouping by Multiple Columns\n\nIf we pass a list of column names as the first argument to group:\nt.group(column_or_columns, collect)\nthe resulting table has one row for every unique combination of values in the specified columns.\nJust as before, if we call group with a single argument (a list or array), we get back counts. We can specify a collect function if we want to.\nOne row for every combination of Manufacturer and Brand."
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-32-question-what-do-the-numbers-in-this-table-mean",
    "href": "fa24/lectures_qmd/lec13.html#slide-32-question-what-do-the-numbers-in-this-table-mean",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 32: Question: What do the numbers in this table mean?",
    "text": "Slide 32: Question: What do the numbers in this table mean?\n\nQuestion: What do the numbers in this table mean?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-33-grouping-by-more-than-two-columns",
    "href": "fa24/lectures_qmd/lec13.html#slide-33-grouping-by-more-than-two-columns",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 33: Grouping by More Than Two Columns",
    "text": "Slide 33: Grouping by More Than Two Columns\n\nYou can group by any number of columns, but we rarely group by more than two columns as the results tend to be less meaningful.\nHere, Manufacturer doesn’t tell us much."
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-34-pivot-tables",
    "href": "fa24/lectures_qmd/lec13.html#slide-34-pivot-tables",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 34: Pivot Tables",
    "text": "Slide 34: Pivot Tables\n\n\nGrouping with .group\n\n\nGrouping by Multiple Columns\n\n\nPivot Tables with .pivot\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-35-review-grouping",
    "href": "fa24/lectures_qmd/lec13.html#slide-35-review-grouping",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 35: Review: Grouping",
    "text": "Slide 35: Review: Grouping"
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-36-question-what-is-the-relationship-between-the-table-on-the-right-and-the-table-on-the-left",
    "href": "fa24/lectures_qmd/lec13.html#slide-36-question-what-is-the-relationship-between-the-table-on-the-right-and-the-table-on-the-left",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 36: Question: What is the relationship between the table on the right and the table on the left?",
    "text": "Slide 36: Question: What is the relationship between the table on the right and the table on the left?\n\nQuestion: What is the relationship between the table on the right and the table on the left?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-37-cars.pivotcylinders-brand",
    "href": "fa24/lectures_qmd/lec13.html#slide-37-cars.pivotcylinders-brand",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 37: cars.pivot(‘Cylinders’, ‘Brand’)",
    "text": "Slide 37: cars.pivot(‘Cylinders’, ‘Brand’)\n\ncars.pivot(‘Cylinders’, ‘Brand’)\ncars"
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-38-.pivot",
    "href": "fa24/lectures_qmd/lec13.html#slide-38-.pivot",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 38: .pivot()",
    "text": "Slide 38: .pivot()\n\nThe method t.pivot(columns, rows) is an alternative to grouping by exactly two columns.\nFirst argument: the column from t you want to make up the columns of the output.\n\nEach unique value in the column columns will get its own column.\n\nSecond argument: the column from t you want to make up the rows of the output.\n\nEach unique value in the column rows will get its own row."
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-39-.pivot",
    "href": "fa24/lectures_qmd/lec13.html#slide-39-.pivot",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 39: .pivot()",
    "text": "Slide 39: .pivot()\n\nLike with group, the default with pivot is to count the number of occurrences of a particular combination. But we can provide two optional arguments:\nt.pivot(columns, rows, values, collect)\nThis creates a new table where\nThe columns are specified by columns.\nThe rows are specified by rows.\nThe entries are specified by values, combined using the function collect.\nFor example:\nt.pivot(‘Cylinders’, ‘Brand’, ‘MPG’, np.mean)\ndescribes the average MPG for every combination of Brand and Cylinders."
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-40",
    "href": "fa24/lectures_qmd/lec13.html#slide-40",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 40: ‹#›",
    "text": "Slide 40: ‹#›"
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-41-in-conclusion",
    "href": "fa24/lectures_qmd/lec13.html#slide-41-in-conclusion",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 41: In Conclusion…",
    "text": "Slide 41: In Conclusion…"
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-42-summary",
    "href": "fa24/lectures_qmd/lec13.html#slide-42-summary",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 42: Summary",
    "text": "Slide 42: Summary"
  },
  {
    "objectID": "fa24/lectures_qmd/lec13.html#slide-43-recap",
    "href": "fa24/lectures_qmd/lec13.html#slide-43-recap",
    "title": "[Lec 12 and 13] Data 6 Fall 2024 - Grouping and Pivoting",
    "section": "Slide 43: Recap",
    "text": "Slide 43: Recap\n\nGrouping\nPivoting\nLecture 13 Quick Check: https://docs.google.com/forms/d/e/1FAIpQLScye9GWqHkpQk51s09v7NjX5nyVbtIdpEnQpCWgLcjP2JUeaA/viewform?usp=sf_link\nWrapping up pivoting!\nNext Time"
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html",
    "href": "fa24/lectures_qmd/lec06.html",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 06\nFrom social theory to working with data.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-1-intro-to-social-science-research",
    "href": "fa24/lectures_qmd/lec06.html#slide-1-intro-to-social-science-research",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 06\nFrom social theory to working with data.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-2-todays-roadmap",
    "href": "fa24/lectures_qmd/lec06.html#slide-2-todays-roadmap",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 2: Today’s Roadmap",
    "text": "Slide 2: Today’s Roadmap\n\nUnits of Analysis\nSocial Science Research\nMaterials-Based Research\nAggregation and Disaggregation\nLecture 06, Data 6 Fall 2024"
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-3-warmup-comparecontrast",
    "href": "fa24/lectures_qmd/lec06.html#slide-3-warmup-comparecontrast",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 3: Warmup: Compare/Contrast",
    "text": "Slide 3: Warmup: Compare/Contrast\n\nFor each of the below, discuss the implications of question/statement (a) vs. statement (b):\n\nWhat is the level of educational attainment in 2020 among US resident adults?(b) Educational attainment among US resident adults tends to vary by geographic region.\n\n\nUS resident adults residing in coastal cities are more likely to complete college compared to US resident adults residing in rural regions.(b) For US resident adults, coastal city residence is likely to determine college completion rates.\n\n\nUS resident adults residing in coastal cities are more likely to complete college compared to US resident adults residing in rural regions.(b) Educational attainment among US resident adults varies by geographic region.\n\n\n\n\nSpeaker notes\n\nGoal help students start thinking about differences between research questions, theories, and hypotheses with a relatable example before it’s introduced Research Question in (a) vs. Theory in (b) Associative Hypothesis in (a) vs Causal Hypothesis in (b) Associative Hypothesis in (a) vs Theory in (b)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-4-today",
    "href": "fa24/lectures_qmd/lec06.html#slide-4-today",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 4: Today",
    "text": "Slide 4: Today\n\nExploratory Data Analysis\nExploratory research question\nObservation\nTheory\nHypothesis\nData collection\nData analysis\nResults\nThe Scientific Method\nData analysis"
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-5-review-variables",
    "href": "fa24/lectures_qmd/lec06.html#slide-5-review-variables",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 5: Review: Variables",
    "text": "Slide 5: Review: Variables\n\nIn data science, a variable is a measurable feature, attribute, and/or representation of a concept. It can have different values for different individuals.\nvariable\nVariables are empirical measurements; they are often metrics that researchers create to approximate the specific dimensions of an abstract concept of a research question.\n\n\n\nSpeaker notes\n\n“Data” are systematically collected elements of information about the world. They can be qualitative or quantitative in style. Sometimes data are collected to evaluate a very specific theory, but not so infrequently, scholars collect data before knowing precisely what they are interested in finding out. Moreover, even if data are collected to evaluate a specific hypothesis, researchers may ultimately be interested in questions that had not occurred to them previously."
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-6-units-of-analysis",
    "href": "fa24/lectures_qmd/lec06.html#slide-6-units-of-analysis",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 6: Units of Analysis",
    "text": "Slide 6: Units of Analysis\n\n➤\nUnits of Analysis\nSocial Science Research\nMaterials-Based Research\nAggregation and Disaggregation"
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-7-units-of-analysis",
    "href": "fa24/lectures_qmd/lec06.html#slide-7-units-of-analysis",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 7: Units of Analysis",
    "text": "Slide 7: Units of Analysis\n\nThe types of entities we are analyzing:\nIndividuals\nGroups (families, classes, gangs, …)\nLocalities (cities, counties, countries, …)\nOrganizations, industries, political units, social artifacts, etc.\n\n\n\nSpeaker notes\n\nSOC5 Lecture 2"
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-8-units-of-analysis",
    "href": "fa24/lectures_qmd/lec06.html#slide-8-units-of-analysis",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 8: Units of Analysis",
    "text": "Slide 8: Units of Analysis\n\nThe types of entities we are analyzing:\nIndividuals\nGroups (families, classes, gangs, …)\nLocalities (cities, counties, countries, …)\nOrganizations, industries, political units, social artifacts, etc.\nIncome\nindividualincomehousehold incomeaverage income\nRace/Ethnicity\n# People\nindividualrace/ethnicity–population demographics\n–# memberspopulation size\nUnit of analysis is directly linked to the concept of “variables”.Variables describe the unit of analysis.\n\n\n\nSpeaker notes\n\nSOC5 Lecture 2"
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-9-matching-what-is-the-unit-of-analysis",
    "href": "fa24/lectures_qmd/lec06.html#slide-9-matching-what-is-the-unit-of-analysis",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 9: Matching: What is the unit of analysis?",
    "text": "Slide 9: Matching: What is the unit of analysis?\n\nAre schools in poorer neighborhoods more prone to violence than schools in richer neighborhoods?\nAre women more likely than men to be religious?\nDo records that win Grammy awards sell more than otherwise-similar records that do not win Grammy awards?\nAre married couples richer than non-married cohabiting couples?\nIndividuals\nCouples\nMarried couples\nNon-married couples\nFamilies\nGender groups\nNeighborhoods\nSchools\nRecords\nGrammy awards\nReligions\nSomething else\nFrom SOC 5: Evaluation of Evidence\n\n\n\nSpeaker notes\n\nSchools Gender groups Records Couples"
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-10-social-science-research",
    "href": "fa24/lectures_qmd/lec06.html#slide-10-social-science-research",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 10: Social Science Research",
    "text": "Slide 10: Social Science Research\n\n➤\nUnits of Analysis\nSocial Science Research\nMaterials-Based Research\nAggregation and Disaggregation"
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-11-the-scientific-method",
    "href": "fa24/lectures_qmd/lec06.html#slide-11-the-scientific-method",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 11: The Scientific Method",
    "text": "Slide 11: The Scientific Method\n\nTheory\nHypothesis\nData collection\nData analysis\nResults"
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-12-theory-research-and-hypotheses",
    "href": "fa24/lectures_qmd/lec06.html#slide-12-theory-research-and-hypotheses",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 12: Theory, Research, and Hypotheses",
    "text": "Slide 12: Theory, Research, and Hypotheses\n\nTheory - a systematic set of related statements that accord with a worldview.\nWhen (social) scientists do research, we use theories 3 different ways:\nTheories prevent us from being taken in by flukes.\nTheories help us make sense of observed patterns in ways that can suggest other possibilities.\nTheories direct our research efforts, pointing us toward likely discoveries through empirical observation.\nFrom SOC 5: Evaluation of Evidence"
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-13-theory-and-hypotheses",
    "href": "fa24/lectures_qmd/lec06.html#slide-13-theory-and-hypotheses",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 13: Theory and Hypotheses",
    "text": "Slide 13: Theory and Hypotheses\n\nElements of a scientific sociological theory:\nConcepts\nRelations between concepts\nCausal mechanisms\nConcept 1\nConcept 2\nHypothesis: The empirical instantiation of a theory, i.e., a testable statement of a relationship involving two concepts.\nHypotheses therefore involve variables, which are representations that capture the different dimensions, categories, or levels of a concept.\nVariable 1\nVariable 2"
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-14-from-concepts-to-variables",
    "href": "fa24/lectures_qmd/lec06.html#slide-14-from-concepts-to-variables",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 14: From Concepts to Variables",
    "text": "Slide 14: From Concepts to Variables\n\nConcept 1\nConcept 2\nVariable 1\nVariable 2\nConcept 1: Family background\nConcept 2: Education\nTheory: A child’s family background impacts how much education the child attains.\nVariable 1: Family income\nVariable 2: College degree vs. None\nHypothesis: Children from families with higher incomes are more likely to go to college."
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-15-what-good-theories-have-in-common",
    "href": "fa24/lectures_qmd/lec06.html#slide-15-what-good-theories-have-in-common",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 15: What good theories have in common",
    "text": "Slide 15: What good theories have in common\n\nThey can be tested as hypotheses using empirical data.\n\nEmpirical data – data gathered through some observation plan.\n\nThey apply to units outside/beyond the sample that is currently under study.\nThey make probabilistic, not deterministic, predictions (i.e., hypotheses). Examples:\n\nMen are more likely than women to be over-confident.\nIn countries where women have higher status, women’s and men’s math scores tend to be more similar."
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-16-research-question-theory-hypothesis",
    "href": "fa24/lectures_qmd/lec06.html#slide-16-research-question-theory-hypothesis",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 16: Research Question? Theory? Hypothesis?",
    "text": "Slide 16: Research Question? Theory? Hypothesis?\n\nFor the purposes of this class, we’ll make the following distinction:\nA research question is an exploratory question about a social concept to guide how we collect data OR make sense of existing data.\nA theory is an associative statement that links together social concepts.\nA hypothesis is an empirical instantiation of a theory, i.e., a testable statement involving a relationship between two variables, each of which represents a social concept."
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-17-research-question-theory-hypothesis",
    "href": "fa24/lectures_qmd/lec06.html#slide-17-research-question-theory-hypothesis",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 17: Research Question? Theory? Hypothesis?",
    "text": "Slide 17: Research Question? Theory? Hypothesis?\n\nFor the purposes of this class, we’ll make the following distinction:\nA research question is an exploratory question about a social concept to guide how we collect data OR make sense of existing data.\nA theory is an associative statement that links together social concepts.\nA hypothesis is an empirical instantiation of a theory, i.e., a testable statement involving a relationship between two variables, each of which represents a social concept.\nIn materials based research, the research question guides how we make observations about existing data, from which we then formulate theories and test hypotheses."
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-18-causality-or-by-association",
    "href": "fa24/lectures_qmd/lec06.html#slide-18-causality-or-by-association",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 18: Causality? Or by association?",
    "text": "Slide 18: Causality? Or by association?\n\nCausal relationship: Changing one variable causes a change in the other variable.\nA college education tends to increase one’s income as an adult.\nAssociative relationship: As one variable changes, the other variable also changes.\nA person with college education is more likely to have higher income as an adult than a person without college education.\nProving causality is very difficult:\nOther variables (e.g., confounding variables) can make two concepts appear related.\nGenerally, assessing causality in relationships requires advanced statistics and sound research methods.\nIn this class, we will explore associative relationships between concepts/variables through visualization.\nTake Data 8 to learn statistical approaches!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-19-identifying-confounding-variables",
    "href": "fa24/lectures_qmd/lec06.html#slide-19-identifying-confounding-variables",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 19: Identifying Confounding Variables",
    "text": "Slide 19: Identifying Confounding Variables\n\nConfounding variables can be linked to other concepts in a way that makes two concepts appear related (even when they are not).\nTranslate a concept into a variable\nDefine the variable domain (i.e., all possible values)\nConsider other factors that may influence the outcomes of the study, and repeat\nWhat is the level of educational attainment in 2020 among US resident adults?\nPose the Research Question\nUS geographic region\nEducational attainment level\n?\nOther social systems?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-20-identifying-confounding-variables",
    "href": "fa24/lectures_qmd/lec06.html#slide-20-identifying-confounding-variables",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 20: Identifying Confounding Variables",
    "text": "Slide 20: Identifying Confounding Variables\n\nThese are just a few confounding variables measured in the ACS. What kinds of confounding variables would likely not be measured in a government study?\nWhat is the level of educational attainment in 2020 among US resident adults?\nPose the Research Question\nRace/Ethnicity\nWhite alone\nWhite alone, not Hispanic or Latino\nBlack alone\nAmerican Indian or Alaska Native alone\nAsian alone\nNative Hawaiian and Other Pacific Islander Alone\nSome other race alone\nTwo or more races\nHispanic or Latino Origin\nSex\nMale\nFemale\nIncome/Earnings\n(numeric amount)\nUS geographic region\nEducational attainment level\n?\n\n\n\nSpeaker notes\n\nhttps://www.nationalgeographic.com/culture/article/race-ethnicity “Race” is usually associated with biology and linked with physical characteristics such as skin color or hair texture. “Ethnicity” is linked with cultural expression and identification. However, both are social constructs used to categorize and characterize seemingly distinct populations."
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-21-quick-check-matching",
    "href": "fa24/lectures_qmd/lec06.html#slide-21-quick-check-matching",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 21: Quick check: Matching",
    "text": "Slide 21: Quick check: Matching\n\nWhat is the level of educational attainment in 2020 among US resident adults?\nEducational attainment among US resident adults tends to vary by geographic region.\nEducational attainment\nCollege completion rate\nUS resident adults residing in coastal cities are more likely to complete college compared to US resident adults residing in rural regions.\nFor US resident adults, coastal city residence is likely to determine college completion rates.\nNote: The variable College completion rate is only one measure of educational attainment. There are many!!\nExploratory research question\nCausal hypothesis\nHypothesis of association\nTheory\nConcept\nVariable\nSomething else\n\n\n\nSpeaker notes\n\nExploratory research question Theory Concept Variable Hypothesis of association Causal hypothesis"
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-22-materials-based-research",
    "href": "fa24/lectures_qmd/lec06.html#slide-22-materials-based-research",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 22: Materials-Based Research",
    "text": "Slide 22: Materials-Based Research\n\n➤\nUnits of Analysis\nSocial Science Research\nMaterials-Based Research\nAggregation and Disaggregation"
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-23-where-does-a-data-scientist-come-in",
    "href": "fa24/lectures_qmd/lec06.html#slide-23-where-does-a-data-scientist-come-in",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 23: Where does a data scientist come in?",
    "text": "Slide 23: Where does a data scientist come in?\n\nExploratory Data Analysis\nExploratory research question\nObservation\nTheory\nHypothesis\nData collection\nData analysis\nResults\nThe Scientific Method\nData analysis"
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-24-gathering-data-for-research-and-analysis",
    "href": "fa24/lectures_qmd/lec06.html#slide-24-gathering-data-for-research-and-analysis",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 24: Gathering Data for Research and Analysis",
    "text": "Slide 24: Gathering Data for Research and Analysis\n\nConduct surveys, experiments, interviews, ethnography,measurements…\nData\nConceptualize variables\nPose research question and theory\n\n\n\n\n\n\nAll data are created/generated from human input:\nDefinition of variables\nResearch design and measurement\nHowever, the researcher and data scientist are often not the same person.Data scientists therefore need to consider the context of how researchers generated data from existing materials.\n\n\n\nSpeaker notes\n\nSOC 5 textbook p. 29\nSurveys: Participants answer a series of questions Experiments: trying an intervention, measuring outcomes, etc. Interviews: researchers actively talk to participants, generally messier data than surveys Ethnography: participant observation (passive)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-25-gathering-data-for-research-and-analysis",
    "href": "fa24/lectures_qmd/lec06.html#slide-25-gathering-data-for-research-and-analysis",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 25: Gathering Data for Research and Analysis",
    "text": "Slide 25: Gathering Data for Research and Analysis\n\nA researcher considers both validity and generalizability throughout the data gathering process.\nConduct surveys, experiments, interviews, ethnography,measurements…\nData\nConceptualize variables\nPose research question and theory\n\n\n\n\n\n\nValidity A quality of a measure concerning how accurate it is.\nInternal Validity: How accurately are we measuring the defined concepts?\nExternal Validity:\n\nHow representative is the group being studied?\nHow “real” is this study?\n\nGeneralizability The extent to which results or conclusions based on one population can be applied to others.\n\n\n\nSpeaker notes\n\nSOC 5 textbook p. 29\nSurveys: Participants answer a series of questions Experiments: trying an intervention, measuring outcomes, etc. Interviews: researchers actively talk to participants, generally messier data than surveys Ethnography: participant observation (passive)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-26-using-existing-data-from-a-different-context",
    "href": "fa24/lectures_qmd/lec06.html#slide-26-using-existing-data-from-a-different-context",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 26: Using Existing Data from a Different Context",
    "text": "Slide 26: Using Existing Data from a Different Context\n\nIf we did not create the original dataset, we will need to separately consider whether the data are valid and generalizable for our own research question.\nConduct surveys, experiments, interviews, ethnography,measurements…\nData\nConceptualize variables\n\n\n\n\n\n\nValidity A quality of a measure concerning how accurate it is.\nInternal Validity: How accurately are we measuring the defined concepts?\nExternal Validity:\n\nHow representative is the group being studied?\nHow “real” is this study?\n\nGeneralizability The extent to which results or conclusions based on one population can be applied to others.\nPose research question and theory\n\n\n\nSpeaker notes\n\nSOC 5 textbook p. 29\nSurveys: Participants answer a series of questions Experiments: trying an intervention, measuring outcomes, etc. Interviews: researchers actively talk to participants, generally messier data than surveys Ethnography: participant observation (passive)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-27-using-existing-data",
    "href": "fa24/lectures_qmd/lec06.html#slide-27-using-existing-data",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 27: Using Existing Data",
    "text": "Slide 27: Using Existing Data\n\nPros\nInexpensive – the data are there; you just have to gain access to them\nData can be reused and combined with other data\nEffective for social description of large and heterogeneous populations\nCan study phenomena that unfold over extended periods of time.\nThe data are often nonreactive (i.e. the subjects will not be disrupted by the study)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-28-using-existing-data",
    "href": "fa24/lectures_qmd/lec06.html#slide-28-using-existing-data",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 28: Using Existing Data",
    "text": "Slide 28: Using Existing Data\n\nCan only study measurable phenomena (for which variables were recorded)\nThreat to internal validity: No control over creation process from concept to variable\nThreat to external validity: Potential bias in what is available.\nWhich groups were studied\nSelective deposit/survival: what was archived\nNo control over quality of data\nCons\n\n\n\nSpeaker notes\n\nSOC 5 Lecture 23 Fall 2019 Cannot study some phenomena: only those that can be tapped by technologies that generate archives (reading, writing, listening, talking); not private, unconscious, nonconformist, or socially unacceptable phenomena. Potential bias in what is available (& therefore threats to external validity): Bias due to selective deposit: records and artifacts put in archives are not representative of all the things produced by a society. Bias due to selective survival: some records and artifacts disappear or disintegrate over time (crumbling paper, fabric, etc.) The researcher cannot control the quality of recording (reliability, precision, accuracy). The researcher may not know how the data were created.\nThe researcher cannot control the measures directly may have to work hard to develop valid measures. No random assignment to values of the IVs threats to internal validity."
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-29-aggregation-and-disaggregation",
    "href": "fa24/lectures_qmd/lec06.html#slide-29-aggregation-and-disaggregation",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 29: Aggregation and Disaggregation",
    "text": "Slide 29: Aggregation and Disaggregation\n\n➤\nUnits of Analysis\nSocial Science Research\nMaterials-Based Research\nAggregation and Disaggregation"
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-30-back-to-the-acs",
    "href": "fa24/lectures_qmd/lec06.html#slide-30-back-to-the-acs",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 30: Back to the ACS",
    "text": "Slide 30: Back to the ACS\n\nHousehold survey\nPrivate dataset by household\nPublic dataset by geographic region\naggregation\nTable 1\nTable 2\n(last lecture)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-31-individual-level-private-dataset",
    "href": "fa24/lectures_qmd/lec06.html#slide-31-individual-level-private-dataset",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 31: Individual Level (Private Dataset)",
    "text": "Slide 31: Individual Level (Private Dataset)\n\nACS 2020"
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-32-translating-between-units-of-analysis",
    "href": "fa24/lectures_qmd/lec06.html#slide-32-translating-between-units-of-analysis",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 32: Translating between Units of Analysis",
    "text": "Slide 32: Translating between Units of Analysis\n\nAggregation - “Roll up” a variable measured on a fine-grained unit of analysis (e.g., individuals) into a variable on a coarser-grained unit of analysis (e.g., groups)\nIncome of many individuals in geographic regions → average income by region\nUsually done through counting or averaging\nDisaggregation - “Drill down” a variable measured on a coarser-grained unit of analysis (e.g., region) into a variable on a coarser-grained unit of analysis (e.g., groups within that region)\nGenerally performed to identify confounding (or mediating) variables to disentangle the impact of certain variables\nAverage income by geographic region → average income by race/ethnicity by region\nHow to do this?\nWithout fine-grained data, it is impossible to go from a high-level, aggregated view of data down to a lower-level, disaggregated view!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-33-acs",
    "href": "fa24/lectures_qmd/lec06.html#slide-33-acs",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 33: ACS",
    "text": "Slide 33: ACS\n\nPrivate dataset by household\nPublic dataset by geographic region\naggregation\ndisaggregation?\nCannot be done without additional data! Why?\nstraightforward: counting, averages"
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-34-disaggregation-and-privacy",
    "href": "fa24/lectures_qmd/lec06.html#slide-34-disaggregation-and-privacy",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 34: Disaggregation and Privacy",
    "text": "Slide 34: Disaggregation and Privacy\n\nPublic dataset by geographic region\nThe ACS main webpage [link] provides an aggregated view of data by region and specific disaggregations by income and sex.\nBy doing so, researchers can find it difficult (if not impossible) to disentangle the impact of certain variables, e.g., by race/ethnicity.\nACS has therefore also released ACS Public Use Microdata Sample (PUMS) [link] which releases a smaller sample of records from individual people and/or housing units.\nWhy the distinction?\nReleasing fine-grained data about individuals is a privacy issue.\n\nIt puts individuals in that dataset at risk of being identified beyond the research.\nIn particular, small, already vulnerable populations are often more easily identified.\n\nPUMS therefore uses a combination of privacy-preserving techniques such as differential privacy and synthetic data [source1, source2]\nTable 2"
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-35-in-conclusion",
    "href": "fa24/lectures_qmd/lec06.html#slide-35-in-conclusion",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 35: In Conclusion…",
    "text": "Slide 35: In Conclusion…"
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-36-summary",
    "href": "fa24/lectures_qmd/lec06.html#slide-36-summary",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 36: Summary",
    "text": "Slide 36: Summary\n\nUnits of Analysis describe the level of aggregation of our data\n\nWe can roll up or drill down depending on the demands of our research question\n\nIn Social Science Research we generate theories to guide our research and link together concepts\nWe test those theories by developing hypotheses that link measurable variables\n\nOur hypotheses can be either causal or associative though causal hypotheses are harder to prove\n\nSometime, we (data scientists) can work with existing data gathered by researchers\n\nBut oftentimes, that data is limited in its validity and generalizability\nIt is also important to understand the multiple units of analysis that we can use to answer questions, ranging from the individual level to the population level"
  },
  {
    "objectID": "fa24/lectures_qmd/lec06.html#slide-37-recap",
    "href": "fa24/lectures_qmd/lec06.html#slide-37-recap",
    "title": "[Lec 06] Data 6 Fall 2024 - Introduction to Social Science Research",
    "section": "Slide 37: Recap",
    "text": "Slide 37: Recap\n\nUnits of Analysis\nTheories\nHypothesis\nMaterials-Based Research\nhttps://docs.google.com/forms/d/e/1FAIpQLSdo2KH1OojSxiV-4eXYec4kba29YphQ7wwLmDa0MZxH6mHENw/viewform?usp=sf_link\nTable Fundamentals\nNext Time"
  },
  {
    "objectID": "fa24/lectures_qmd/lec12.html",
    "href": "fa24/lectures_qmd/lec12.html",
    "title": "[DATA 6] Quiz 1 Review",
    "section": "",
    "text": "Data 6 Fall 2024\nQuiz 1 Review"
  },
  {
    "objectID": "fa24/lectures_qmd/lec12.html#slide-1-review-section",
    "href": "fa24/lectures_qmd/lec12.html#slide-1-review-section",
    "title": "[DATA 6] Quiz 1 Review",
    "section": "",
    "text": "Data 6 Fall 2024\nQuiz 1 Review"
  },
  {
    "objectID": "fa24/lectures_qmd/lec12.html#slide-2-choose-your-adventure-nevermind-i-like-the-questions-i-made",
    "href": "fa24/lectures_qmd/lec12.html#slide-2-choose-your-adventure-nevermind-i-like-the-questions-i-made",
    "title": "[DATA 6] Quiz 1 Review",
    "section": "Slide 2: Choose your adventure… nevermind i like the questions i made",
    "text": "Slide 2: Choose your adventure… nevermind i like the questions i made\n\nArithmetic\nFunctions and Scope\nString Operations\nArray and Table operations\nSocial Sciences Research"
  },
  {
    "objectID": "fa24/lectures_qmd/lec12.html#slide-3-arithmetic",
    "href": "fa24/lectures_qmd/lec12.html#slide-3-arithmetic",
    "title": "[DATA 6] Quiz 1 Review",
    "section": "Slide 3: Arithmetic",
    "text": "Slide 3: Arithmetic\n\nSuppose we have the following integer, stored in the name n.\nUsing arithmetic, write expressions to represent…\nHow to retrieve the last digit of n\n\nFor example, if n == 30, we should get 0\n\nHow to add 3 to n, then multiply n by 5\n\nFor example, if n == 30, we should get 165\n\nHow to divide n by 10 while keeping n as an integer without using floor division\n\nFor example, if n == 30, we should get 3\n\nIf n is an odd number, round it up to the next largest even number. If n is an even number, keep it the same.\nn % 10\n(n + 3) * 5\nint(n / 10)\nn + n % 2"
  },
  {
    "objectID": "fa24/lectures_qmd/lec12.html#slide-4-functions-and-scope",
    "href": "fa24/lectures_qmd/lec12.html#slide-4-functions-and-scope",
    "title": "[DATA 6] Quiz 1 Review",
    "section": "Slide 4: Functions and Scope",
    "text": "Slide 4: Functions and Scope"
  },
  {
    "objectID": "fa24/lectures_qmd/lec12.html#slide-5-functions-and-scope",
    "href": "fa24/lectures_qmd/lec12.html#slide-5-functions-and-scope",
    "title": "[DATA 6] Quiz 1 Review",
    "section": "Slide 5: Functions and Scope",
    "text": "Slide 5: Functions and Scope\n\nWhat names exist in the global frame?\n\ni, so, dizzy\n\nWhat are the formal parameters to dizzy?\n\nyou, am, so\n\nWhat is printed out?\n\ndizzy\nNone i\ndizzy\nNone am\ndizzy"
  },
  {
    "objectID": "fa24/lectures_qmd/lec12.html#slide-6-string-operations",
    "href": "fa24/lectures_qmd/lec12.html#slide-6-string-operations",
    "title": "[DATA 6] Quiz 1 Review",
    "section": "Slide 6: String Operations",
    "text": "Slide 6: String Operations\n\nIs this statement true or false?\nAny call to replace and split is always interchangeable (i.e. s.split().replace(_, _) is the same as s.replace(_, _).split())\nFalse. Split returns a list to us, which has no replace method (which would error). Replace returns a string to us, which can then be split."
  },
  {
    "objectID": "fa24/lectures_qmd/lec12.html#slide-7",
    "href": "fa24/lectures_qmd/lec12.html#slide-7",
    "title": "[DATA 6] Quiz 1 Review",
    "section": "Slide 7: ‹#›",
    "text": "Slide 7: ‹#›\n\nWhat most accurately describes chatGPT’s response?\nBoth the evaluation and the example are correct\nThe evaluation is correct, but the example is incorrect\nBoth the evaluation and the example are incorrect\nNote: Assume that the arguments to replace can be either the same or different."
  },
  {
    "objectID": "fa24/lectures_qmd/lec12.html#slide-8-array-and-table-operations",
    "href": "fa24/lectures_qmd/lec12.html#slide-8-array-and-table-operations",
    "title": "[DATA 6] Quiz 1 Review",
    "section": "Slide 8: Array and Table Operations",
    "text": "Slide 8: Array and Table Operations\n\nAdd a column to a table called tbl called “Difference from Mean” that computes the difference between the values in the column called “Value” and the average value of the “Value” column. Your code should be able to handle different data in tbl (do not hardcode).\nDo this in one line of code."
  },
  {
    "objectID": "fa24/lectures_qmd/lec12.html#slide-9-solution",
    "href": "fa24/lectures_qmd/lec12.html#slide-9-solution",
    "title": "[DATA 6] Quiz 1 Review",
    "section": "Slide 9: Solution:",
    "text": "Slide 9: Solution:"
  },
  {
    "objectID": "fa24/lectures_qmd/lec12.html#slide-10-filtering-and-sorting",
    "href": "fa24/lectures_qmd/lec12.html#slide-10-filtering-and-sorting",
    "title": "[DATA 6] Quiz 1 Review",
    "section": "Slide 10: Filtering and Sorting",
    "text": "Slide 10: Filtering and Sorting\n\nAssume that tbl has been properly updated. Re-assign tbl to filter out all the rows from tbl where the Value is exactly the mean or the Value is negative. Your code should be able to handle different data in tbl (do not hardcode).\nDo this in one line of code."
  },
  {
    "objectID": "fa24/lectures_qmd/lec12.html#slide-11-solution",
    "href": "fa24/lectures_qmd/lec12.html#slide-11-solution",
    "title": "[DATA 6] Quiz 1 Review",
    "section": "Slide 11: Solution:",
    "text": "Slide 11: Solution:"
  },
  {
    "objectID": "fa24/lectures_qmd/lec12.html#slide-12-a-lil-join",
    "href": "fa24/lectures_qmd/lec12.html#slide-12-a-lil-join",
    "title": "[DATA 6] Quiz 1 Review",
    "section": "Slide 12: A lil join…",
    "text": "Slide 12: A lil join…\n\nSuppose we have the following two tables: tbl and tbl_2. How many rows are in the resulting output if we were to do tbl.join(“Value”, tbl_2)?\ntbl\ntbl_2"
  },
  {
    "objectID": "fa24/lectures_qmd/lec12.html#slide-13-solution",
    "href": "fa24/lectures_qmd/lec12.html#slide-13-solution",
    "title": "[DATA 6] Quiz 1 Review",
    "section": "Slide 13: Solution:",
    "text": "Slide 13: Solution:\n\nExplanation: We look through tbl for every corresponding value in tbl2. Starting with -2, we see two matches in tbl_2 (giving us the first two rows). The second -2 also sees two matches in tbl_2 (giving us the next two rows). Finally, we have one match for 4. There are no matches for 8, 8, and 2."
  },
  {
    "objectID": "fa24/lectures_qmd/lec12.html#slide-14-social-science-research",
    "href": "fa24/lectures_qmd/lec12.html#slide-14-social-science-research",
    "title": "[DATA 6] Quiz 1 Review",
    "section": "Slide 14: Social Science Research",
    "text": "Slide 14: Social Science Research\n\nJedi observes that traffic tends to be heavier on the weekdays, not the weekends."
  },
  {
    "objectID": "fa24/lectures_qmd/lec12.html#slide-15-group-1",
    "href": "fa24/lectures_qmd/lec12.html#slide-15-group-1",
    "title": "[DATA 6] Quiz 1 Review",
    "section": "Slide 15: Group 1",
    "text": "Slide 15: Group 1\n\nForm an exploratory research question around this observation.\n“How does traffic volume differ between weekdays and weekends, and what factors might influence these patterns?”\nWhat is an example of an associative hypothesis you could make?\nTraffic is heavier on weekdays compared to weekends.\nCausal hypothesis?\nTraffic is heavier on weekdays compared to weekends due to the number of people commuting to work on weekdays.\nAre your variables considered categorical, numerical, or something else?\n\nNumber of people commuting to work - numerical\nTraffic - depends on how we decide to measure it, usually numerical. Could be categorical if we group it into “light, medium, heavy.”\n\nTheory?\nStructured schedules during the week lead to increased road usage, while more flexible and relaxed activities on weekends result in lighter traffic."
  },
  {
    "objectID": "fa24/lectures_qmd/lec12.html#slide-16-group-2",
    "href": "fa24/lectures_qmd/lec12.html#slide-16-group-2",
    "title": "[DATA 6] Quiz 1 Review",
    "section": "Slide 16: Group 2",
    "text": "Slide 16: Group 2\n\nSuppose that the causal hypothesis is that increases in traffic can be attributed to the number of people who need to go to work on weekdays. Jedi decides to sit outside at the nearest freeway in Berkeley and count the number of cars he can see over the span of an hour on Monday, and compare that to the number of cars he can see over the span of an hour on Saturday. He also estimates who is going to work based on the outfit they are wearing.\nWhat is a potential confounding variable?\n\nMonday could have some special holiday happening, which may affect the amount of traffic (and the number of people going to work)\n\nName something that could threaten this study’s internal validity.\n\nJedi’s counting may not be completely accurate. He also has no way of gauging exactly who is going to work versus something else (outfits are not a perfect proxy).\n\nName something that could threaten this study’s external validity.\n\nThis is only a snapshot of one hour in one day in one location. This could be mitigated by studying a given location over multiple periods of time in multiple locations."
  },
  {
    "objectID": "fa24/lectures_qmd/lec12.html#slide-17-group-3",
    "href": "fa24/lectures_qmd/lec12.html#slide-17-group-3",
    "title": "[DATA 6] Quiz 1 Review",
    "section": "Slide 17: Group 3",
    "text": "Slide 17: Group 3\n\nJedi decides to sit outside at the nearest freeway in Berkeley and count the number of cars he can see over the span of an hour on Monday.\nName one way Jedi can roll up (aggregate) this study. What else could he do?\n\nCollect data from other locations/times as well\n\nName one way Jedi can drill down (disaggregate) this study. What else could he do?\n\nBreak up that hour into smaller time chunks, or separate out people going to work by occupation/some other factor"
  },
  {
    "objectID": "fa24/lectures_qmd/lec07.html",
    "href": "fa24/lectures_qmd/lec07.html",
    "title": "[Lec 07] Data 6 Fall 2024 - Table Fundamentals",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 07\nLearning how to work with tables in Python.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd/lec07.html#slide-1-table-fundamentals",
    "href": "fa24/lectures_qmd/lec07.html#slide-1-table-fundamentals",
    "title": "[Lec 07] Data 6 Fall 2024 - Table Fundamentals",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 07\nLearning how to work with tables in Python.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd/lec07.html#slide-2-week-4",
    "href": "fa24/lectures_qmd/lec07.html#slide-2-week-4",
    "title": "[Lec 07] Data 6 Fall 2024 - Table Fundamentals",
    "section": "Slide 2: Week 4",
    "text": "Slide 2: Week 4\n\nSee Ed!\nAnnouncements!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec07.html#slide-3-todays-roadmap",
    "href": "fa24/lectures_qmd/lec07.html#slide-3-todays-roadmap",
    "title": "[Lec 07] Data 6 Fall 2024 - Table Fundamentals",
    "section": "Slide 3: Today’s Roadmap",
    "text": "Slide 3: Today’s Roadmap\n\nTable Attributes and Methods\nselect, drop, and add columns\nCreate new tables\nMore Table Methods and Documentation\nDemo: WNBA Data\nLecture 07, Data 6 Fall 2024"
  },
  {
    "objectID": "fa24/lectures_qmd/lec07.html#slide-4-data-6-content",
    "href": "fa24/lectures_qmd/lec07.html#slide-4-data-6-content",
    "title": "[Lec 07] Data 6 Fall 2024 - Table Fundamentals",
    "section": "Slide 4: Data 6 Content",
    "text": "Slide 4: Data 6 Content\n\nModule 1\nIntroduction to Python and Jupyter Notebooks\nModule 2\nArrays & Table Methods\nModule 3\nData Visualization\nModule 4\nSocietal Context & Final Project"
  },
  {
    "objectID": "fa24/lectures_qmd/lec07.html#slide-5-exploratory-data-analysis",
    "href": "fa24/lectures_qmd/lec07.html#slide-5-exploratory-data-analysis",
    "title": "[Lec 07] Data 6 Fall 2024 - Table Fundamentals",
    "section": "Slide 5: Exploratory Data Analysis",
    "text": "Slide 5: Exploratory Data Analysis\n\nJohn Tukey (1915-2000) was a Princeton Mathematician & Statisticianand an Early Data Scientist. He coined the phrase Exploratory Data Analysis (EDA).\n[Data Analysis & Statistics, Tukey 1965; Image from LIFE Magazine]\nEDA is like detective work:\nExploratory data analysis is an attitude, a state offlexibility, a willingness to look for those things thatwe believe are not there, as well as those thatwe believe to be there.\nToday we will perform EDA by analyzing tables using Python.\n\n\n\nSpeaker notes\n\ndivide-and-conquer algorithm that recursively breaks down a DFT\nJohn Tukey, Princeton mathematician and statistician, inventor of the Fast Fourier Transform and father of Exploratory Data Analysis. Also coined the word “bit”.\nEmphasis courtesy Jeff Heer, U. Washington"
  },
  {
    "objectID": "fa24/lectures_qmd/lec07.html#slide-6-review-table",
    "href": "fa24/lectures_qmd/lec07.html#slide-6-review-table",
    "title": "[Lec 07] Data 6 Fall 2024 - Table Fundamentals",
    "section": "Slide 6: Review: Table",
    "text": "Slide 6: Review: Table\n\nReview: In this course, we often start with tabular data and perform EDA:\nColumns\nRows (also known as records).\nrow\ncolumn\n\n\n\nSpeaker notes\n\n“Data” are systematically collected elements of information about the world. They can be qualitative or quantitative in style. Sometimes data are collected to evaluate a very specific theory, but not so infrequently, scholars collect data before knowing precisely what they are interested in finding out. Moreover, even if data are collected to evaluate a specific hypothesis, researchers may ultimately be interested in questions that had not occurred to them previously."
  },
  {
    "objectID": "fa24/lectures_qmd/lec07.html#slide-7-todays-goals",
    "href": "fa24/lectures_qmd/lec07.html#slide-7-todays-goals",
    "title": "[Lec 07] Data 6 Fall 2024 - Table Fundamentals",
    "section": "Slide 7: Today’s goals",
    "text": "Slide 7: Today’s goals\n\nIf you are new to programming, it is easy to get lost in the syntax of Python! For today, we will therefore focus on two meta-goals:\nHow to translate your existing critical thinking skills and propensity for EDA into algorithmic thinking with Python Tables\nHow to read Python documentation to find what you want\nHow to debug code systematically\nReview: In this course, we often start with tabular data and perform EDA:\nColumns\nRows (also known as records).\n\n\n\nSpeaker notes\n\n“Data” are systematically collected elements of information about the world. They can be qualitative or quantitative in style. Sometimes data are collected to evaluate a very specific theory, but not so infrequently, scholars collect data before knowing precisely what they are interested in finding out. Moreover, even if data are collected to evaluate a specific hypothesis, researchers may ultimately be interested in questions that had not occurred to them previously."
  },
  {
    "objectID": "fa24/lectures_qmd/lec07.html#slide-8-table-attributes-and-methods",
    "href": "fa24/lectures_qmd/lec07.html#slide-8-table-attributes-and-methods",
    "title": "[Lec 07] Data 6 Fall 2024 - Table Fundamentals",
    "section": "Slide 8: Table Attributes and Methods",
    "text": "Slide 8: Table Attributes and Methods\n\n\nTable Attributes and Methods\n\n\nselect, drop, and add columns\n\n\nCreate new tables\n\n\nMore Table Methods and Documentation\n\n\nDemo: WNBA Data\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec07.html#slide-9-first-assign-a-table-to-a-name",
    "href": "fa24/lectures_qmd/lec07.html#slide-9-first-assign-a-table-to-a-name",
    "title": "[Lec 07] Data 6 Fall 2024 - Table Fundamentals",
    "section": "Slide 9: First, assign a Table to a name",
    "text": "Slide 9: First, assign a Table to a name\n\nTo work with this table, we first load it in from a file called data/cal_unis.csv:\nschools = Table.read_table(‘data/cal_unis.csv’)\nThis lecture we will return to the dataset of public four-year colleges and universities in California (source):\nassigns RHS value to schools name\nreturns a datascience Table from the given data file\nThen we use schools to call Table methods and attributes.\nAlways assign your table to a name!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec07.html#slide-10-next-use-the-documentation",
    "href": "fa24/lectures_qmd/lec07.html#slide-10-next-use-the-documentation",
    "title": "[Lec 07] Data 6 Fall 2024 - Table Fundamentals",
    "section": "Slide 10: Next, use the documentation",
    "text": "Slide 10: Next, use the documentation\n\nWe start with asking early questions about the table, such as # rows, # columns, and getting specific columns.\nNote the return types!\nNote the different syntax (more later).\nAccess Fa24 datascience documentation: here"
  },
  {
    "objectID": "fa24/lectures_qmd/lec07.html#slide-11-quick-check",
    "href": "fa24/lectures_qmd/lec07.html#slide-11-quick-check",
    "title": "[Lec 07] Data 6 Fall 2024 - Table Fundamentals",
    "section": "Slide 11: Quick check",
    "text": "Slide 11: Quick check\n\nWe start with asking early questions about the table, such as # rows, # columns, and getting specific columns.\nNote the return types!\nNote the different syntax (more later).\nUsing the documentation, fill in the following code to:\nAssign ncols to the number of columns in schools\nAssign arr to the Name column, but only use integer arguments\nAccess Fa24 datascience documentation: here"
  },
  {
    "objectID": "fa24/lectures_qmd/lec07.html#slide-12-attributes-vs.-methods",
    "href": "fa24/lectures_qmd/lec07.html#slide-12-attributes-vs.-methods",
    "title": "[Lec 07] Data 6 Fall 2024 - Table Fundamentals",
    "section": "Slide 12: Attributes vs. Methods",
    "text": "Slide 12: Attributes vs. Methods\n\nTable attributes\nProperties/ characteristics of the given data type (in this case, datascience.Table)\nTable methods\nFunctions that are called on a given data science table (in this case, schools)\nAll table methods return copies of information from the original table!\nVery important Python datascience library paradigm"
  },
  {
    "objectID": "fa24/lectures_qmd/lec07.html#slide-13-what-is-going-to-happen-.take-.sort",
    "href": "fa24/lectures_qmd/lec07.html#slide-13-what-is-going-to-happen-.take-.sort",
    "title": "[Lec 07] Data 6 Fall 2024 - Table Fundamentals",
    "section": "Slide 13: What is going to happen? .take, .sort",
    "text": "Slide 13: What is going to happen? .take, .sort\n\nWhat will be the output of each cell? Example: A, B, C means the outputs are table A, then table B, then table C.\nschools(before cells are run)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec07.html#slide-14-what-is-going-to-happen-.take-.sort",
    "href": "fa24/lectures_qmd/lec07.html#slide-14-what-is-going-to-happen-.take-.sort",
    "title": "[Lec 07] Data 6 Fall 2024 - Table Fundamentals",
    "section": "Slide 14: What is going to happen? .take, .sort",
    "text": "Slide 14: What is going to happen? .take, .sort\n\nWhat will be the output of each cell? Example: A, B, C means the outputs are table A, then table B, then table C.\nE. Error"
  },
  {
    "objectID": "fa24/lectures_qmd/lec07.html#slide-15-select-drop-and-add-columns",
    "href": "fa24/lectures_qmd/lec07.html#slide-15-select-drop-and-add-columns",
    "title": "[Lec 07] Data 6 Fall 2024 - Table Fundamentals",
    "section": "Slide 15: Select, drop, and add columns",
    "text": "Slide 15: Select, drop, and add columns\n\n➤\n\nTable Attributes and Methods\n\n\nselect, drop, and add columns\n\n\nCreate new tables\n\n\nMore Table Methods and Documentation\n\n\nDemo: WNBA Data"
  },
  {
    "objectID": "fa24/lectures_qmd/lec07.html#slide-16-column-first-paradigm",
    "href": "fa24/lectures_qmd/lec07.html#slide-16-column-first-paradigm",
    "title": "[Lec 07] Data 6 Fall 2024 - Table Fundamentals",
    "section": "Slide 16: Column-first paradigm",
    "text": "Slide 16: Column-first paradigm\n\nBecause columns represent variables, we will first learn a column-first approach to tables:\n(Next week, we’ll learn how to edit specific rows; for now we won’t).\ntbl.select(…) returns a new table with a subset of columns.\ntbl.drop(…) and returns a new table without a subset of columns\ntbl.with_columns(…) returns a new table with additional new column(s).\nNow to the notebook for two demos!\n\n\n\nSpeaker notes\n\nTeacher notes Demo 1 - run the cells, hide the explanation, then explain. Make sure to reset before moving onto the next activity\nDemo 2 - add in two new columns, one after the other. The demo code is intentionally hidden in the notebook."
  },
  {
    "objectID": "fa24/lectures_qmd/lec07.html#slide-17-reorder-columns",
    "href": "fa24/lectures_qmd/lec07.html#slide-17-reorder-columns",
    "title": "[Lec 07] Data 6 Fall 2024 - Table Fundamentals",
    "section": "Slide 17: Reorder Columns",
    "text": "Slide 17: Reorder Columns\n\nHow do we reorder the columns to get the following table?\nHint: use one of .select, .drop, or .with_columns."
  },
  {
    "objectID": "fa24/lectures_qmd/lec07.html#slide-18-reorder-columns-solution",
    "href": "fa24/lectures_qmd/lec07.html#slide-18-reorder-columns-solution",
    "title": "[Lec 07] Data 6 Fall 2024 - Table Fundamentals",
    "section": "Slide 18: Reorder Columns: Solution",
    "text": "Slide 18: Reorder Columns: Solution\n\nHow do we reorder the columns to get the following table?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec07.html#slide-19-create-new-tables",
    "href": "fa24/lectures_qmd/lec07.html#slide-19-create-new-tables",
    "title": "[Lec 07] Data 6 Fall 2024 - Table Fundamentals",
    "section": "Slide 19: Create new tables",
    "text": "Slide 19: Create new tables\n\n➤\n\nTable Attributes and Methods\n\n\nselect, drop, and add columns\n\n\nCreate new tables\n\n\nMore Table Methods and Documentation\n\n\nDemo: WNBA Data"
  },
  {
    "objectID": "fa24/lectures_qmd/lec07.html#slide-20-what-does-the-following-code-do",
    "href": "fa24/lectures_qmd/lec07.html#slide-20-what-does-the-following-code-do",
    "title": "[Lec 07] Data 6 Fall 2024 - Table Fundamentals",
    "section": "Slide 20: What does the following code do?",
    "text": "Slide 20: What does the following code do?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec07.html#slide-21-what-does-the-following-code-do-solution",
    "href": "fa24/lectures_qmd/lec07.html#slide-21-what-does-the-following-code-do-solution",
    "title": "[Lec 07] Data 6 Fall 2024 - Table Fundamentals",
    "section": "Slide 21: What does the following code do? Solution",
    "text": "Slide 21: What does the following code do? Solution"
  },
  {
    "objectID": "fa24/lectures_qmd/lec07.html#slide-22-what-does-the-following-code-do-solution",
    "href": "fa24/lectures_qmd/lec07.html#slide-22-what-does-the-following-code-do-solution",
    "title": "[Lec 07] Data 6 Fall 2024 - Table Fundamentals",
    "section": "Slide 22: What does the following code do? Solution",
    "text": "Slide 22: What does the following code do? Solution\n\nAdd 3 columns that have these labels…\n…and that have these values."
  },
  {
    "objectID": "fa24/lectures_qmd/lec07.html#slide-23-good-programming-style",
    "href": "fa24/lectures_qmd/lec07.html#slide-23-good-programming-style",
    "title": "[Lec 07] Data 6 Fall 2024 - Table Fundamentals",
    "section": "Slide 23: Good programming style",
    "text": "Slide 23: Good programming style\n\nUse whitespace to your advantage!\nAs a human, why is the code above potentially easier to read than the code below?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec07.html#slide-24-more-table-methods-and-documentation",
    "href": "fa24/lectures_qmd/lec07.html#slide-24-more-table-methods-and-documentation",
    "title": "[Lec 07] Data 6 Fall 2024 - Table Fundamentals",
    "section": "Slide 24: More Table Methods and Documentation",
    "text": "Slide 24: More Table Methods and Documentation\n\n➤\n\nTable Attributes and Methods\n\n\nselect, drop, and add columns\n\n\nCreate new tables\n\n\nMore Table Methods and Documentation\n\n\nDemo: WNBA Data"
  },
  {
    "objectID": "fa24/lectures_qmd/lec07.html#slide-25-13-navigating-documentation",
    "href": "fa24/lectures_qmd/lec07.html#slide-25-13-navigating-documentation",
    "title": "[Lec 07] Data 6 Fall 2024 - Table Fundamentals",
    "section": "Slide 25: (1/3) Navigating documentation",
    "text": "Slide 25: (1/3) Navigating documentation\n\nEarly programmers often find documentation the most challenging.\nSuppose we have our schools table:\nHow do we get all the column labels of schools?\nHow do we update schools such that the column Name is renamed University?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec07.html#slide-26-13-navigating-documentation",
    "href": "fa24/lectures_qmd/lec07.html#slide-26-13-navigating-documentation",
    "title": "[Lec 07] Data 6 Fall 2024 - Table Fundamentals",
    "section": "Slide 26: (1/3) Navigating documentation",
    "text": "Slide 26: (1/3) Navigating documentation\n\nEarly programmers often find documentation the most challenging.\nSuppose we have our schools table:\nHow do we get all the column labels of schools?\nHow do we update schools such that the column Name is renamed University?\nPython tuple datatype(fixed, ordered list of values)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec07.html#slide-27-23-navigating-documentation-filtering-with-where",
    "href": "fa24/lectures_qmd/lec07.html#slide-27-23-navigating-documentation-filtering-with-where",
    "title": "[Lec 07] Data 6 Fall 2024 - Table Fundamentals",
    "section": "Slide 27: (2/3) Navigating documentation:\u000bFiltering with where",
    "text": "Slide 27: (2/3) Navigating documentation:\u000bFiltering with where\n\nOften times, we will want to filter the rows of a table based on a specific condition, i.e., get only the rows where some condition is true.\nHow do we get a table with all of the UC schools?\nHow do we get a table with all the schools in Los Angeles?\n# 1\n# 2\nWe will learn more complicated uses of .where later in the course (“Predicates”), but for now we filter only on exact matches."
  },
  {
    "objectID": "fa24/lectures_qmd/lec07.html#slide-28-33-navigating-documentation-be-careful-with-.show",
    "href": "fa24/lectures_qmd/lec07.html#slide-28-33-navigating-documentation-be-careful-with-.show",
    "title": "[Lec 07] Data 6 Fall 2024 - Table Fundamentals",
    "section": "Slide 28: (3/3) Navigating documentation:\u000bBe careful with .show",
    "text": "Slide 28: (3/3) Navigating documentation:\u000bBe careful with .show\n\nThe following cells exhibit a tricky, but potentially common bug.\nWhen run in sequence, why does the last cell throw an error?\nDespite this, what might be a good use case for using .show?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec07.html#slide-29-33-navigating-documentation-be-careful-with-.show",
    "href": "fa24/lectures_qmd/lec07.html#slide-29-33-navigating-documentation-be-careful-with-.show",
    "title": "[Lec 07] Data 6 Fall 2024 - Table Fundamentals",
    "section": "Slide 29: (3/3) Navigating documentation:\u000bBe careful with .show",
    "text": "Slide 29: (3/3) Navigating documentation:\u000bBe careful with .show\n\nThe following cells exhibit a tricky, but potentially common bug.\nWhen run in sequence, why does the last cell throw an error?\n.show is purely for display purposes. It does not return anything—i.e., it returns None.\nThe second cell therefore assigns schools to None!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec07.html#slide-30-33-navigating-documentation-be-careful-with-.show",
    "href": "fa24/lectures_qmd/lec07.html#slide-30-33-navigating-documentation-be-careful-with-.show",
    "title": "[Lec 07] Data 6 Fall 2024 - Table Fundamentals",
    "section": "Slide 30: (3/3) Navigating documentation:\u000bBe careful with .show",
    "text": "Slide 30: (3/3) Navigating documentation:\u000bBe careful with .show\n\nThe following cells exhibit a tricky, but potentially common bug.\nWhen run in sequence, why does the last cell throw an error?\nDespite this, what might be a good use case for using .show?\n.show is useful when you want to display intermediate output for debugging purposes."
  },
  {
    "objectID": "fa24/lectures_qmd/lec07.html#slide-31-even-more-practice",
    "href": "fa24/lectures_qmd/lec07.html#slide-31-even-more-practice",
    "title": "[Lec 07] Data 6 Fall 2024 - Table Fundamentals",
    "section": "Slide 31: Even More Practice",
    "text": "Slide 31: Even More Practice\n\n(There are a few extra exercises in today’s lecture notebook for you to check out on your own time.)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec07.html#slide-32-in-conclusion",
    "href": "fa24/lectures_qmd/lec07.html#slide-32-in-conclusion",
    "title": "[Lec 07] Data 6 Fall 2024 - Table Fundamentals",
    "section": "Slide 32: In Conclusion…",
    "text": "Slide 32: In Conclusion…"
  },
  {
    "objectID": "fa24/lectures_qmd/lec07.html#slide-33-recap",
    "href": "fa24/lectures_qmd/lec07.html#slide-33-recap",
    "title": "[Lec 07] Data 6 Fall 2024 - Table Fundamentals",
    "section": "Slide 33: Recap",
    "text": "Slide 33: Recap\n\nTables!\nColumns and Variables\nTable Methods\nhttps://docs.google.com/forms/d/e/1FAIpQLSeHdmtEa3WahCRcDnW6o4oRxFb49eihAcs6elUnKNy9CNoEiw/viewform?usp=sf_link\nMore Table Methods\nNext Time"
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html",
    "href": "fa24/lectures_qmd/lec05.html",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 05\nWhat it means to work with data.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-1-numpy-indexing-variables-in-data-science",
    "href": "fa24/lectures_qmd/lec05.html#slide-1-numpy-indexing-variables-in-data-science",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 05\nWhat it means to work with data.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-2-week-3",
    "href": "fa24/lectures_qmd/lec05.html#slide-2-week-3",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 2: Week 3",
    "text": "Slide 2: Week 3\n\nCheck Ed!\nAnnouncements!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-3-todays-roadmap",
    "href": "fa24/lectures_qmd/lec05.html#slide-3-todays-roadmap",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 3: Today’s Roadmap",
    "text": "Slide 3: Today’s Roadmap\n\nArray Functions\nNumPy\nIndexing\nVariables in Data Science\nLecture 05, Data 6 Fall 2024"
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-4-quick-check-review",
    "href": "fa24/lectures_qmd/lec05.html#slide-4-quick-check-review",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 4: Quick Check Review",
    "text": "Slide 4: Quick Check Review\n\n\nArray Functions\n\n\nNumPy\n\n\nIndexing\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-5-array-functions",
    "href": "fa24/lectures_qmd/lec05.html#slide-5-array-functions",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 5: Array Functions",
    "text": "Slide 5: Array Functions\n\n\nArray Functions\n\n\nNumPy\n\n\nIndexing\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-6-standard-functions",
    "href": "fa24/lectures_qmd/lec05.html#slide-6-standard-functions",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 6: Standard Functions",
    "text": "Slide 6: Standard Functions"
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-7-standard-functions",
    "href": "fa24/lectures_qmd/lec05.html#slide-7-standard-functions",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 7: Standard Functions",
    "text": "Slide 7: Standard Functions\n\nWhile the function names are identical to what we saw for int/float/strs, the call expressions evaluate differently with our new array data type."
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-8-numpy",
    "href": "fa24/lectures_qmd/lec05.html#slide-8-numpy",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 8: NumPy",
    "text": "Slide 8: NumPy\n\n➤\n\nArray Functions\n\n\nNumPy\n\n\nIndexing\n\n\nMaterials-Based Research"
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-9-numpy-a-convenient-function-library",
    "href": "fa24/lectures_qmd/lec05.html#slide-9-numpy-a-convenient-function-library",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 9: NumPy: A Convenient Function Library",
    "text": "Slide 9: NumPy: A Convenient Function Library\n\nEarlier, we computed averages using built-in Python functions:\narr = make_array(30, -40, -4.5, 0, 35)\navg = sum(arr)/len(arr)\navg\nIn [2]:\nComputing averages of array elements happens a lot in data science!\nThe NumPy package function np.average() is human-readable and convenient.\n4.1\nOut [2]:"
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-10-the-numpy-package",
    "href": "fa24/lectures_qmd/lec05.html#slide-10-the-numpy-package",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 10: The NumPy package",
    "text": "Slide 10: The NumPy package\n\nNumPy (pronounced “num pie”) is a Python package* with convenient andpowerful functions for manipulating arrays.\n*For our purposes, “library”, “package”, and “module” all mean similar things.\nWe generally put this import statement at the top of our notebook,then prepend np. to call a NumPy function."
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-11-element-wise-numpy-functions",
    "href": "fa24/lectures_qmd/lec05.html#slide-11-element-wise-numpy-functions",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 11: Element-wise NumPy Functions",
    "text": "Slide 11: Element-wise NumPy Functions\n\nNumPy functions\nMany of these functions work on both arrays and individual numbers.\nWe’ll point you to NumPy functions as they come up; you don’t need to memorize them. The course website has a list of some of them.\nN-length array\nN-length array"
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-12-common-numpy-functions",
    "href": "fa24/lectures_qmd/lec05.html#slide-12-common-numpy-functions",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 12: Common NumPy Functions",
    "text": "Slide 12: Common NumPy Functions\n\nNumPy functions\nN-length array\nN-length array"
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-13-even-more-functions",
    "href": "fa24/lectures_qmd/lec05.html#slide-13-even-more-functions",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 13: Even More Functions",
    "text": "Slide 13: Even More Functions\n\nNumPy functions\nN-length array\nN-length array"
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-14-questions-about-functions",
    "href": "fa24/lectures_qmd/lec05.html#slide-14-questions-about-functions",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 14: Questions About Functions?",
    "text": "Slide 14: Questions About Functions?\n\nData 6 Python Reference™"
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-15-side-note-the-datascience-package",
    "href": "fa24/lectures_qmd/lec05.html#slide-15-side-note-the-datascience-package",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 15: Side Note: The datascience Package",
    "text": "Slide 15: Side Note: The datascience Package\n\ndatascience package import statement:\nThe slightly different syntax allows us to call package functions without prepending datascience.\nThe make_array() functionis from this package!\nFun fact: The datascience package was written by UC Berkeley specifically for data science education. It’s designed to support many Python packages like NumPy.\n“Import everything”"
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-16-indexing",
    "href": "fa24/lectures_qmd/lec05.html#slide-16-indexing",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 16: Indexing",
    "text": "Slide 16: Indexing\n\n➤\n\nArray Functions\n\n\nNumPy\n\n\nIndexing"
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-17-array-methods",
    "href": "fa24/lectures_qmd/lec05.html#slide-17-array-methods",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 17: Array Methods",
    "text": "Slide 17: Array Methods\n\nMethods are functions that we call with “dot” syntax. There are several array methods that make it easy to calculate values of interest.\nTerminology note: Method calls are where the function operates directly on the array arr.\nIn these examples, method calls are equivalent to the NumPy package functions.\nThe most common array method is item(), which is used for array indexing."
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-18-an-elements-index-is-its-position-in-an-array",
    "href": "fa24/lectures_qmd/lec05.html#slide-18-an-elements-index-is-its-position-in-an-array",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 18: An Element’s Index Is Its Position in an Array",
    "text": "Slide 18: An Element’s Index Is Its Position in an Array\n\nWhen people stand in a line, each person has a position.\nSimilarly, each element (i.e., value) of an array has a position – called its index.\nPerson 1\nPerson 7\nPython, like most programming languages, is 0-indexed. This means that in an array, the first element has index 0, not 1.\nIndex 0\nIndex 6\nIndices\n0 1 2 3 4\nFor a length-5 array:"
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-19-array-indexing",
    "href": "fa24/lectures_qmd/lec05.html#slide-19-array-indexing",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 19: Array Indexing",
    "text": "Slide 19: Array Indexing\n\nWe can access an element in an array by using its index and the item() method:\narr.item(index)\nThough int_arr has 5 elements, the largest valid index is 4."
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-20-negative-indexing",
    "href": "fa24/lectures_qmd/lec05.html#slide-20-negative-indexing",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 20: Negative Indexing",
    "text": "Slide 20: Negative Indexing\n\nWe can also “count backwards” using negative indexes.\n-1 corresponds to the last element in a array.\n-2 corresponds to the second last element in a array.\nAnd so on…"
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-21-questions",
    "href": "fa24/lectures_qmd/lec05.html#slide-21-questions",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 21: Questions?",
    "text": "Slide 21: Questions?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-22-variables-in-data-science",
    "href": "fa24/lectures_qmd/lec05.html#slide-22-variables-in-data-science",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 22: Variables in Data Science",
    "text": "Slide 22: Variables in Data Science\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-23-terminology-data-tabular-data-and-records",
    "href": "fa24/lectures_qmd/lec05.html#slide-23-terminology-data-tabular-data-and-records",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 23: Terminology: Data, Tabular Data, and Records",
    "text": "Slide 23: Terminology: Data, Tabular Data, and Records\n\nA dataset is a collection of data.\n“[Data] are systematically collected elements of information about the world.”\n– King, Keohane, and Verba. Designing Social Inquiry (1994).\nIn this course we will often use tabular data:\nColumns\nRows (also known as records).\nrow\ncolumn\n\n\n\nSpeaker notes\n\n“Data” are systematically collected elements of information about the world. They can be qualitative or quantitative in style. Sometimes data are collected to evaluate a very specific theory, but not so infrequently, scholars collect data before knowing precisely what they are interested in finding out. Moreover, even if data are collected to evaluate a specific hypothesis, researchers may ultimately be interested in questions that had not occurred to them previously."
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-24-terminology-variables",
    "href": "fa24/lectures_qmd/lec05.html#slide-24-terminology-variables",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 24: Terminology: Variables",
    "text": "Slide 24: Terminology: Variables\n\nIn data science, a variable is a measurable feature, attribute, and/or representation of a concept. It can have different values for different individuals.\nvariable\n\n\n\nSpeaker notes\n\n“Data” are systematically collected elements of information about the world. They can be qualitative or quantitative in style. Sometimes data are collected to evaluate a very specific theory, but not so infrequently, scholars collect data before knowing precisely what they are interested in finding out. Moreover, even if data are collected to evaluate a specific hypothesis, researchers may ultimately be interested in questions that had not occurred to them previously."
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-25-terminology-variables",
    "href": "fa24/lectures_qmd/lec05.html#slide-25-terminology-variables",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 25: Terminology: Variables",
    "text": "Slide 25: Terminology: Variables\n\nIn data science, a variable is a measurable feature, attribute, and/or representation of a concept. It can have different values for different individuals.\nA column contains/captures all measurements for a particular variable from our dataset.\nExample 1: This column represents the estimated number of people 25 years or older in each state. Values are positive integers.\nvariable\n\n\n\nSpeaker notes\n\n“Data” are systematically collected elements of information about the world. They can be qualitative or quantitative in style. Sometimes data are collected to evaluate a very specific theory, but not so infrequently, scholars collect data before knowing precisely what they are interested in finding out. Moreover, even if data are collected to evaluate a specific hypothesis, researchers may ultimately be interested in questions that had not occurred to them previously."
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-26-terminology-variables",
    "href": "fa24/lectures_qmd/lec05.html#slide-26-terminology-variables",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 26: Terminology: Variables",
    "text": "Slide 26: Terminology: Variables\n\nIn data science, a variable is a measurable feature, attribute, and/or representation of a concept. It can have different values for different individuals.\nA column contains/captures all measurements for a particular variable from our dataset.\nExample 2: This column represents the recorded sex of each respondent. Values are binary categories.\nvariable\n\n\n\nSpeaker notes\n\n“Data” are systematically collected elements of information about the world. They can be qualitative or quantitative in style. Sometimes data are collected to evaluate a very specific theory, but not so infrequently, scholars collect data before knowing precisely what they are interested in finding out. Moreover, even if data are collected to evaluate a specific hypothesis, researchers may ultimately be interested in questions that had not occurred to them previously."
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-27-terminology-variables",
    "href": "fa24/lectures_qmd/lec05.html#slide-27-terminology-variables",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 27: Terminology: Variables",
    "text": "Slide 27: Terminology: Variables\n\nIn data science, a variable is a measurable feature, attribute, and/or representation of a concept. It can have different values for different individuals.\nvariable\nVariables are empirical measurements; they are often metrics that researchers create to approximate the specific dimensions of an abstract concept of a research question.\nSide note: In computer science, Python names are also called variables. However, in this class we’ll always try to refer to Python names as names to avoid confusing it with the data science definition of a variable.\n\n\n\nSpeaker notes\n\n“Data” are systematically collected elements of information about the world. They can be qualitative or quantitative in style. Sometimes data are collected to evaluate a very specific theory, but not so infrequently, scholars collect data before knowing precisely what they are interested in finding out. Moreover, even if data are collected to evaluate a specific hypothesis, researchers may ultimately be interested in questions that had not occurred to them previously."
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-28-case-study-american-community-survey-2020",
    "href": "fa24/lectures_qmd/lec05.html#slide-28-case-study-american-community-survey-2020",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 28: Case Study: American Community Survey (2020)",
    "text": "Slide 28: Case Study: American Community Survey (2020)\n\nImportant uses at local and national level:\nDistribution of federal/state funds\nEconomic development (infrastructure, hospitals, schools, bridges, etc.)\nEmergency management\nVariables are empirical measurements; they are often metrics that researchers create to approximate the specific dimensions of an abstract concept of a research question.\nConducted annually by the US Census Bureau.\nMailed to a sample of ~3.5 million household addressesin 50 states + DC + Puerto Rico.\nACS builds on Census questions and also asks questions on education, employment,internet access, and transportation.\nAbout the ACS"
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-29-research-question-and-data-collection",
    "href": "fa24/lectures_qmd/lec05.html#slide-29-research-question-and-data-collection",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 29: Research Question and Data Collection",
    "text": "Slide 29: Research Question and Data Collection\n\nThe definition of variables is impacted not only by researchers’ interests, but also the process and limitations of data collection.\nWhat is the level of educational attainment in 2020 among US resident adults?\nPose the Research Question\nHousehold survey\nPrivate dataset by household\nPublic dataset by geographic region\naggregation\nTable 1\nTable 2\n(this lecture)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-30-defining-concepts-in-the-research-question",
    "href": "fa24/lectures_qmd/lec05.html#slide-30-defining-concepts-in-the-research-question",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 30: Defining Concepts in the Research Question",
    "text": "Slide 30: Defining Concepts in the Research Question\n\nTranslate a concept into a variable\nDefine the variable domain (i.e., all possible values)\nConsider other factors that may influence the outcomes of the study, and repeat\nWhat is the level of educational attainment in 2020 among US resident adults?\nPose the Research Question\nConcept: Education\nVariable: Highest degree received by academic institution\nLess than high school graduate\nHigh school graduate (includes equivalency)\nSome college or associate’s degree\nBachelor’s degree\nGraduate or professional degree\nVariable domains can be categorical, numeric, or qualitative! In this course we focus on the first two."
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-31-defining-concepts-in-the-research-question",
    "href": "fa24/lectures_qmd/lec05.html#slide-31-defining-concepts-in-the-research-question",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 31: Defining Concepts in the Research Question",
    "text": "Slide 31: Defining Concepts in the Research Question\n\nTranslate a concept into a variable\nDefine the variable domain (i.e., all possible values)\nConsider other factors that may influence the outcomes of the study, and repeat\nWhat is the level of educational attainment in 2020 among US resident adults?\nPose the Research Question\nConcept: US resident\nVariable: Address\nUS Postal address of a residence [where the survey is mailed]\nConcept: Adult\nVariable: Age bracket\nBelow 18\n18 to 25 (“young adult”)\n25 and up\n[recorded from age]"
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-32-identifying-confounding-variables",
    "href": "fa24/lectures_qmd/lec05.html#slide-32-identifying-confounding-variables",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 32: Identifying Confounding Variables",
    "text": "Slide 32: Identifying Confounding Variables\n\nConfounding variables can be linked to other concepts in a way that makes two concepts appear related (even when they are not).\nTranslate a concept into a variable\nDefine the variable domain (i.e., all possible values)\nConsider other factors that may influence the outcomes of the study, and repeat\nWhat is the level of educational attainment in 2020 among US resident adults?\nPose the Research Question\nUS geographic region\nEducational attainment level\n?\nOther social systems?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-33-identifying-confounding-variables",
    "href": "fa24/lectures_qmd/lec05.html#slide-33-identifying-confounding-variables",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 33: Identifying Confounding Variables",
    "text": "Slide 33: Identifying Confounding Variables\n\nThese are just a few confounding variables measured in the ACS. What kinds of confounding variables would likely not be measured in a government study?\nWhat is the level of educational attainment in 2020 among US resident adults?\nPose the Research Question\nRace/Ethnicity\nWhite alone\nWhite alone, not Hispanic or Latino\nBlack alone\nAmerican Indian or Alaska Native alone\nAsian alone\nNative Hawaiian and Other Pacific Islander Alone\nSome other race alone\nTwo or more races\nHispanic or Latino Origin\nSex\nMale\nFemale\nIncome/Earnings\n(numeric amount)\nUS geographic region\nEducational attainment level\n?\n\n\n\nSpeaker notes\n\nhttps://www.nationalgeographic.com/culture/article/race-ethnicity “Race” is usually associated with biology and linked with physical characteristics such as skin color or hair texture. “Ethnicity” is linked with cultural expression and identification. However, both are social constructs used to categorize and characterize seemingly distinct populations."
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-34-in-conclusion",
    "href": "fa24/lectures_qmd/lec05.html#slide-34-in-conclusion",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 34: In Conclusion…",
    "text": "Slide 34: In Conclusion…"
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-35-summary",
    "href": "fa24/lectures_qmd/lec05.html#slide-35-summary",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 35: Summary",
    "text": "Slide 35: Summary\n\nArray functions allow us to operate on and aggregate data in arrays\nWhile some functions are built-in to Python, others come from the NumPy library, which contains many useful array methods\nTo retrieve a specific element/item in an array, you use the element’s index\n\nRemember that indices start at 0, not 1\n\nIn data science, a variable is a measurable feature, attribute, and/or representation of a concept\n\nWe will use “name” to refer to Python names and “variable” to refer to data science variables\n\nThe context of our data matter a lot, and we should always examine the impact of data science on society"
  },
  {
    "objectID": "fa24/lectures_qmd/lec05.html#slide-36-recap",
    "href": "fa24/lectures_qmd/lec05.html#slide-36-recap",
    "title": "[Lec 05] Data 6 Fall 2024 - NumPy, Indexing, Variables in Data Science",
    "section": "Slide 36: Recap",
    "text": "Slide 36: Recap\n\nArray Functions\nNumPy\nIndexing\nVariables in Data Science\nhttps://forms.gle/KBHypkDihQdLRyrB9\nTables!\nColumns and Variables\nTable Methods\nNext Time"
  },
  {
    "objectID": "fa24/lectures_qmd/lec10.html",
    "href": "fa24/lectures_qmd/lec10.html",
    "title": "[Lec 10] Data 6 Fall 2024 - Joining and Row Methods",
    "section": "",
    "text": "Row Methods\n\nData 6 Fall 2024\nLECTURE 10\nCombining multiple sources of data.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd/lec10.html#slide-1-joining-and",
    "href": "fa24/lectures_qmd/lec10.html#slide-1-joining-and",
    "title": "[Lec 10] Data 6 Fall 2024 - Joining and Row Methods",
    "section": "",
    "text": "Row Methods\n\nData 6 Fall 2024\nLECTURE 10\nCombining multiple sources of data.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd/lec10.html#slide-2-week-6",
    "href": "fa24/lectures_qmd/lec10.html#slide-2-week-6",
    "title": "[Lec 10] Data 6 Fall 2024 - Joining and Row Methods",
    "section": "Slide 2: Week 6",
    "text": "Slide 2: Week 6\n\nSee Ed!\nEdwin!\nAnnouncements!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec10.html#slide-3-todays-roadmap",
    "href": "fa24/lectures_qmd/lec10.html#slide-3-todays-roadmap",
    "title": "[Lec 10] Data 6 Fall 2024 - Joining and Row Methods",
    "section": "Slide 3: Today’s Roadmap",
    "text": "Slide 3: Today’s Roadmap\n\nJoining\nDemo\nThe Row Data Type\nLecture 13, Data 6 Summer 2024"
  },
  {
    "objectID": "fa24/lectures_qmd/lec10.html#slide-4-joining-tables",
    "href": "fa24/lectures_qmd/lec10.html#slide-4-joining-tables",
    "title": "[Lec 10] Data 6 Fall 2024 - Joining and Row Methods",
    "section": "Slide 4: Joining Tables",
    "text": "Slide 4: Joining Tables\n\n\nJoining\n\n\nDemo\n\n\nThe Row Data Type\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec10.html#slide-5-question-if-i-sold-all-of-the-phones-in-my-inventory-what-would-my-revenue-be",
    "href": "fa24/lectures_qmd/lec10.html#slide-5-question-if-i-sold-all-of-the-phones-in-my-inventory-what-would-my-revenue-be",
    "title": "[Lec 10] Data 6 Fall 2024 - Joining and Row Methods",
    "section": "Slide 5: Question: If I sold all of the phones in my inventory, what would my revenue be?",
    "text": "Slide 5: Question: If I sold all of the phones in my inventory, what would my revenue be?\n\nQuestion: If I sold all of the phones in my inventory, what would my revenue be?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec10.html#slide-6-.join",
    "href": "fa24/lectures_qmd/lec10.html#slide-6-.join",
    "title": "[Lec 10] Data 6 Fall 2024 - Joining and Row Methods",
    "section": "Slide 6: .join()",
    "text": "Slide 6: .join()\n\nThe method\ntable_1.join(‘column 1’, table_2, ‘column 2’)\ncombines table_1 and table_2 into a larger table, by looking for matches in ‘column 1’ of table_1 and ‘column 2’ of table_2 and combining matching rows."
  },
  {
    "objectID": "fa24/lectures_qmd/lec10.html#slide-7-phones.joinmodel-inventory-handset",
    "href": "fa24/lectures_qmd/lec10.html#slide-7-phones.joinmodel-inventory-handset",
    "title": "[Lec 10] Data 6 Fall 2024 - Joining and Row Methods",
    "section": "Slide 7: phones.join(‘Model’, inventory, ‘Handset’)",
    "text": "Slide 7: phones.join(‘Model’, inventory, ‘Handset’)\n\nphones.join(‘Model’, inventory, ‘Handset’)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec10.html#slide-8-phones.joinmodel-inventory-handset",
    "href": "fa24/lectures_qmd/lec10.html#slide-8-phones.joinmodel-inventory-handset",
    "title": "[Lec 10] Data 6 Fall 2024 - Joining and Row Methods",
    "section": "Slide 8: phones.join(‘Model’, inventory, ‘Handset’)",
    "text": "Slide 8: phones.join(‘Model’, inventory, ‘Handset’)\n\nphones.join(‘Model’, inventory, ‘Handset’)\nNo matches!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec10.html#slide-9-phones.joinmodel-inventory-handset",
    "href": "fa24/lectures_qmd/lec10.html#slide-9-phones.joinmodel-inventory-handset",
    "title": "[Lec 10] Data 6 Fall 2024 - Joining and Row Methods",
    "section": "Slide 9: phones.join(‘Model’, inventory, ‘Handset’)",
    "text": "Slide 9: phones.join(‘Model’, inventory, ‘Handset’)\n\nphones.join(‘Model’, inventory, ‘Handset’)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec10.html#slide-10-phones.joinmodel-inventory-handset",
    "href": "fa24/lectures_qmd/lec10.html#slide-10-phones.joinmodel-inventory-handset",
    "title": "[Lec 10] Data 6 Fall 2024 - Joining and Row Methods",
    "section": "Slide 10: phones.join(‘Model’, inventory, ‘Handset’)",
    "text": "Slide 10: phones.join(‘Model’, inventory, ‘Handset’)\n\nphones.join(‘Model’, inventory, ‘Handset’)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec10.html#slide-11-some-considerations",
    "href": "fa24/lectures_qmd/lec10.html#slide-11-some-considerations",
    "title": "[Lec 10] Data 6 Fall 2024 - Joining and Row Methods",
    "section": "Slide 11: Some Considerations",
    "text": "Slide 11: Some Considerations"
  },
  {
    "objectID": "fa24/lectures_qmd/lec10.html#slide-12-followup",
    "href": "fa24/lectures_qmd/lec10.html#slide-12-followup",
    "title": "[Lec 10] Data 6 Fall 2024 - Joining and Row Methods",
    "section": "Slide 12: Followup",
    "text": "Slide 12: Followup\n\nBeware: joining won’t always give you the result you’re looking for.\nHere, it seems odd that we have multiple rows for Sandy with different regions. But that’s how join works!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec10.html#slide-13-disclaimer",
    "href": "fa24/lectures_qmd/lec10.html#slide-13-disclaimer",
    "title": "[Lec 10] Data 6 Fall 2024 - Joining and Row Methods",
    "section": "Slide 13: Disclaimer",
    "text": "Slide 13: Disclaimer\n\nPython doesn’t know what columns to join by – we need to tell it.\nIt doesn’t know that it makes sense to join two tables by area code if you don’t tell it to.\nYour role is important!\nIf you try and join on columns that have no shared elements, the result will be an empty table."
  },
  {
    "objectID": "fa24/lectures_qmd/lec10.html#slide-14-the-row-data-type",
    "href": "fa24/lectures_qmd/lec10.html#slide-14-the-row-data-type",
    "title": "[Lec 10] Data 6 Fall 2024 - Joining and Row Methods",
    "section": "Slide 14: The Row Data Type",
    "text": "Slide 14: The Row Data Type\n\n\nJoining\n\n\nDemo\n\n\nThe Row Data Type\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec10.html#slide-15-rows-vs.-columns",
    "href": "fa24/lectures_qmd/lec10.html#slide-15-rows-vs.-columns",
    "title": "[Lec 10] Data 6 Fall 2024 - Joining and Row Methods",
    "section": "Slide 15: Rows vs. Columns",
    "text": "Slide 15: Rows vs. Columns\n\nWe know that columns are stored as arrays.\nQuestion: Are rows stored as arrays too?\nAnswer: No – elements in arrays must all be of the same type, but each row can have multiple types of values.\nSo what are rows stored as, then?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec10.html#slide-16-t.rowindex",
    "href": "fa24/lectures_qmd/lec10.html#slide-16-t.rowindex",
    "title": "[Lec 10] Data 6 Fall 2024 - Joining and Row Methods",
    "section": "Slide 16: t.row(index)",
    "text": "Slide 16: t.row(index)\n\nThe method\nt.row(index)\nreturns the Row at the provided index.\nRows are not arrays!\nThey can have elements ofdifferent types.\nYou can use still use the .item method to get an element by index."
  },
  {
    "objectID": "fa24/lectures_qmd/lec10.html#slide-17-t.with_rows",
    "href": "fa24/lectures_qmd/lec10.html#slide-17-t.with_rows",
    "title": "[Lec 10] Data 6 Fall 2024 - Joining and Row Methods",
    "section": "Slide 17: t.with_row(s)",
    "text": "Slide 17: t.with_row(s)\n\nThe methods t.with_row(lst) returns a new table with an additional row.\nIf we want to add a single row to t, we call t.with_row(lst) where lst is a series of elements in square brackets [ and ].\nWe add rows far less frequently than we add columns, but these methods are still good to know.\nIn Python, lists are very similar to arrays, but can contain multiple data types"
  },
  {
    "objectID": "fa24/lectures_qmd/lec10.html#slide-18-in-conclusion",
    "href": "fa24/lectures_qmd/lec10.html#slide-18-in-conclusion",
    "title": "[Lec 10] Data 6 Fall 2024 - Joining and Row Methods",
    "section": "Slide 18: In Conclusion…",
    "text": "Slide 18: In Conclusion…"
  },
  {
    "objectID": "fa24/lectures_qmd/lec10.html#slide-19-summary",
    "href": "fa24/lectures_qmd/lec10.html#slide-19-summary",
    "title": "[Lec 10] Data 6 Fall 2024 - Joining and Row Methods",
    "section": "Slide 19: Summary",
    "text": "Slide 19: Summary"
  },
  {
    "objectID": "fa24/lectures_qmd/lec10.html#slide-20-recap",
    "href": "fa24/lectures_qmd/lec10.html#slide-20-recap",
    "title": "[Lec 10] Data 6 Fall 2024 - Joining and Row Methods",
    "section": "Slide 20: Recap",
    "text": "Slide 20: Recap\n\nWorking with Rows\nJoining Tables\nhttps://forms.gle/5uLP8MMnfSAHnxATA\nGroup, Pivot\nNext Time"
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html",
    "href": "fa24/lectures_qmd/lec01.html",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 01\nDefining data science and computational thinking, and discussing course learning objectives and logistics.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University\ndata6.org/fa24/syllabus/#acknowledgements-"
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-1-introduction",
    "href": "fa24/lectures_qmd/lec01.html#slide-1-introduction",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 01\nDefining data science and computational thinking, and discussing course learning objectives and logistics.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University\ndata6.org/fa24/syllabus/#acknowledgements-"
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-2-jedi-tsang",
    "href": "fa24/lectures_qmd/lec01.html#slide-2-jedi-tsang",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 2: Jedi Tsang",
    "text": "Slide 2: Jedi Tsang\n\nInstructor | jedidiahtsang@berkeley.edu\nPoli Sci + Computer Science ’23\nRecently graduated M.S. in EECS\nGoing down the teaching track!\nResearch: how we teach computing ethics (CS195)\n11th semester (!!) teaching at Cal, although the first few years of undergrad was very different from the last few years.\nInterests: Volleyball, Teamfight Tactics, Public Policy (particularly California campaign finance), and of course, computing education :)\ndata6.org/fa24/staff"
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-3-data-6-course-staff",
    "href": "fa24/lectures_qmd/lec01.html#slide-3-data-6-course-staff",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 3: Data 6 Course Staff",
    "text": "Slide 3: Data 6 Course Staff\n\nSu Min Park\nuGSI | m.suminpark@berkeley.edu\nhello hello:) I am a super senior from Seoul, South Korea studying Data Science and Sociology.\nElizabeth Feng\nTutor | elizabeth.feng@berkeley.edu\nHi everyone! I’m a sophomore majoring in Data Science from Oakland, CA.\nKenneth Llontop\nTutor | kennethllontop@berkeley.edu\nHey! I’m Kenneth, and I am a sophomore from LA studying EECS.\ndata6.org/fa24/staff\nIsabella Duong\nuGSI | isabella.duong@berkeley.edu\nhiii! im a junior studying Computer Science!\n\n\n\nSpeaker notes\n\n10:20"
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-4-getting-to-know-you",
    "href": "fa24/lectures_qmd/lec01.html#slide-4-getting-to-know-you",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 4: Getting to Know You",
    "text": "Slide 4: Getting to Know You\n\n\nSpeaker notes\n\n10:15"
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-5-some-questions-we-can-ask",
    "href": "fa24/lectures_qmd/lec01.html#slide-5-some-questions-we-can-ask",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 5: Some questions we can ask:",
    "text": "Slide 5: Some questions we can ask:\n\nWhat class year are you?\n\n1st years: 20\n2nd years: 6\n3rd year/1st year transfers: 6\n4th year/2nd year transfer: 5\nExtension students: 10\n\nWhat major are you?\n\nData Science - 3\nCS/EECS - 10\nCog Sci - 1\nMath - 6\nStats - 3\n\nDo you prefer cats, dogs, neither, or both?\n\nCats: 10\nDogs: 20\nNeither: 1\nBoth: 10"
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-6-sowe-just-created-some-data",
    "href": "fa24/lectures_qmd/lec01.html#slide-6-sowe-just-created-some-data",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 6: So…we just created some data!",
    "text": "Slide 6: So…we just created some data!\n\nUsing this information, what sort of questions might we ask about the data?\n…and how the heck do we find the answers to these questions?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-7-todays-roadmap",
    "href": "fa24/lectures_qmd/lec01.html#slide-7-todays-roadmap",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 7: Today’s Roadmap",
    "text": "Slide 7: Today’s Roadmap\n\nWhat is data science? What is computational thinking?\nWhat will you learn in this class?\nHow will this class be run?\nLecture 01, Data 6 Fall 2024"
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-8-what-is-data-science",
    "href": "fa24/lectures_qmd/lec01.html#slide-8-what-is-data-science",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 8: What is Data Science?",
    "text": "Slide 8: What is Data Science?\n\n\nWhat is data science?\n\n\nWhat will you learn in this class?\n\n\nHow will this class be run?\n\n\nFun demo\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-9-what-is-data-science",
    "href": "fa24/lectures_qmd/lec01.html#slide-9-what-is-data-science",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 9: What is data science?",
    "text": "Slide 9: What is data science?\n\nLearning about the world from data using computation\nLearning how to ask the “right” questions\n\nWhen we group data and analyze it, we bring a set of assumptions\nWhen we asked what our “major” is, made an assumption that people have a major\n\nUsing data to predict future outcomes"
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-10-creator-of-data-100",
    "href": "fa24/lectures_qmd/lec01.html#slide-10-creator-of-data-100",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 10: Creator of Data 100",
    "text": "Slide 10: Creator of Data 100\n\nCreator of Data 100\nJoey Gonzalez\n“Data Science is the application of data centric, computational, and inferential thinking to:\nUnderstand the world\nSolve problems”"
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-11-data-science-is-a-fundamentally-interdisciplinary-field",
    "href": "fa24/lectures_qmd/lec01.html#slide-11-data-science-is-a-fundamentally-interdisciplinary-field",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 11: Data science is a fundamentally interdisciplinary field",
    "text": "Slide 11: Data science is a fundamentally interdisciplinary field\n\nby Drew Conway in 2010 (link)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-12-data-6-version",
    "href": "fa24/lectures_qmd/lec01.html#slide-12-data-6-version",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 12: Data 6 Version",
    "text": "Slide 12: Data 6 Version\n\nStatistics and inference\nDomain knowledge and social contexts\nComputational Thinking\nDS\nMachine Learning\nEngineering\nResearch"
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-13-example-questions-in-data-science",
    "href": "fa24/lectures_qmd/lec01.html#slide-13-example-questions-in-data-science",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 13: Example Questions in Data Science",
    "text": "Slide 13: Example Questions in Data Science\n\nData science is all about asking questions and answering them with data.\nIs the world getting better or worse?\nIs the use of the COMPAS algorithm for prison sentencing fair?\nWhere should we put docking ports for our bikes?\nWhat should we eat to avoid dying early of heart disease?\nDo immigrants from poor countries have a positive or negative impact on the economy?\nWill there be a third? fourth? wave of COVID-19?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-14-computational-thinking",
    "href": "fa24/lectures_qmd/lec01.html#slide-14-computational-thinking",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 14: Computational Thinking",
    "text": "Slide 14: Computational Thinking\n\nCreator of WolframAlpha\nStephen Wolfram\n“Computational thinking is about formulating things with enough clarity, and in a systematic enough way, that one can tell a computer how to do them.”"
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-15-in-other-words",
    "href": "fa24/lectures_qmd/lec01.html#slide-15-in-other-words",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 15: In Other Words:",
    "text": "Slide 15: In Other Words:\n\nComputer science and computational thinking aren’t inherently about computers! They’re just tools.\nComputational thinking involves an element of creativity, as there are often many ways to solve a given problem.\n\n\n\nSpeaker notes\n\n10:20"
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-16-social-implications",
    "href": "fa24/lectures_qmd/lec01.html#slide-16-social-implications",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 16: Social Implications:",
    "text": "Slide 16: Social Implications:\nData science drives policy and public understanding"
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-17-social-implications",
    "href": "fa24/lectures_qmd/lec01.html#slide-17-social-implications",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 17: Social Implications:",
    "text": "Slide 17: Social Implications:\nUnconscious and implicit bias\n\nWhat do you notice? Why might this be happening?\nA “depixelizer” (link) was built that takes pixelated images and generates images that are perceptually realistic and downscale correctly."
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-18-content-and-learning-objectives",
    "href": "fa24/lectures_qmd/lec01.html#slide-18-content-and-learning-objectives",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 18: Content and Learning Objectives",
    "text": "Slide 18: Content and Learning Objectives\n\n\nWhat is data science?\n\n\nWhat will you learn in this class?\n\n\nHow will this class be run?\n\n\nFun demo\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-19-introduction-to-computational-thinking-with-data",
    "href": "fa24/lectures_qmd/lec01.html#slide-19-introduction-to-computational-thinking-with-data",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 19: Introduction to Computational Thinking with Data",
    "text": "Slide 19: Introduction to Computational Thinking with Data\n\nAs the title suggests, this class will teach you how to make computers to do interesting things involving data.\nIn order to tell our computers what to do, we will use the Python programming language.\nWhile at points it may feel like this is a class about Python, this class is really about teaching you how to solve problems, particularly those involving real-world data.\nAt the end of the semester, you will be strong computational thinkers, and will be able to apply the skills you’ve learned to projects of your own."
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-20-data-6-content",
    "href": "fa24/lectures_qmd/lec01.html#slide-20-data-6-content",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 20: Data 6 Content",
    "text": "Slide 20: Data 6 Content"
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-21-where-does-this-course-fit",
    "href": "fa24/lectures_qmd/lec01.html#slide-21-where-does-this-course-fit",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 21: Where does this course fit?",
    "text": "Slide 21: Where does this course fit?\n\nThere are many different ways to get started with data science and computer science, and each of them has their own purpose and benefits.\nData 6\nData 8\nCS 10\nCS 61A\nYou will leave this course with applicable skills that you can use even if you don’t take any future CS/DS courses."
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-22-course-logistics",
    "href": "fa24/lectures_qmd/lec01.html#slide-22-course-logistics",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 22: Course Logistics",
    "text": "Slide 22: Course Logistics\n\n\nWhat is data science?\n\n\nWhat will you learn in this class?\n\n\nHow will this class be run?\n\n\nFun demo\n\n➤\n\n\n\nSpeaker notes\n\n10:25"
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-23-technology",
    "href": "fa24/lectures_qmd/lec01.html#slide-23-technology",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 23: Technology",
    "text": "Slide 23: Technology\n\nWe will not be using bCourses at all (besides reading files)!\nCourse website (data6.org/fa24): where all content is posted.\n\nNo textbook! (all materials available online)\n\nEd (edstem.org): discussion forum where all announcements will be sent and where you will get help on assignments.\n\nQuestions about course material? Post here!\n\nDataHub (datahub.berkeley.edu): where you access all code. More on this soon!\nGradescope (gradescope.com): where you submit assignments and look at your grades. More next week!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-24-course-components",
    "href": "fa24/lectures_qmd/lec01.html#slide-24-course-components",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 24: Course components",
    "text": "Slide 24: Course components"
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-25-participation",
    "href": "fa24/lectures_qmd/lec01.html#slide-25-participation",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 25: Participation",
    "text": "Slide 25: Participation\n\nWeekly Surveys (2.5% of your overall grade)\nQuick Checks (2.5% of your overall grade)\nParticipation is worth 5% of your final grade. The Participation category consists of:"
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-26-quick-checks",
    "href": "fa24/lectures_qmd/lec01.html#slide-26-quick-checks",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 26: Quick Checks",
    "text": "Slide 26: Quick Checks\n\nDuring each lecture, there will be a few points at which we stop and ask you to answer a short question. We call these questions Quick Checks. They serve two purposes:\nFor us to gauge how well the class understands the material we’re currently covering\nFor you to gauge how well you understand the material we’re currently covering\nQuick Checks are graded on completion, not correctness! All you need to do is submit the QC for each lecture and you get credit. No drops and each quick check will be at some point in lecture."
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-27-labs",
    "href": "fa24/lectures_qmd/lec01.html#slide-27-labs",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 27: Labs",
    "text": "Slide 27: Labs\n\nYou learn data science by doing, not just by reading or listening. As such, a large component of your grade is labs!\nLabs will involve a mix of programming problems (graded by the computer) and written problems (for your edification).\nThere will be 13 labs (no lab on week 1 and 14)\nLabs will be released on Wednesday morning and will be due the same night.\n\nWe anticipate getting through most (if not all) of the lab during lecture\n24 hour grace period\nIf you need an extension email data6@berkeley.edu before the deadline\n\nWe will go over how to access and submit labs next Wednesday"
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-28-homeworks",
    "href": "fa24/lectures_qmd/lec01.html#slide-28-homeworks",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 28: Homeworks",
    "text": "Slide 28: Homeworks\n\nYou learn data science by doing, not just by reading or listening. As such, the biggest component of your grade is homeworks!\nHomeworks will involve a mix of programming problems (graded by the computer) and written problems (graded by course staff).\nThere will be four homeworks\nHomeworks will be released on Mondays and will be due the following Thursday at 11:00 PM.\n\nLate submissions: 30% off per day, max 2 days late.\nIf you need an extension email data6@berkeley.edu before the deadline\n\nWe will go over how to access and submit homeworks on Friday"
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-29-final-project",
    "href": "fa24/lectures_qmd/lec01.html#slide-29-final-project",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 29: Final Project",
    "text": "Slide 29: Final Project\n\nYou learn data science by doing, not just by reading or listening. As such, a final project gives you a chance to showcase what you have learned.\nThe final project will involve a mix of programming problems (computer graded), short written problems (graded by course staff), and a write-up (graded by course staff).\nWe will go over more details as well as how to access and submit the final project when it’s released."
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-30-readings",
    "href": "fa24/lectures_qmd/lec01.html#slide-30-readings",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 30: Readings",
    "text": "Slide 30: Readings\n\nYou learn data science by doing, not just by reading or listening. However, readings are important to expose you to a variety of viewpoints.\nReading assignments are meant to be reflective in nature and designed to complement the content covered each week in lecture with a focus on ethical and social issues.\nReadings will be released on Mondays and will be due the following Thursday at 11:00 PM.\n\nReadings should be completed in advance of discussion, so come prepared"
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-31-quizzes-and-exams",
    "href": "fa24/lectures_qmd/lec01.html#slide-31-quizzes-and-exams",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 31: Quizzes and Exams",
    "text": "Slide 31: Quizzes and Exams\n\nWe will have two quizzes that will take place during lecture time. Each quiz is worth 10% of your overall grade. Quizzes are intended to test your understanding of key concepts, but are not intended to ‘trick’ you.\nQuiz 1: Monday, 10/7\nQuiz 2: Friday, 11/15\nWe will also have a final exam, worth 20% of your overall grade. The final exam will take place on Friday, December 20th from 3-6 PM.\nWe’ll try to write a 90 minute exam instead of taking up the full 3 hours."
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-32-grading",
    "href": "fa24/lectures_qmd/lec01.html#slide-32-grading",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 32: Grading",
    "text": "Slide 32: Grading\n\nWe want you to focus on learning key data science concepts and enjoying the class (and your summer)! We don’t want you to have to stress about grades, so we’ve tried to structure assignments in a low-stakes way.\nIf you complete the assignments, participate in class, and keep up with the content, you’ll do fine. (We promise)\nYou can read more about our grading policy on the syllabus"
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-33-campus-resources",
    "href": "fa24/lectures_qmd/lec01.html#slide-33-campus-resources",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 33: Campus Resources",
    "text": "Slide 33: Campus Resources\n\nAccommodations\nEveryone learns differently, and supporting each student individually is part of our job as instructors. We will make every effort to accommodate students to ensure that you can learn safely and comfortably. To learn more about how to register with the campus Disabled Students Program (DSP), visit dsp.berkeley.edu\nWellness\nYour health and wellbeing is more important than anything, especially this course. We don’t want Data 6 to be a source of stress or anxiety, so please reach out to us if you are feeling overwhelmed by anything in the class.\nIf you or anyone you know is ever in need of mental health care, you should contact UHS Counseling and Psychological Services (CAPS).\nuhs.berkeley.edu/caps\nuhs.berkeley.edu/counseling/urgent"
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-34-advice-for-data-6",
    "href": "fa24/lectures_qmd/lec01.html#slide-34-advice-for-data-6",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 34: Advice for Data 6",
    "text": "Slide 34: Advice for Data 6\n\n\nSpeaker notes\n\n10:35"
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-35-pace",
    "href": "fa24/lectures_qmd/lec01.html#slide-35-pace",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 35: Pace",
    "text": "Slide 35: Pace\n\nEach lecture, we will introduce one new “tool” into your programming toolkit. Especially at the start, this will be challenging.\nWe will try and take things slow – we know that this is your first time programming.\nThere’s no rush – if you need us to slow down, please tell us! We want to make sure you really get it.\nBut also don’t worry if you don’t understand something on the ‘first try’. You will get a lot of practice through labs and homeworks as well."
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-36-advice-from-course-staff",
    "href": "fa24/lectures_qmd/lec01.html#slide-36-advice-from-course-staff",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 36: Advice from Course Staff",
    "text": "Slide 36: Advice from Course Staff\n\nDon’t be afraid to ask questions!\nCome to office hours!\nStart a study or homework group\nKeep up with the lectures\nTake breaks!\nUse the Python Reference"
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-37-you-can-do-this-period.",
    "href": "fa24/lectures_qmd/lec01.html#slide-37-you-can-do-this-period.",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 37: You can do this — period.",
    "text": "Slide 37: You can do this — period.\n\nWe are here to support you! data6.org/fa24/staff"
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-38-in-conclusion",
    "href": "fa24/lectures_qmd/lec01.html#slide-38-in-conclusion",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 38: In Conclusion…",
    "text": "Slide 38: In Conclusion…\n\n\nSpeaker notes\n\n10:50-10:55"
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-39-recap",
    "href": "fa24/lectures_qmd/lec01.html#slide-39-recap",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 39: Recap",
    "text": "Slide 39: Recap\n\nWhat is data science? What is computational thinking?\nWhat will you learn in this class?\nHow will this class be run?\nWhat is code?\nHow do we run code?\nArithmetic.\nRunning our first programs.\nComments, number types, and errors.\nNext Time"
  },
  {
    "objectID": "fa24/lectures_qmd/lec01.html#slide-40-week-1",
    "href": "fa24/lectures_qmd/lec01.html#slide-40-week-1",
    "title": "[Lec 01] Data 6 Fall 2024 - Introduction",
    "section": "Slide 40: Week 1",
    "text": "Slide 40: Week 1\n\nMake sure to fill out the welcome survey, posted on Ed tonight! Due by Tuesday, September 2nd at 11 PM\nMake an introductory post! Due by Tuesday, September 2nd at 11 PM\nQuick Checks start on Friday\n(Optional) Add songs to the collaborative playlist for pre-lecture vibes\n\nhttps://open.spotify.com/playlist/134DozgaTBxHXXta3fvydW?si=ad9e10b2e86d48d2&pt=fc545d61d6ebd5e6ce36910eabdc475a\n\nAnnouncements!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec03.html",
    "href": "fa24/lectures_qmd/lec03.html",
    "title": "[Lab01 Lec03] Data 6 Fall 2024 - Evaluation, Names, and Data Types",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 03\nAll about values: how to manipulate them, how to bind them, and what kinds exist.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd/lec03.html#slide-1-evaluation-names-data-types",
    "href": "fa24/lectures_qmd/lec03.html#slide-1-evaluation-names-data-types",
    "title": "[Lab01 Lec03] Data 6 Fall 2024 - Evaluation, Names, and Data Types",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 03\nAll about values: how to manipulate them, how to bind them, and what kinds exist.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd/lec03.html#slide-2-week-2",
    "href": "fa24/lectures_qmd/lec03.html#slide-2-week-2",
    "title": "[Lab01 Lec03] Data 6 Fall 2024 - Evaluation, Names, and Data Types",
    "section": "Slide 2: Week 2",
    "text": "Slide 2: Week 2\n\nWill be posted on EdStem from here on out!\nWeek 2 Announcements\nAnnouncements!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec03.html#slide-3-call-expressions",
    "href": "fa24/lectures_qmd/lec03.html#slide-3-call-expressions",
    "title": "[Lab01 Lec03] Data 6 Fall 2024 - Evaluation, Names, and Data Types",
    "section": "Slide 3: Call Expressions",
    "text": "Slide 3: Call Expressions\n\n\nCall Expressions\n\n\nNames and Assignment Statements\n\n\nConversion and Casting\n\n\nThe print() function\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec03.html#slide-4-call-expressions",
    "href": "fa24/lectures_qmd/lec03.html#slide-4-call-expressions",
    "title": "[Lab01 Lec03] Data 6 Fall 2024 - Evaluation, Names, and Data Types",
    "section": "Slide 4: Call Expressions",
    "text": "Slide 4: Call Expressions\n\nCall expressions in Python apply a function to some arguments.\nAlso called function calls.\nTo evaluate a function call in Python:\nEvaluate the operands (what is passed into the function), to determine the arguments.\n\nIn the first example, the arguments to max are 2 and 3.\nIn the second example, the arguments to max are 4 and 1.\n\nCall the function on the arguments.\nmax(2, 3) # Evaluates to 3\nmax(4, min(1, 9)) # Evaluates to 4\n-abs(max(4, 5, -1)) # Evaluates to -5"
  },
  {
    "objectID": "fa24/lectures_qmd/lec03.html#slide-5-notes-on-functions",
    "href": "fa24/lectures_qmd/lec03.html#slide-5-notes-on-functions",
    "title": "[Lab01 Lec03] Data 6 Fall 2024 - Evaluation, Names, and Data Types",
    "section": "Slide 5: Notes on Functions",
    "text": "Slide 5: Notes on Functions\n\nWe’ve seen a few functions so far: abs, max, min.\nThere are many functions built-in to Python, but sometimes we need to use functions that Python doesn’t already know about.\nWe can use import statements; we’ll learn about this in a few weeks.\nWe’ll also write our own functions!!! …in a few weeks.\nSide note: +, -, *, / and the other arithmetic operators we saw last lecture are also functions; you’ll learn how to implement these in a future class."
  },
  {
    "objectID": "fa24/lectures_qmd/lec03.html#slide-6-names-and-assignment-statements",
    "href": "fa24/lectures_qmd/lec03.html#slide-6-names-and-assignment-statements",
    "title": "[Lab01 Lec03] Data 6 Fall 2024 - Evaluation, Names, and Data Types",
    "section": "Slide 6: Names and Assignment Statements",
    "text": "Slide 6: Names and Assignment Statements\n\n\nCall Expressions\n\n\nNames and Assignment Statements\n\n\nConversion and Casting\n\n\nThe print() function\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec03.html#slide-7-storing-values-by-assigning-names",
    "href": "fa24/lectures_qmd/lec03.html#slide-7-storing-values-by-assigning-names",
    "title": "[Lab01 Lec03] Data 6 Fall 2024 - Evaluation, Names, and Data Types",
    "section": "Slide 7: “Storing” Values by Assigning Names",
    "text": "Slide 7: “Storing” Values by Assigning Names\n\nSo far we’ve seen how Python evaluates expressions into values:\nexpression\nvalue"
  },
  {
    "objectID": "fa24/lectures_qmd/lec03.html#slide-8-storing-values-by-assigning-names",
    "href": "fa24/lectures_qmd/lec03.html#slide-8-storing-values-by-assigning-names",
    "title": "[Lab01 Lec03] Data 6 Fall 2024 - Evaluation, Names, and Data Types",
    "section": "Slide 8: “Storing” Values by Assigning Names",
    "text": "Slide 8: “Storing” Values by Assigning Names\n\nThis is called an assignment statement.\nSo far we’ve seen how Python evaluates expressions into values:\nexpression\nvalue\nA critical aspect of a programming language is its ability to “store” and “retrieve” values.\nIn Python, storage and retrieval of values is done by bindingnames to values with the assignment operator (=).\n3\nx\nx = 3"
  },
  {
    "objectID": "fa24/lectures_qmd/lec03.html#slide-9-assignment-statements",
    "href": "fa24/lectures_qmd/lec03.html#slide-9-assignment-statements",
    "title": "[Lab01 Lec03] Data 6 Fall 2024 - Evaluation, Names, and Data Types",
    "section": "Slide 9: Assignment Statements",
    "text": "Slide 9: Assignment Statements\n\nx = 3\n*no animals were harmed in the making of these vinyl suitcases\nname\nvalue\nassignment\n\n\n\nSpeaker notes\n\nGoogle: python suitcase for images Python paradigm uses names and values You may hear the word variable used in other computing contexts, but we have a specific definition of variable in this class that we’ll come to in a few lectures"
  },
  {
    "objectID": "fa24/lectures_qmd/lec03.html#slide-10-assignment-statements",
    "href": "fa24/lectures_qmd/lec03.html#slide-10-assignment-statements",
    "title": "[Lab01 Lec03] Data 6 Fall 2024 - Evaluation, Names, and Data Types",
    "section": "Slide 10: Assignment Statements",
    "text": "Slide 10: Assignment Statements\n\nx\n3\nx = 3\nLike a suitcase tag, the name xis bound to the value 3.\n*no animals were harmed in the making of these vinyl suitcases\n3\nx\nname\nvalue\nanalogy\nassignment\n\n\n\nSpeaker notes\n\nGoogle: python suitcase for images Python paradigm uses names and values You may hear the word variable used in other computing contexts, but we have a specific definition of variable in this class that we’ll come to in a few lectures"
  },
  {
    "objectID": "fa24/lectures_qmd/lec03.html#slide-11-assignment-statements",
    "href": "fa24/lectures_qmd/lec03.html#slide-11-assignment-statements",
    "title": "[Lab01 Lec03] Data 6 Fall 2024 - Evaluation, Names, and Data Types",
    "section": "Slide 11: Assignment Statements",
    "text": "Slide 11: Assignment Statements\n\nx = 3\nLike a suitcase tag, the name xis bound to the value 3.\n*no animals were harmed in the making of these vinyl suitcases\nname\nvalue\nassignment\nx = 1 + 2 * 3 - 4 // 5\nPython first evaluates the right hand expression, then binds the name x to the resulting value.\n\n\n\nSpeaker notes\n\nGoogle: python suitcase for images Python paradigm uses names and values You may hear the word variable used in other computing contexts, but we have a specific definition of variable in this class that we’ll come to in a few lectures"
  },
  {
    "objectID": "fa24/lectures_qmd/lec03.html#slide-12-assignment-statements",
    "href": "fa24/lectures_qmd/lec03.html#slide-12-assignment-statements",
    "title": "[Lab01 Lec03] Data 6 Fall 2024 - Evaluation, Names, and Data Types",
    "section": "Slide 12: Assignment Statements",
    "text": "Slide 12: Assignment Statements\n\nx = 3\nLike a suitcase tag, the name xis bound to the value 3.\n*no animals were harmed in the making of these vinyl suitcases\nname\nvalue\nassignment\nx = 1 + 2 * 3 - 4 // 5\nPython first evaluates the right hand expression, then binds the name x to the resulting value.\nAssignment statements do not return anything. They just bind a name to a value.\n\n\n\nSpeaker notes\n\nGoogle: python suitcase for images Python paradigm uses names and values You may hear the word variable used in other computing contexts, but we have a specific definition of variable in this class that we’ll come to in a few lectures"
  },
  {
    "objectID": "fa24/lectures_qmd/lec03.html#slide-13-naming",
    "href": "fa24/lectures_qmd/lec03.html#slide-13-naming",
    "title": "[Lab01 Lec03] Data 6 Fall 2024 - Evaluation, Names, and Data Types",
    "section": "Slide 13: Naming",
    "text": "Slide 13: Naming\n\nThere are some rules on names.\nThey can contain uppercase and lowercase letters, the digits 0-9, and underscores.\n\nAllowed: how_are_you, my_AGE_is_21, NETFLIXPASSWORD\nNot allowed: HOW-ARE-YOU, ily!, AG&*OED\n\nThey cannot start with a number.\n\nAllowed: my_AGE_is_21, _21_is_my_AGE\nNot allowed: 21_is_my_AGE\n\nThey are case sensitive!\n\nAll different: Dog, DOG, dog, dOG"
  },
  {
    "objectID": "fa24/lectures_qmd/lec03.html#slide-14-naming",
    "href": "fa24/lectures_qmd/lec03.html#slide-14-naming",
    "title": "[Lab01 Lec03] Data 6 Fall 2024 - Evaluation, Names, and Data Types",
    "section": "Slide 14: Naming",
    "text": "Slide 14: Naming\n\nThere are some rules on names.\nThey can contain uppercase and lowercase letters, the digits 0-9, and underscores.\n\nAllowed: how_are_you, my_AGE_is_21, NETFLIXPASSWORD\nNot allowed: HOW-ARE-YOU, ily!, AG&*OED\n\nThey cannot start with a number.\n\nAllowed: my_AGE_is_21, _21_is_my_AGE\nNot allowed: 21_is_my_AGE\n\nThey are case sensitive!\n\nAll different: Dog, DOG, dog, dOG\n\n# Good\nseconds_per_hour = 60 * 60\nhours_per_year = 24 * 365\nseconds_per_year = seconds_per_hour * hours_per_year\n# Not good\ni_love_chocolate = 60 * 60 * 24 * 365\nChoose names that are concise but descriptive."
  },
  {
    "objectID": "fa24/lectures_qmd/lec03.html#slide-15-conversion-and-casting",
    "href": "fa24/lectures_qmd/lec03.html#slide-15-conversion-and-casting",
    "title": "[Lab01 Lec03] Data 6 Fall 2024 - Evaluation, Names, and Data Types",
    "section": "Slide 15: Conversion and Casting",
    "text": "Slide 15: Conversion and Casting\n\n\nCall Expressions\n\n\nNames and Assignment Statements\n\n\nConversion and Casting\n\n\nThe print() function\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec03.html#slide-16-typecasting",
    "href": "fa24/lectures_qmd/lec03.html#slide-16-typecasting",
    "title": "[Lab01 Lec03] Data 6 Fall 2024 - Evaluation, Names, and Data Types",
    "section": "Slide 16: Typecasting",
    "text": "Slide 16: Typecasting\n\nWe can also typecast, or convert values between data types. Note that data type conversion is only valid “when it makes sense.”\nint(x) # Returns x as an integer\nfloat(x) # Returns x as a float"
  },
  {
    "objectID": "fa24/lectures_qmd/lec03.html#slide-17-recap",
    "href": "fa24/lectures_qmd/lec03.html#slide-17-recap",
    "title": "[Lab01 Lec03] Data 6 Fall 2024 - Evaluation, Names, and Data Types",
    "section": "Slide 17: Recap",
    "text": "Slide 17: Recap\n\nCall Expressions\nNames and Assignment Statements\nConversion and Casting\nNoneType\nStrings\nCasting with Strings\nprint()\nArrays\nVariables in Data Science\nNext Time"
  },
  {
    "objectID": "fa24/lectures_qmd/lec16.html",
    "href": "fa24/lectures_qmd/lec16.html",
    "title": "[Lec 16] Data 6 Fall 2024 - Bickel Case Study",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 16\nSimpson’s paradox explained through visualization.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University\ndata6.org/fa24/syllabus/#acknowledgements-"
  },
  {
    "objectID": "fa24/lectures_qmd/lec16.html#slide-1-bickel-case-study",
    "href": "fa24/lectures_qmd/lec16.html#slide-1-bickel-case-study",
    "title": "[Lec 16] Data 6 Fall 2024 - Bickel Case Study",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 16\nSimpson’s paradox explained through visualization.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University\ndata6.org/fa24/syllabus/#acknowledgements-"
  },
  {
    "objectID": "fa24/lectures_qmd/lec16.html#slide-2",
    "href": "fa24/lectures_qmd/lec16.html#slide-2",
    "title": "[Lec 16] Data 6 Fall 2024 - Bickel Case Study",
    "section": "Slide 2: ‹#›",
    "text": "Slide 2: ‹#›"
  },
  {
    "objectID": "fa24/lectures_qmd/lec16.html#slide-3-week-9",
    "href": "fa24/lectures_qmd/lec16.html#slide-3-week-9",
    "title": "[Lec 16] Data 6 Fall 2024 - Bickel Case Study",
    "section": "Slide 3: Week 9",
    "text": "Slide 3: Week 9\n\nHomework 3 released tonight\nReading assignment 4 released tonight\nAnnouncements!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec16.html#slide-4-todays-roadmap",
    "href": "fa24/lectures_qmd/lec16.html#slide-4-todays-roadmap",
    "title": "[Lec 16] Data 6 Fall 2024 - Bickel Case Study",
    "section": "Slide 4: Today’s Roadmap",
    "text": "Slide 4: Today’s Roadmap\n\nWrap up numerical variables & multiple variables\n1973 UC Berkeley Graduate Admissions\nSimpson’s Paradox\nLecture 16, Data 6 Fall 2024"
  },
  {
    "objectID": "fa24/lectures_qmd/lec16.html#slide-5-practice",
    "href": "fa24/lectures_qmd/lec16.html#slide-5-practice",
    "title": "[Lec 16] Data 6 Fall 2024 - Bickel Case Study",
    "section": "Slide 5: Practice",
    "text": "Slide 5: Practice\n\n1973 UC Berkeley Graduate Admissions\nSimpson’s Paradox\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec16.html#slide-6-table-table.with_columnsnames-make_arrayalbert-albert-ben-ben-ben",
    "href": "fa24/lectures_qmd/lec16.html#slide-6-table-table.with_columnsnames-make_arrayalbert-albert-ben-ben-ben",
    "title": "[Lec 16] Data 6 Fall 2024 - Bickel Case Study",
    "section": "Slide 6: table = Table().with_columns(“Names”, make_array(“Albert”, “Albert”, “Ben”, “Ben”, “Ben”),",
    "text": "Slide 6: table = Table().with_columns(“Names”, make_array(“Albert”, “Albert”, “Ben”, “Ben”, “Ben”),\n                        \"Mile Time\", make\\_array(8.1, 8.1, 9, 9, 7),\n                        \"Average Heart Rate\", make\\_array(120, 150, 140, 180, 190),\n                        \"Date\", make\\_array(\"1/1/24\", \"1/2/24\", \"1/1/24\", \"1/2/24\", \"1/2/24\"))"
  },
  {
    "objectID": "fa24/lectures_qmd/lec16.html#slide-7",
    "href": "fa24/lectures_qmd/lec16.html#slide-7",
    "title": "[Lec 16] Data 6 Fall 2024 - Bickel Case Study",
    "section": "Slide 7: ‹#›",
    "text": "Slide 7: ‹#›"
  },
  {
    "objectID": "fa24/lectures_qmd/lec16.html#slide-8-write-an-expression-that-evaluates-to-alberts-the-maximum-heart-rate-across-all-his-runs.",
    "href": "fa24/lectures_qmd/lec16.html#slide-8-write-an-expression-that-evaluates-to-alberts-the-maximum-heart-rate-across-all-his-runs.",
    "title": "[Lec 16] Data 6 Fall 2024 - Bickel Case Study",
    "section": "Slide 8: Write an expression that evaluates to Albert’s the maximum heart rate across all his runs.",
    "text": "Slide 8: Write an expression that evaluates to Albert’s the maximum heart rate across all his runs.\n\n150\n\n\n\nSpeaker notes\n\nmax(table.where(“Names”, “Albert”).column(“Average Heart Rate”))"
  },
  {
    "objectID": "fa24/lectures_qmd/lec16.html#slide-9-write-an-expression-that-gives-us-a-count-of-the-number-of-times-that-albert-and-ben-went-on-a-run.",
    "href": "fa24/lectures_qmd/lec16.html#slide-9-write-an-expression-that-gives-us-a-count-of-the-number-of-times-that-albert-and-ben-went-on-a-run.",
    "title": "[Lec 16] Data 6 Fall 2024 - Bickel Case Study",
    "section": "Slide 9: Write an expression that gives us a count of the number of times that Albert and Ben went on a run.",
    "text": "Slide 9: Write an expression that gives us a count of the number of times that Albert and Ben went on a run.\n\n\nSpeaker notes\n\nmax(table.where(“Names”, “Albert”).column(“Average Heart Rate”))"
  },
  {
    "objectID": "fa24/lectures_qmd/lec16.html#slide-10-plot-it",
    "href": "fa24/lectures_qmd/lec16.html#slide-10-plot-it",
    "title": "[Lec 16] Data 6 Fall 2024 - Bickel Case Study",
    "section": "Slide 10: Plot it!",
    "text": "Slide 10: Plot it!\n\n←grouped_table"
  },
  {
    "objectID": "fa24/lectures_qmd/lec16.html#slide-11-write-an-expression-that-shows-the-minimum-heart-rate-for-each-runner-across-each-date.",
    "href": "fa24/lectures_qmd/lec16.html#slide-11-write-an-expression-that-shows-the-minimum-heart-rate-for-each-runner-across-each-date.",
    "title": "[Lec 16] Data 6 Fall 2024 - Bickel Case Study",
    "section": "Slide 11: Write an expression that shows the minimum heart rate for each runner across each date.",
    "text": "Slide 11: Write an expression that shows the minimum heart rate for each runner across each date.\n\n\nSpeaker notes\n\nmax(table.where(“Names”, “Albert”).column(“Average Heart Rate”))"
  },
  {
    "objectID": "fa24/lectures_qmd/lec16.html#slide-12-generate-this-histogram",
    "href": "fa24/lectures_qmd/lec16.html#slide-12-generate-this-histogram",
    "title": "[Lec 16] Data 6 Fall 2024 - Bickel Case Study",
    "section": "Slide 12: Generate this histogram:",
    "text": "Slide 12: Generate this histogram:\np.s. The x axis goes until 13.5 (inclusive)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec16.html#slide-13-1973-uc-berkeley-graduate-admissions",
    "href": "fa24/lectures_qmd/lec16.html#slide-13-1973-uc-berkeley-graduate-admissions",
    "title": "[Lec 16] Data 6 Fall 2024 - Bickel Case Study",
    "section": "Slide 13: 1973 UC Berkeley Graduate Admissions",
    "text": "Slide 13: 1973 UC Berkeley Graduate Admissions\n\n1973 UC Berkeley Graduate Admissions\nSimpson’s Paradox\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec16.html#slide-14-uc-berkeley-fall-1973",
    "href": "fa24/lectures_qmd/lec16.html#slide-14-uc-berkeley-fall-1973",
    "title": "[Lec 16] Data 6 Fall 2024 - Bickel Case Study",
    "section": "Slide 14: UC Berkeley, Fall 1973",
    "text": "Slide 14: UC Berkeley, Fall 1973\n\nUC Berkeley graduate admissions data from the Fall of 1973.\nAdmissions data disaggregated by the six largest departments, labeled A through F.\nFreedman, Pisani, and Purves. “Sex Bias in Graduate Admissions.” Statistics (1978) Chapter 2. pp. 17-20.\nBickel, Hammel, and O’Connell. “Sex Bias in Graduate Admissions:” Data from Berkeley“ Science vol. 187 (1975) pp. 398-404.\nWikipedia [link]\nGreater percentage of successful applicantsthan the other listed gender\nGreater number of applicants than the other listed gender"
  },
  {
    "objectID": "fa24/lectures_qmd/lec16.html#slide-15-data-talk",
    "href": "fa24/lectures_qmd/lec16.html#slide-15-data-talk",
    "title": "[Lec 16] Data 6 Fall 2024 - Bickel Case Study",
    "section": "Slide 15: Data Talk",
    "text": "Slide 15: Data Talk\n\nWhat do you notice?\nWhat do you wonder?\nWhat story does this tell, especially about the community this data may impact?\nWhat narratives/information are we missing?\nFreedman, Pisani, and Purves. “Sex Bias in Graduate Admissions.” Statistics (1978) Chapter 2. pp. 17-20.\nBickel, Hammel, and O’Connell. “Sex Bias in Graduate Admissions:” Data from Berkeley“ Science vol. 187 (1975) pp. 398-404.\nWikipedia [link]\nGreater percentage of successful applicantsthan the other listed gender\nGreater number of applicants than the other listed gender"
  },
  {
    "objectID": "fa24/lectures_qmd/lec16.html#slide-16-gender-ratio",
    "href": "fa24/lectures_qmd/lec16.html#slide-16-gender-ratio",
    "title": "[Lec 16] Data 6 Fall 2024 - Bickel Case Study",
    "section": "Slide 16: Gender Ratio?",
    "text": "Slide 16: Gender Ratio?\n\nWhat does this data not present or represent?\nIn late 2020, the University of California began providing at minimum three equally recognized gender options to both students and employees: male, female, and nonbinary. [link]\nFreedman, Pisani, and Purves. “Sex Bias in Graduate Admissions.” Statistics (1978) Chapter 2. pp. 17-20.\nBickel, Hammel, and O’Connell. “Sex Bias in Graduate Admissions:” Data from Berkeley“ Science vol. 187 (1975) pp. 398-404.\nWikipedia [link]\nGreater percentage of successful applicantsthan the other listed gender\nGreater number of applicants than the other listed gender"
  },
  {
    "objectID": "fa24/lectures_qmd/lec16.html#slide-17-simpsons-paradox",
    "href": "fa24/lectures_qmd/lec16.html#slide-17-simpsons-paradox",
    "title": "[Lec 16] Data 6 Fall 2024 - Bickel Case Study",
    "section": "Slide 17: Simpson’s Paradox",
    "text": "Slide 17: Simpson’s Paradox\n\n➤\n1973 UC Berkeley Graduate Admissions\nSimpson’s Paradox"
  },
  {
    "objectID": "fa24/lectures_qmd/lec16.html#slide-18-simpsons-paradox",
    "href": "fa24/lectures_qmd/lec16.html#slide-18-simpsons-paradox",
    "title": "[Lec 16] Data 6 Fall 2024 - Bickel Case Study",
    "section": "Slide 18: Simpson’s Paradox",
    "text": "Slide 18: Simpson’s Paradox\n\nSimpson’s paradox is a phenomenon where a trend appears to go one way in data, but when disaggregated into groups the trend appears to reverse direction or disappear.\nSimpson’s paradox involves at least three variables:\nThe observed outcome variable\nThe observed explanatory variable\nThe lurking (or confounding) explanatory variable\n(less of a paradox; more of a lesson to analyze not just the whole, but also the parts)\nWikipedia [link]"
  },
  {
    "objectID": "fa24/lectures_qmd/lec16.html#slide-19-simpsons-paradox-example",
    "href": "fa24/lectures_qmd/lec16.html#slide-19-simpsons-paradox-example",
    "title": "[Lec 16] Data 6 Fall 2024 - Bickel Case Study",
    "section": "Slide 19: Simpson’s Paradox: Example",
    "text": "Slide 19: Simpson’s Paradox: Example\n\nWhen taken as a whole, women seem to have a lower admission rate than men.\nFreedman, Pisani, and Purves. “Sex Bias in Graduate Admissions.” Statistics (1978) Chapter 2. pp. 17-20.\nBickel, Hammel, and O’Connell. “Sex Bias in Graduate Admissions:” Data from Berkeley“ Science vol. 187 (1975) pp. 398-404.\nWikipedia [link]\nWhen split by departments, women actually have a higher admission rate than men in many different departments (4 of the largest 6).\nGreater percentage of successful applicantsthan the other listed gender\nGreater number of applicants than the other listed gender"
  },
  {
    "objectID": "fa24/lectures_qmd/lec16.html#slide-20-simpsons-paradox-visualized",
    "href": "fa24/lectures_qmd/lec16.html#slide-20-simpsons-paradox-visualized",
    "title": "[Lec 16] Data 6 Fall 2024 - Bickel Case Study",
    "section": "Slide 20: Simpson’s Paradox: Visualized",
    "text": "Slide 20: Simpson’s Paradox: Visualized\n\nWhen taken as a whole, women seem to have a lower admission rate than men.\nFreedman, Pisani, and Purves. “Sex Bias in Graduate Admissions.” Statistics (1978) Chapter 2. pp. 17-20.\nBickel, Hammel, and O’Connell. “Sex Bias in Graduate Admissions:” Data from Berkeley“ Science vol. 187 (1975) pp. 398-404.\nWikipedia [link]\nWhen split by departments, women actually have a higher admission rate than men in many different departments (4 of the largest 6).\nhttps://setosa.io/simpsons/\n\n\n\nSpeaker notes\n\nNOTE: to get rid of unprofessional caption on a website, once you open the URL then right-click, hit “Inspect”, then double-click/edit to remove the offensive text."
  },
  {
    "objectID": "fa24/lectures_qmd/lec16.html#slide-21-unpacking-visualizations",
    "href": "fa24/lectures_qmd/lec16.html#slide-21-unpacking-visualizations",
    "title": "[Lec 16] Data 6 Fall 2024 - Bickel Case Study",
    "section": "Slide 21: Unpacking Visualizations",
    "text": "Slide 21: Unpacking Visualizations\n\nFigure 1 from the original paper in 1973.\nHow many variables are being shown in this figure? What are they?\nThe diagonal line drawn in this figure is a regression line to help visualize a trend (more in Data 8). What trend is the line trying to show?\nBickel, Hammel, and O’Connell. “Sex Bias in Graduate Admissions:” Data from Berkeley“ Science vol. 187 (1975) pp. 398-404."
  },
  {
    "objectID": "fa24/lectures_qmd/lec16.html#slide-22-original-study-bickel-et-al.",
    "href": "fa24/lectures_qmd/lec16.html#slide-22-original-study-bickel-et-al.",
    "title": "[Lec 16] Data 6 Fall 2024 - Bickel Case Study",
    "section": "Slide 22: Original Study (Bickel et al.)",
    "text": "Slide 22: Original Study (Bickel et al.)\n\nThis study is one of the classic instances of Simpson’s paradox. Bickel et al. further suggest that researching whether bias or discrimination occurs is nuanced and often misleading.\nAssumption 1 is broken through social claims—that sexism occurs before admissions:\n“Women are shunted by their socialization and education toward fields of graduate study that are generally more crowded, less productive of completed degrees, and less well funded, and that frequently offer poorer professional employment prospects.”\nThe study explores and undermines two assumptions that the admissions process is biased:\nMale and female applicants have the same skills and qualifications for graduate school.\nThe # of male and female applicants do not vary based on the specific field of study.\nGiven both assumptions, our initial takeaway is that the admissions process is biased.\nAssumption 2 is broken by showing that when disaggregated by field of study, Simpson’s paradox appears.\nBickel, Hammel, and O’Connell. “Sex Bias in Graduate Admissions:” Data from Berkeley“ Science vol. 187 (1975) pp. 398-404."
  },
  {
    "objectID": "fa24/lectures_qmd/lec16.html#slide-23-recap",
    "href": "fa24/lectures_qmd/lec16.html#slide-23-recap",
    "title": "[Lec 16] Data 6 Fall 2024 - Bickel Case Study",
    "section": "Slide 23: Recap",
    "text": "Slide 23: Recap\n\n1973 UC Berkeley Graduate Admissions\nSimpson’s Paradox\nhttps://docs.google.com/forms/d/e/1FAIpQLSeQHliacz6dmHKtXHMZfe2WYeP4gclfLl4LpBZD81YxKYcmHA/viewform?usp=sf_link\nQuick Check\nQuiz 1\nSorting and Filtering Rows\nNext Time"
  },
  {
    "objectID": "fa24/lectures_qmd/lec26.html",
    "href": "fa24/lectures_qmd/lec26.html",
    "title": "[Lec 26] Data 6 Fall 2024 - Conclusion",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 26\nThe end of Data 6 🥲\nDeveloped by students and faculty at UC Berkeley and Tuskegee University\ndata6.org/fa24/syllabus/#acknowledgements-"
  },
  {
    "objectID": "fa24/lectures_qmd/lec26.html#slide-1-conclusion",
    "href": "fa24/lectures_qmd/lec26.html#slide-1-conclusion",
    "title": "[Lec 26] Data 6 Fall 2024 - Conclusion",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 26\nThe end of Data 6 🥲\nDeveloped by students and faculty at UC Berkeley and Tuskegee University\ndata6.org/fa24/syllabus/#acknowledgements-"
  },
  {
    "objectID": "fa24/lectures_qmd/lec26.html#slide-2-todays-roadmap",
    "href": "fa24/lectures_qmd/lec26.html#slide-2-todays-roadmap",
    "title": "[Lec 26] Data 6 Fall 2024 - Conclusion",
    "section": "Slide 2: Today’s Roadmap",
    "text": "Slide 2: Today’s Roadmap\n\nFinal Exam Logistics\nWhat You Learned\nWhere To Go From Here\nStaff Ask Us Anything\nLecture 26, Data 6 Fall 2024"
  },
  {
    "objectID": "fa24/lectures_qmd/lec26.html#slide-3-extra-credit---you-need-80",
    "href": "fa24/lectures_qmd/lec26.html#slide-3-extra-credit---you-need-80",
    "title": "[Lec 26] Data 6 Fall 2024 - Conclusion",
    "section": "Slide 3: Extra Credit - you need 80%!",
    "text": "Slide 3: Extra Credit - you need 80%!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec26.html#slide-4-announcements",
    "href": "fa24/lectures_qmd/lec26.html#slide-4-announcements",
    "title": "[Lec 26] Data 6 Fall 2024 - Conclusion",
    "section": "Slide 4: Announcements",
    "text": "Slide 4: Announcements\n\nOffice Hours\n\nMonday 3-5 PM @ Memorial Glade w/snacks\nThursday 12-2 @ Soda 781\nFriday 2-4 @ Moffit 503\n\nReview Session (Mostly practice rather than teaching)\n\nWeeks 1-9: Tuesday 5-7 PM online\nWeeks 10-15: TBD online\n\nFinal Survey\n\nSeparate from course evals, worth participation credit"
  },
  {
    "objectID": "fa24/lectures_qmd/lec26.html#slide-5-stickers-you-will-receive-them-at-the-final-exam",
    "href": "fa24/lectures_qmd/lec26.html#slide-5-stickers-you-will-receive-them-at-the-final-exam",
    "title": "[Lec 26] Data 6 Fall 2024 - Conclusion",
    "section": "Slide 5: Stickers (you will receive them at the final exam)",
    "text": "Slide 5: Stickers (you will receive them at the final exam)\n\n\nFinal Exam Logistics\n\n\nWhat You Learned\n\n\nWhere To Go From Here\n\n\nStaff Ask Us Anything\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec26.html#slide-6-final-exam-logistics",
    "href": "fa24/lectures_qmd/lec26.html#slide-6-final-exam-logistics",
    "title": "[Lec 26] Data 6 Fall 2024 - Conclusion",
    "section": "Slide 6: Final Exam Logistics",
    "text": "Slide 6: Final Exam Logistics\n\n\nFinal Exam Logistics\n\n\nWhat You Learned\n\n\nWhere To Go From Here\n\n\nStaff Ask Us Anything\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec26.html#slide-7-final-exam-logistics",
    "href": "fa24/lectures_qmd/lec26.html#slide-7-final-exam-logistics",
    "title": "[Lec 26] Data 6 Fall 2024 - Conclusion",
    "section": "Slide 7: Final Exam Logistics",
    "text": "Slide 7: Final Exam Logistics\n\nThe main final exam will take place on Friday, December 20th at 3 PM in Wheeler 222\nThe exam will last 1 hour and 50 minutes (2 hours 45 minutes for 150% time)\nWhat to Bring\nPencils or pens\nCal1 Card (for Student ID #)\nWe will provide printed cheat sheets\nYou can bring two front and back sides of a cheat sheet if you’d like\nWhat to Expect\nSimilar structure to Quiz 1 and Quiz 2, but twice as long\nCovers all content minus readings (plus Guest Lecture)\nMix of multiple choice, true/false, short answer, and coding questions"
  },
  {
    "objectID": "fa24/lectures_qmd/lec26.html#slide-8-what-did-you-learn",
    "href": "fa24/lectures_qmd/lec26.html#slide-8-what-did-you-learn",
    "title": "[Lec 26] Data 6 Fall 2024 - Conclusion",
    "section": "Slide 8: What Did You Learn?",
    "text": "Slide 8: What Did You Learn?\n\n\nFinal Exam Logistics\n\n\nWhat You Learned\n\n\nWhere To Go From Here\n\n\nStaff Ask Us Anything\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec26.html#slide-9-httpstinyurl.comdata6last",
    "href": "fa24/lectures_qmd/lec26.html#slide-9-httpstinyurl.comdata6last",
    "title": "[Lec 26] Data 6 Fall 2024 - Conclusion",
    "section": "Slide 9: https://tinyurl.com/data6last",
    "text": "Slide 9: https://tinyurl.com/data6last"
  },
  {
    "objectID": "fa24/lectures_qmd/lec26.html#slide-10-big-ideas",
    "href": "fa24/lectures_qmd/lec26.html#slide-10-big-ideas",
    "title": "[Lec 26] Data 6 Fall 2024 - Conclusion",
    "section": "Slide 10: Big Ideas",
    "text": "Slide 10: Big Ideas"
  },
  {
    "objectID": "fa24/lectures_qmd/lec26.html#slide-11",
    "href": "fa24/lectures_qmd/lec26.html#slide-11",
    "title": "[Lec 26] Data 6 Fall 2024 - Conclusion",
    "section": "Slide 11: ‹#›",
    "text": "Slide 11: ‹#›\n\nStatistics and inference\nDomain knowledge and social contexts\nComputational Thinking\nDS\nMachine Learning\nEngineering\nResearch\nWhere we spent most of our time.\nVisualization and simulations.\nSocial science discussions."
  },
  {
    "objectID": "fa24/lectures_qmd/lec26.html#slide-12-data-6-modules",
    "href": "fa24/lectures_qmd/lec26.html#slide-12-data-6-modules",
    "title": "[Lec 26] Data 6 Fall 2024 - Conclusion",
    "section": "Slide 12: Data 6 “Modules”",
    "text": "Slide 12: Data 6 “Modules”\n\nModule 1\nIntroduction to Python and Jupyter Notebooks\nModule 2\nData Visualization\nModule 3\nWorking with Tables\nModule 4\nSimulation, Randomness, LLMs"
  },
  {
    "objectID": "fa24/lectures_qmd/lec26.html#slide-13-where-to-go-from-here",
    "href": "fa24/lectures_qmd/lec26.html#slide-13-where-to-go-from-here",
    "title": "[Lec 26] Data 6 Fall 2024 - Conclusion",
    "section": "Slide 13: Where To Go From Here",
    "text": "Slide 13: Where To Go From Here\n\n\nFinal Exam Logistics\n\n\nWhat You Learned\n\n\nWhere To Go From Here\n\n\nStaff Ask Us Anything\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec26.html#slide-14-where-do-you-go-from-here",
    "href": "fa24/lectures_qmd/lec26.html#slide-14-where-do-you-go-from-here",
    "title": "[Lec 26] Data 6 Fall 2024 - Conclusion",
    "section": "Slide 14: Where Do You Go From Here?",
    "text": "Slide 14: Where Do You Go From Here?\n\nThere are numerous possibilities. Do the one that makes you happy!\nPretend like you never took this class and continue learning about ideas that truly interest you.\nDon’t take any other data science courses, but try and use what you’ve learned in this class in your field of interest.\nTake Data 8 and minor in data science while majoring in your field of interest.\nTake Data 8 and major in data science while also majoring in your field of interest, or major in just data science.\nTake CS 61A and major in computer science (and another major).\nLook into a computer science or data science graduate program\nWhichever route you choose, you’re more than equipped to handle what’s in front of you."
  },
  {
    "objectID": "fa24/lectures_qmd/lec26.html#slide-15-more-about-dscs-courses",
    "href": "fa24/lectures_qmd/lec26.html#slide-15-more-about-dscs-courses",
    "title": "[Lec 26] Data 6 Fall 2024 - Conclusion",
    "section": "Slide 15: More About DS/CS Courses",
    "text": "Slide 15: More About DS/CS Courses"
  },
  {
    "objectID": "fa24/lectures_qmd/lec26.html#slide-16-data-8-foundations-of-data-science",
    "href": "fa24/lectures_qmd/lec26.html#slide-16-data-8-foundations-of-data-science",
    "title": "[Lec 26] Data 6 Fall 2024 - Conclusion",
    "section": "Slide 16: Data 8: Foundations of Data Science",
    "text": "Slide 16: Data 8: Foundations of Data Science\n\nExploration\nInference\nPrediction\nIdentifying patterns in data\nUses visualizations\nUsing data to draw reliable conclusions about the world\nUses statistics\nMaking informed guesses about unobserved data\nUses machine learning\nLearning about the world from data using computation.\n\n\n\nSpeaker notes\n\nSummer Data 8 Courtesy of Data 8"
  },
  {
    "objectID": "fa24/lectures_qmd/lec26.html#slide-17-data-8-connector-courses",
    "href": "fa24/lectures_qmd/lec26.html#slide-17-data-8-connector-courses",
    "title": "[Lec 26] Data 6 Fall 2024 - Conclusion",
    "section": "Slide 17: Data 8 Connector Courses",
    "text": "Slide 17: Data 8 Connector Courses\n\n\nSpeaker notes\n\nMany members of our teams got more involved in the data science community by taking these classes. Show the connection of Data Science to various other fields. Usually 2 units, many feature term projects, legal studies, cognitive science, geography, sports analytics, immunotherapy Courtesy of Data 8"
  },
  {
    "objectID": "fa24/lectures_qmd/lec26.html#slide-18-cs-61a-and-cs-88",
    "href": "fa24/lectures_qmd/lec26.html#slide-18-cs-61a-and-cs-88",
    "title": "[Lec 26] Data 6 Fall 2024 - Conclusion",
    "section": "Slide 18: CS 61A and CS 88",
    "text": "Slide 18: CS 61A and CS 88\n\nCS 61A is a 4 unit programming course\n\nIntroduction (and deep dive) into Python (and other programming languages)\nStudents with no programming experience can do well, but having taken a coding course like Data 6 beforehand will help your understanding\nGoes deeper into programming topics, does not focus on data science principles\nAimed at people who want general programming experience and for people studying the computer sciences\n\nData C88C is a 3 unit programming course designed for students who took Data 8\n\nCovers similar topics as CS 61A (many shared assignments), but omits the ideas that are not core to data science\n\n\n\n\nSpeaker notes\n\nIsaac"
  },
  {
    "objectID": "fa24/lectures_qmd/lec26.html#slide-19-data-science-major-vs.-minor",
    "href": "fa24/lectures_qmd/lec26.html#slide-19-data-science-major-vs.-minor",
    "title": "[Lec 26] Data 6 Fall 2024 - Conclusion",
    "section": "Slide 19: Data science major vs. minor",
    "text": "Slide 19: Data science major vs. minor\n\nMajor Requirements\nCore Data Science Classes - Data 8, 100, 140/Stat 134\nComputational/Inferential Depth - includes CS 61A or 88, 61B\nHuman Context and Ethics\nDomain Emphasis - great for double majoring!\nMinor Requirements\nCore Data Science Classes - Data 8, 100\nComputational/Inferential Depth - includes CS 61A or 88, lower division probability\nHuman Context and Ethics\nElectives"
  },
  {
    "objectID": "fa24/lectures_qmd/lec26.html#slide-20-upper-division-courses-data-100-and-data-140",
    "href": "fa24/lectures_qmd/lec26.html#slide-20-upper-division-courses-data-100-and-data-140",
    "title": "[Lec 26] Data 6 Fall 2024 - Conclusion",
    "section": "Slide 20: Upper Division Courses – Data 100 and Data 140",
    "text": "Slide 20: Upper Division Courses – Data 100 and Data 140\n\nData 100: Principles and Techniques of Data Science (Required)\nPrereqs: Data 8, CS 61A or CS 88, linear algebra (concurrent ok)\nPractical: Industry-standard data manipulation (pandas, SQL, regex), visualization, and introductory machine learning – need this to work as a data analyst\nTheoretical: Theory behind core statistical techniques (complements Data 140)\nData 140: Probability for Data Science (Satisfies DS probability requirement)\nPrereqs: Data 8, calculus, linear algebra (concurrent ok)\nTheoretical background for advanced statistical methods, including machine learning\nNot crucial for working as a data analyst, but necessary if you want to do any kind of modeling or advanced statistics\nTake them in either order!\n\n\n\nSpeaker notes\n\nData 100 covers a wide range of topics - you begin with pandas, then visualization, EDA and then jump into ML. A student gets to see a lot of sides what it is like to be a data scientist. It empowers students with a lot of practical skills that they can utilize in doing projects on their own."
  },
  {
    "objectID": "fa24/lectures_qmd/lec26.html#slide-21",
    "href": "fa24/lectures_qmd/lec26.html#slide-21",
    "title": "[Lec 26] Data 6 Fall 2024 - Conclusion",
    "section": "Slide 21: ‹#›",
    "text": "Slide 21: ‹#›"
  },
  {
    "objectID": "fa24/lectures_qmd/lec26.html#slide-22-ask-us-anything",
    "href": "fa24/lectures_qmd/lec26.html#slide-22-ask-us-anything",
    "title": "[Lec 26] Data 6 Fall 2024 - Conclusion",
    "section": "Slide 22: Ask Us Anything",
    "text": "Slide 22: Ask Us Anything"
  },
  {
    "objectID": "fa24/lectures_qmd/lec24.html",
    "href": "fa24/lectures_qmd/lec24.html",
    "title": "[Lec 24] Data 6 Fall 2024 - LLMs",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 24\nLLMs, Prompt Engineering, and the Open AI API\nDeveloped by students and faculty at UC Berkeley and Tuskegee University\ndata6.org/fa24/syllabus/#acknowledgements-"
  },
  {
    "objectID": "fa24/lectures_qmd/lec24.html#slide-1-large-language-models",
    "href": "fa24/lectures_qmd/lec24.html#slide-1-large-language-models",
    "title": "[Lec 24] Data 6 Fall 2024 - LLMs",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 24\nLLMs, Prompt Engineering, and the Open AI API\nDeveloped by students and faculty at UC Berkeley and Tuskegee University\ndata6.org/fa24/syllabus/#acknowledgements-"
  },
  {
    "objectID": "fa24/lectures_qmd/lec24.html#slide-2-week-14",
    "href": "fa24/lectures_qmd/lec24.html#slide-2-week-14",
    "title": "[Lec 24] Data 6 Fall 2024 - LLMs",
    "section": "Slide 2: Week 14",
    "text": "Slide 2: Week 14\n\nSurvey due tonight\nCourse evals - 1% extra credit if we hit at least 80% participation rate :D\nFinal Project Part 2 due December 9th, released tonight\nRelies heavily on a good understanding of dictionaries - I will link a quick Jupyter Notebook if you’d like to familiarize yourself before jumping in\nAnnouncements!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec24.html#slide-3-todays-roadmap",
    "href": "fa24/lectures_qmd/lec24.html#slide-3-todays-roadmap",
    "title": "[Lec 24] Data 6 Fall 2024 - LLMs",
    "section": "Slide 3: Today’s Roadmap",
    "text": "Slide 3: Today’s Roadmap\n\nLLMs\nLocal LLMs Demo\nTraining Data\nAI Chatbot Demo\nRisks\nImprovements\nAPI Calls\nLecture 24, Data 6 Fall 2024"
  },
  {
    "objectID": "fa24/lectures_qmd/lec24.html#slide-4-large-language-models-llms",
    "href": "fa24/lectures_qmd/lec24.html#slide-4-large-language-models-llms",
    "title": "[Lec 24] Data 6 Fall 2024 - LLMs",
    "section": "Slide 4: Large Language Models (LLMs)",
    "text": "Slide 4: Large Language Models (LLMs)\n\n\nLLMs\n\n\nLocal LLMs Demo\n\n\nTraining Data\n\n\nAI Chatbot Demo\n\n\nRisks\n\n\nImprovements\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec24.html#slide-5-artificial-intelligence-the-capability-of-computer-systems-or-algorithms-to-imitate-intelligent-human-behavior",
    "href": "fa24/lectures_qmd/lec24.html#slide-5-artificial-intelligence-the-capability-of-computer-systems-or-algorithms-to-imitate-intelligent-human-behavior",
    "title": "[Lec 24] Data 6 Fall 2024 - LLMs",
    "section": "Slide 5: Artificial Intelligence: the capability of computer systems or algorithms to imitate intelligent human behavior",
    "text": "Slide 5: Artificial Intelligence: the capability of computer systems or algorithms to imitate intelligent human behavior\nMachine Learning: a computational method that is a subfield of artificial intelligence and that enables a computer to learn to perform tasks by analyzing a large dataset without being explicitly programmed Deep Learning: a form of machine learning in which the computer network rapidly teaches itself to understand a concept with/without human intervention by performing a large number of iterative calculations on an extremely large dataset Generative AI: generating new content (such as images or text) in response to a submitted prompt (such as a query) by learning from a large reference database of examples\n\nArtificial Intelligence: the capability of computer systems or algorithms to imitate intelligent human behavior\nMachine Learning: a computational method that is a subfield of artificial intelligence and that enables a computer to learn to perform tasks by analyzing a large dataset without being explicitly programmed\nDeep Learning: a form of machine learning in which the computer network rapidly teaches itself to understand a concept with/without human intervention by performing a large number of iterative calculations on an extremely large dataset\nGenerative AI: generating new content (such as images or text) in response to a submitted prompt (such as a query) by learning from a large reference database of examples\nArtificial Intelligence: 1956\nMachine Learning: 1959\nDeep Learning: 1986\nGenerative AI: 2021\nA brief history"
  },
  {
    "objectID": "fa24/lectures_qmd/lec24.html#slide-6",
    "href": "fa24/lectures_qmd/lec24.html#slide-6",
    "title": "[Lec 24] Data 6 Fall 2024 - LLMs",
    "section": "Slide 6: ‹#›",
    "text": "Slide 6: ‹#›"
  },
  {
    "objectID": "fa24/lectures_qmd/lec24.html#slide-7-what-is-a-llm",
    "href": "fa24/lectures_qmd/lec24.html#slide-7-what-is-a-llm",
    "title": "[Lec 24] Data 6 Fall 2024 - LLMs",
    "section": "Slide 7: What is a LLM?",
    "text": "Slide 7: What is a LLM?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec24.html#slide-8-defining-large-language-models-llms",
    "href": "fa24/lectures_qmd/lec24.html#slide-8-defining-large-language-models-llms",
    "title": "[Lec 24] Data 6 Fall 2024 - LLMs",
    "section": "Slide 8: Defining Large Language Models (LLMs)",
    "text": "Slide 8: Defining Large Language Models (LLMs)\n\nQuestion: What is a LLM?\nAnswer: A LLM is a type of artificial intelligence (AI) program that can recognize and generate text, among other tasks. LLMs are trained on huge sets of data — hence the name “large.” LLMs are built on machine learning: specifically, a type of neural network called a transformer model.\nGenerative Pretrained Transformer (GPT)\nare LLMs\nSo… you’ve potentially used LLMs (hopefully following academic guidelines)."
  },
  {
    "objectID": "fa24/lectures_qmd/lec24.html#slide-9-examples-of-hosted-llms",
    "href": "fa24/lectures_qmd/lec24.html#slide-9-examples-of-hosted-llms",
    "title": "[Lec 24] Data 6 Fall 2024 - LLMs",
    "section": "Slide 9: Examples of hosted LLMs",
    "text": "Slide 9: Examples of hosted LLMs"
  },
  {
    "objectID": "fa24/lectures_qmd/lec24.html#slide-10-training-data",
    "href": "fa24/lectures_qmd/lec24.html#slide-10-training-data",
    "title": "[Lec 24] Data 6 Fall 2024 - LLMs",
    "section": "Slide 10: Training Data",
    "text": "Slide 10: Training Data\n\n➤\n\nLLMs\n\n\nLocal LLMs Demo\n\n\nTraining Data\n\n\nAI Chatbot Demo\n\n\nRisks\n\n\nImprovements"
  },
  {
    "objectID": "fa24/lectures_qmd/lec24.html#slide-11-what-data-does-chatgpt-use-to-train-its-model",
    "href": "fa24/lectures_qmd/lec24.html#slide-11-what-data-does-chatgpt-use-to-train-its-model",
    "title": "[Lec 24] Data 6 Fall 2024 - LLMs",
    "section": "Slide 11: What data does ChatGPT use to train its model?",
    "text": "Slide 11: What data does ChatGPT use to train its model?\n\nDataset used to teach machine learning models\nPublicly available data\n\nPublic data repos\nSocial media\nYouTube videos\n\nThird parties / crowdsourcing\nTraining Data\nWeb Scraping: process of using bots to extract content and data from a website"
  },
  {
    "objectID": "fa24/lectures_qmd/lec24.html#slide-12-discussion",
    "href": "fa24/lectures_qmd/lec24.html#slide-12-discussion",
    "title": "[Lec 24] Data 6 Fall 2024 - LLMs",
    "section": "Slide 12: Discussion",
    "text": "Slide 12: Discussion\n\nCan we run out of publicly available data?\nIs the training data LLMs use, representative of the world?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec24.html#slide-13-ai-chatbot-demo",
    "href": "fa24/lectures_qmd/lec24.html#slide-13-ai-chatbot-demo",
    "title": "[Lec 24] Data 6 Fall 2024 - LLMs",
    "section": "Slide 13: AI Chatbot Demo",
    "text": "Slide 13: AI Chatbot Demo\nhttps://data6-llm-79214fa7cb82.herokuapp.com/\n\n➤\n\nLLMs\n\n\nLocal LLMs Demo\n\n\nTraining Data\n\n\nAI Chatbot Demo\n\n\nRisks\n\n\nImprovements"
  },
  {
    "objectID": "fa24/lectures_qmd/lec24.html#slide-14-risks",
    "href": "fa24/lectures_qmd/lec24.html#slide-14-risks",
    "title": "[Lec 24] Data 6 Fall 2024 - LLMs",
    "section": "Slide 14: Risks",
    "text": "Slide 14: Risks\n\n➤\n\nLLMs\n\n\nLocal LLMs Demo\n\n\nTraining Data\n\n\nAI Chatbot Demo\n\n\nRisks\n\n\nImprovements"
  },
  {
    "objectID": "fa24/lectures_qmd/lec24.html#slide-15-potential-risks-with-llms",
    "href": "fa24/lectures_qmd/lec24.html#slide-15-potential-risks-with-llms",
    "title": "[Lec 24] Data 6 Fall 2024 - LLMs",
    "section": "Slide 15: Potential Risks with LLMs",
    "text": "Slide 15: Potential Risks with LLMs\n\nCopyright\nPoor Training Data → Made up information\nImpersonation"
  },
  {
    "objectID": "fa24/lectures_qmd/lec24.html#slide-16-improvements",
    "href": "fa24/lectures_qmd/lec24.html#slide-16-improvements",
    "title": "[Lec 24] Data 6 Fall 2024 - LLMs",
    "section": "Slide 16: Improvements",
    "text": "Slide 16: Improvements\n\n➤\n\nLLMs\n\n\nLocal LLMs Demo\n\n\nTraining Data\n\n\nAI Chatbot Demo\n\n\nRisks\n\n\nImprovements"
  },
  {
    "objectID": "fa24/lectures_qmd/lec24.html#slide-17-improvements",
    "href": "fa24/lectures_qmd/lec24.html#slide-17-improvements",
    "title": "[Lec 24] Data 6 Fall 2024 - LLMs",
    "section": "Slide 17: Improvements",
    "text": "Slide 17: Improvements\n\nImproved course prompt engineering\nRepresentative training data\nGovernment intervention?\n\nCompany policies"
  },
  {
    "objectID": "fa24/lectures_qmd/lec24.html#slide-18-api-calls",
    "href": "fa24/lectures_qmd/lec24.html#slide-18-api-calls",
    "title": "[Lec 24] Data 6 Fall 2024 - LLMs",
    "section": "Slide 18: API Calls",
    "text": "Slide 18: API Calls\n\n➤\n\nLLMs\n\n\nLocal LLMs Demo\n\n\nTraining Data\n\n\nAI Chatbot Demo\n\n\nRisks\n\n\nImprovements\n\n\nAPI Calls"
  },
  {
    "objectID": "fa24/lectures_qmd/lec24.html#slide-19-what-is-an-api",
    "href": "fa24/lectures_qmd/lec24.html#slide-19-what-is-an-api",
    "title": "[Lec 24] Data 6 Fall 2024 - LLMs",
    "section": "Slide 19: What is an API?",
    "text": "Slide 19: What is an API?\n\nApplication Programming Interface\nEssentially, we’re using code that someone else has written.\nOpen AI uses a web API, which means that we need access to the internet in order to use the API\n\nYou usually access web APIs via HTTP requests, but thankfully we’re given a bit of abstraction :)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec24.html#slide-20-quick-technical-aside-default-values",
    "href": "fa24/lectures_qmd/lec24.html#slide-20-quick-technical-aside-default-values",
    "title": "[Lec 24] Data 6 Fall 2024 - LLMs",
    "section": "Slide 20: Quick (Technical) Aside: Default Values",
    "text": "Slide 20: Quick (Technical) Aside: Default Values\n\nWhen defining functions, you can specify default functionality.\nExample:"
  },
  {
    "objectID": "fa24/lectures_qmd/lec24.html#slide-21-api-calls-demo",
    "href": "fa24/lectures_qmd/lec24.html#slide-21-api-calls-demo",
    "title": "[Lec 24] Data 6 Fall 2024 - LLMs",
    "section": "Slide 21: API Calls (Demo)",
    "text": "Slide 21: API Calls (Demo)\n\n➤\n\nLLMs\n\n\nLocal LLMs Demo\n\n\nTraining Data\n\n\nAI Chatbot Demo\n\n\nRisks\n\n\nImprovements\n\n\nAPI Calls"
  },
  {
    "objectID": "fa24/lectures_qmd/lec24.html#slide-22-do-not-leak-your-api-keys",
    "href": "fa24/lectures_qmd/lec24.html#slide-22-do-not-leak-your-api-keys",
    "title": "[Lec 24] Data 6 Fall 2024 - LLMs",
    "section": "Slide 22: DO NOT LEAK YOUR API KEYS >:(",
    "text": "Slide 22: DO NOT LEAK YOUR API KEYS &gt;:("
  },
  {
    "objectID": "fa24/lectures_qmd/lec24.html#slide-23-in-conclusion",
    "href": "fa24/lectures_qmd/lec24.html#slide-23-in-conclusion",
    "title": "[Lec 24] Data 6 Fall 2024 - LLMs",
    "section": "Slide 23: In Conclusion…",
    "text": "Slide 23: In Conclusion…"
  },
  {
    "objectID": "fa24/lectures_qmd/lec24.html#slide-24-happy-thanksgiving-i-am-thankful-for-all-of-you-d",
    "href": "fa24/lectures_qmd/lec24.html#slide-24-happy-thanksgiving-i-am-thankful-for-all-of-you-d",
    "title": "[Lec 24] Data 6 Fall 2024 - LLMs",
    "section": "Slide 24: Happy Thanksgiving! I am thankful for all of you :D",
    "text": "Slide 24: Happy Thanksgiving! I am thankful for all of you :D"
  },
  {
    "objectID": "fa24/lectures_qmd/lec19.html",
    "href": "fa24/lectures_qmd/lec19.html",
    "title": "[Lec 19] Data 6 Fall 2024 - Iteration",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 19\nDoing things over and over and over again.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd/lec19.html#slide-1-iteration",
    "href": "fa24/lectures_qmd/lec19.html#slide-1-iteration",
    "title": "[Lec 19] Data 6 Fall 2024 - Iteration",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 19\nDoing things over and over and over again.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd/lec19.html#slide-2-week-10",
    "href": "fa24/lectures_qmd/lec19.html#slide-2-week-10",
    "title": "[Lec 19] Data 6 Fall 2024 - Iteration",
    "section": "Slide 2: Week 10",
    "text": "Slide 2: Week 10\n\nNothing! Enjoy your weekend :)\nAnnouncements!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec19.html#slide-3-todays-roadmap",
    "href": "fa24/lectures_qmd/lec19.html#slide-3-todays-roadmap",
    "title": "[Lec 19] Data 6 Fall 2024 - Iteration",
    "section": "Slide 3: Today’s Roadmap",
    "text": "Slide 3: Today’s Roadmap\n\nMotivation\nFor Loops\nRanges\nLecture 19, Data 6 Fall 2024"
  },
  {
    "objectID": "fa24/lectures_qmd/lec19.html#slide-4-motivation",
    "href": "fa24/lectures_qmd/lec19.html#slide-4-motivation",
    "title": "[Lec 19] Data 6 Fall 2024 - Iteration",
    "section": "Slide 4: Motivation",
    "text": "Slide 4: Motivation\n\n\nMotivation\n\n\nFor Loops\n\n\nRanges\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec19.html#slide-5-repeating-code",
    "href": "fa24/lectures_qmd/lec19.html#slide-5-repeating-code",
    "title": "[Lec 19] Data 6 Fall 2024 - Iteration",
    "section": "Slide 5: Repeating Code",
    "text": "Slide 5: Repeating Code\n\nWhat do we do when we want to run the same line(s) of code multiple times?\nFor loops allow us to repeat code!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec19.html#slide-6-wonderful-berkeley-weather",
    "href": "fa24/lectures_qmd/lec19.html#slide-6-wonderful-berkeley-weather",
    "title": "[Lec 19] Data 6 Fall 2024 - Iteration",
    "section": "Slide 6: Wonderful Berkeley Weather",
    "text": "Slide 6: Wonderful Berkeley Weather\n\nWe have Berkeley high temperatures for the past two weeks (7/7-7/20) in the berk_temps array. In Berkeley, it is considered ‘hot’ if the temperature is &gt;= 70 degrees, ‘cold’ if the temperature is &lt;= 65 degrees, and ‘just right’ otherwise.\nHow can we check the temperature for all 14 days?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec19.html#slide-7-wonderful-berkeley-weather",
    "href": "fa24/lectures_qmd/lec19.html#slide-7-wonderful-berkeley-weather",
    "title": "[Lec 19] Data 6 Fall 2024 - Iteration",
    "section": "Slide 7: Wonderful Berkeley Weather",
    "text": "Slide 7: Wonderful Berkeley Weather\n\nWe have Berkeley high temperatures for the past two weeks (7/7-7/20) in the berk_temps array. In Berkeley, it is considered ‘hot’ if the temperature is &gt;= 70 degrees, ‘cold’ if the temperature is &lt;= 65 degrees, and ‘just right’ otherwise.\nHow can we check the temperature for all 14 days?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec19.html#slide-8-for-loops",
    "href": "fa24/lectures_qmd/lec19.html#slide-8-for-loops",
    "title": "[Lec 19] Data 6 Fall 2024 - Iteration",
    "section": "Slide 8: For Loops",
    "text": "Slide 8: For Loops\n\n\nMotivation\n\n\nFor Loops\n\n\nRanges\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec19.html#slide-9-berkeley-temperatures",
    "href": "fa24/lectures_qmd/lec19.html#slide-9-berkeley-temperatures",
    "title": "[Lec 19] Data 6 Fall 2024 - Iteration",
    "section": "Slide 9: Berkeley Temperatures",
    "text": "Slide 9: Berkeley Temperatures\n\nTo “iterate” over a sequence of values means to do something with each value, one at a time.\nIteration\n[ 72,\n72,\n70,\n70,\n66,\n73,\n70,\n72,\n66,\n68,\n66,\n70,\n66,\n70 ]\nhttps://tinyurl.com/data6-iteration"
  },
  {
    "objectID": "fa24/lectures_qmd/lec19.html#slide-10-iteration-vs.-loops",
    "href": "fa24/lectures_qmd/lec19.html#slide-10-iteration-vs.-loops",
    "title": "[Lec 19] Data 6 Fall 2024 - Iteration",
    "section": "Slide 10: Iteration vs. Loops",
    "text": "Slide 10: Iteration vs. Loops"
  },
  {
    "objectID": "fa24/lectures_qmd/lec19.html#slide-11-two-types-of-loops",
    "href": "fa24/lectures_qmd/lec19.html#slide-11-two-types-of-loops",
    "title": "[Lec 19] Data 6 Fall 2024 - Iteration",
    "section": "Slide 11: Two Types of Loops",
    "text": "Slide 11: Two Types of Loops\n\nLoops allow us to repeat the execution of code.\nThere are two types of loops in Python: the while loop and the for loop.\nwhile :\n\n“While this condition is true, repeat this code.”\nfor  in :\n\n“For each element of this sequence, repeat this code.”\nSequences include arrays, lists, strings and more."
  },
  {
    "objectID": "fa24/lectures_qmd/lec19.html#slide-12-for-loops",
    "href": "fa24/lectures_qmd/lec19.html#slide-12-for-loops",
    "title": "[Lec 19] Data 6 Fall 2024 - Iteration",
    "section": "Slide 12: For Loops",
    "text": "Slide 12: For Loops\n\nThe simplest version of a for loop is also referred to as a “for each” loop.\nThe name after “for” (in this case n) is assigned to each value in the sequence, one at a time.\nIn the first iteration, n is 2.\nIn the second iteration, n is 4.\nIn the third iteration, n is 6.\nIn the fourth iteration, n is 8."
  },
  {
    "objectID": "fa24/lectures_qmd/lec19.html#slide-13-more-for-loops",
    "href": "fa24/lectures_qmd/lec19.html#slide-13-more-for-loops",
    "title": "[Lec 19] Data 6 Fall 2024 - Iteration",
    "section": "Slide 13: More For Loops",
    "text": "Slide 13: More For Loops"
  },
  {
    "objectID": "fa24/lectures_qmd/lec19.html#slide-14-example-fares",
    "href": "fa24/lectures_qmd/lec19.html#slide-14-example-fares",
    "title": "[Lec 19] Data 6 Fall 2024 - Iteration",
    "section": "Slide 14: Example: Fares",
    "text": "Slide 14: Example: Fares\n\nSuppose we have a data set of Titanic survivors, with information about the fare (ticket price) they paid.\nWrite a function that, given a list of fares and a threshold, returns the number of fares that are above the threshold.\n# Evaluates to 4, since 4 nums are &gt;3\ncount_above([1, 2, 5, 8, 7, 9], 3)\n# Evaluates to 0, since 0 nums are &gt;10\ncount_above([4, 8, 2, 1], 10)"
  },
  {
    "objectID": "fa24/lectures_qmd/lec19.html#slide-15-solution",
    "href": "fa24/lectures_qmd/lec19.html#slide-15-solution",
    "title": "[Lec 19] Data 6 Fall 2024 - Iteration",
    "section": "Slide 15: Solution",
    "text": "Slide 15: Solution"
  },
  {
    "objectID": "fa24/lectures_qmd/lec19.html#slide-16-questions",
    "href": "fa24/lectures_qmd/lec19.html#slide-16-questions",
    "title": "[Lec 19] Data 6 Fall 2024 - Iteration",
    "section": "Slide 16: Questions?",
    "text": "Slide 16: Questions?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec19.html#slide-17-quick-check-1",
    "href": "fa24/lectures_qmd/lec19.html#slide-17-quick-check-1",
    "title": "[Lec 19] Data 6 Fall 2024 - Iteration",
    "section": "Slide 17: Quick Check 1",
    "text": "Slide 17: Quick Check 1\n\nDescribe, in one sentence, what the function not_sure does.\ndef not_sure(word):\noutput = ’’\nfor letter in word:\nif letter in ‘aeiou’:\noutput += letter\nreturn output"
  },
  {
    "objectID": "fa24/lectures_qmd/lec19.html#slide-18-for-loops-with-strings",
    "href": "fa24/lectures_qmd/lec19.html#slide-18-for-loops-with-strings",
    "title": "[Lec 19] Data 6 Fall 2024 - Iteration",
    "section": "Slide 18: For Loops with Strings",
    "text": "Slide 18: For Loops with Strings"
  },
  {
    "objectID": "fa24/lectures_qmd/lec19.html#slide-19-ranges-and-for-loops",
    "href": "fa24/lectures_qmd/lec19.html#slide-19-ranges-and-for-loops",
    "title": "[Lec 19] Data 6 Fall 2024 - Iteration",
    "section": "Slide 19: Ranges and For Loops",
    "text": "Slide 19: Ranges and For Loops\n\n\nMotivation\n\n\nFor Loops\n\n\nRanges\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec19.html#slide-20-recall-np.arange",
    "href": "fa24/lectures_qmd/lec19.html#slide-20-recall-np.arange",
    "title": "[Lec 19] Data 6 Fall 2024 - Iteration",
    "section": "Slide 20: Recall: np.arange()",
    "text": "Slide 20: Recall: np.arange()\n\nArray ranges work like indexing:inclusive of the starting position, and exclusive of the ending position.\nThe NumPy function np.arange() creates a sequence of numbers."
  },
  {
    "objectID": "fa24/lectures_qmd/lec19.html#slide-21-ranges-and-for-loops",
    "href": "fa24/lectures_qmd/lec19.html#slide-21-ranges-and-for-loops",
    "title": "[Lec 19] Data 6 Fall 2024 - Iteration",
    "section": "Slide 21: Ranges and For Loops",
    "text": "Slide 21: Ranges and For Loops\n\nIf don’t have an array we’re working with but still want to repeat code a certain number of times, what can we do?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec19.html#slide-22-more-array-range-examples",
    "href": "fa24/lectures_qmd/lec19.html#slide-22-more-array-range-examples",
    "title": "[Lec 19] Data 6 Fall 2024 - Iteration",
    "section": "Slide 22: More Array Range Examples",
    "text": "Slide 22: More Array Range Examples"
  },
  {
    "objectID": "fa24/lectures_qmd/lec19.html#slide-23-another-useful-tool-np.append",
    "href": "fa24/lectures_qmd/lec19.html#slide-23-another-useful-tool-np.append",
    "title": "[Lec 19] Data 6 Fall 2024 - Iteration",
    "section": "Slide 23: Another Useful Tool: np.append()",
    "text": "Slide 23: Another Useful Tool: np.append()\n\nPrinting from for loops is cool, but the real power is when we use for loops to change or add values in arrays.\nWe can use np.append(arr, value) to add value onto the end of the array arr."
  },
  {
    "objectID": "fa24/lectures_qmd/lec19.html#slide-24-in-conclusion",
    "href": "fa24/lectures_qmd/lec19.html#slide-24-in-conclusion",
    "title": "[Lec 19] Data 6 Fall 2024 - Iteration",
    "section": "Slide 24: In Conclusion…",
    "text": "Slide 24: In Conclusion…"
  },
  {
    "objectID": "fa24/lectures_qmd/lec19.html#slide-25-summary",
    "href": "fa24/lectures_qmd/lec19.html#slide-25-summary",
    "title": "[Lec 19] Data 6 Fall 2024 - Iteration",
    "section": "Slide 25: Summary",
    "text": "Slide 25: Summary\n\nFor loops perform one iteration for each element of a sequence.\nThis is very useful when working with arrays\nIf we don’t have an array we’re working with, we can use np.arange() to make a range to iterate over\nWe can use np.append() to add onto the end of an array\nwhile :\n\n“While this condition is true, repeat this code.”\nfor  in :\n\n“For each element of this sequence, repeat this code.”"
  },
  {
    "objectID": "fa24/lectures_qmd/lec19.html#slide-26-recap",
    "href": "fa24/lectures_qmd/lec19.html#slide-26-recap",
    "title": "[Lec 19] Data 6 Fall 2024 - Iteration",
    "section": "Slide 26: Recap",
    "text": "Slide 26: Recap\n\nNext Time\nIteration\n\nFor Loops\n\nhttps://forms.gle/YrRPZdoSFgx3dfRJ8\nQuick Check\nIteration\n\nWhile Loops\nDealing with Missing Values"
  },
  {
    "objectID": "fa24/lectures_qmd/lec08.html",
    "href": "fa24/lectures_qmd/lec08.html",
    "title": "[Lec 10] Data 6 Fall 2024 - Taking and Filtering Rows",
    "section": "",
    "text": "Filtering Rows\n\nData 6 Fall 2024\nLECTURE 10\nGetting subsets of table rows to answer questions.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd/lec08.html#slide-1-taking-and",
    "href": "fa24/lectures_qmd/lec08.html#slide-1-taking-and",
    "title": "[Lec 10] Data 6 Fall 2024 - Taking and Filtering Rows",
    "section": "",
    "text": "Filtering Rows\n\nData 6 Fall 2024\nLECTURE 10\nGetting subsets of table rows to answer questions.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd/lec08.html#slide-2-week-4",
    "href": "fa24/lectures_qmd/lec08.html#slide-2-week-4",
    "title": "[Lec 10] Data 6 Fall 2024 - Taking and Filtering Rows",
    "section": "Slide 2: Week 4",
    "text": "Slide 2: Week 4\n\nHomework 1 is due tonight!\nReading 2 Assignment is due next Thursday!\nWeek 4 Survey is due next Monday!\nAnnouncements!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec08.html#slide-3-todays-roadmap",
    "href": "fa24/lectures_qmd/lec08.html#slide-3-todays-roadmap",
    "title": "[Lec 10] Data 6 Fall 2024 - Taking and Filtering Rows",
    "section": "Slide 3: Today’s Roadmap",
    "text": "Slide 3: Today’s Roadmap\n\nReview: .take()\nBooleans\nFiltering with .where()\nLecture 10, Data 6 Fall 2024"
  },
  {
    "objectID": "fa24/lectures_qmd/lec08.html#slide-4-review-.take",
    "href": "fa24/lectures_qmd/lec08.html#slide-4-review-.take",
    "title": "[Lec 10] Data 6 Fall 2024 - Taking and Filtering Rows",
    "section": "Slide 4: Review: .take()",
    "text": "Slide 4: Review: .take()\n\n\nReview: .take()\n\n\nBooleans\n\n\nFiltering with .where()\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec08.html#slide-5-row-index",
    "href": "fa24/lectures_qmd/lec08.html#slide-5-row-index",
    "title": "[Lec 10] Data 6 Fall 2024 - Taking and Filtering Rows",
    "section": "Slide 5: Row Index",
    "text": "Slide 5: Row Index\n\nRows, like columns, have indexes. Like everything else in Python, rows are 0-indexed."
  },
  {
    "objectID": "fa24/lectures_qmd/lec08.html#slide-6-.take",
    "href": "fa24/lectures_qmd/lec08.html#slide-6-.take",
    "title": "[Lec 10] Data 6 Fall 2024 - Taking and Filtering Rows",
    "section": "Slide 6: .take()",
    "text": "Slide 6: .take()\n\nThe method\nt.take(row_indices)\nreturns a new table with only the rows specified by row_indices.\nIf row_indices is a single integer, it returns a table with just one row – the row at index row_indices.\nIf row_indices is an array, it returns a table with all of the rows at positions specified by row_indices.\n.take is often used in conjunction with NumPy array ranges!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec08.html#slide-7-.take-with-arrays",
    "href": "fa24/lectures_qmd/lec08.html#slide-7-.take-with-arrays",
    "title": "[Lec 10] Data 6 Fall 2024 - Taking and Filtering Rows",
    "section": "Slide 7: .take() with Arrays",
    "text": "Slide 7: .take() with Arrays\n\nIncidentally, the .take method works on arrays too, not just tables.\nThat means you can reverse the order of .take and .column and still get the same result.\n⚠️ This interchangeability does not generally hold true with other methods, so be careful!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec08.html#slide-8-booleans",
    "href": "fa24/lectures_qmd/lec08.html#slide-8-booleans",
    "title": "[Lec 10] Data 6 Fall 2024 - Taking and Filtering Rows",
    "section": "Slide 8: Booleans",
    "text": "Slide 8: Booleans\n\n\nReview: .take()\n\n\nBooleans\n\n\nFiltering with .where()\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec08.html#slide-9-bool",
    "href": "fa24/lectures_qmd/lec08.html#slide-9-bool",
    "title": "[Lec 10] Data 6 Fall 2024 - Taking and Filtering Rows",
    "section": "Slide 9: bool",
    "text": "Slide 9: bool\n\nThe bool, or Boolean type, has only two values: True and False. No other values have this type.\nTrue, and False are Python keywords.\nThey have special meanings and cannot be\nused as names.\nIn this regard, they’re similar to values 3, -15.2, and “zebra”."
  },
  {
    "objectID": "fa24/lectures_qmd/lec08.html#slide-10-boolean-data",
    "href": "fa24/lectures_qmd/lec08.html#slide-10-boolean-data",
    "title": "[Lec 10] Data 6 Fall 2024 - Taking and Filtering Rows",
    "section": "Slide 10: Boolean Data",
    "text": "Slide 10: Boolean Data\n\nIn data science, boolean values can be used represent a binary variable:\nyes/no, on/off, high/low, etc."
  },
  {
    "objectID": "fa24/lectures_qmd/lec08.html#slide-11-using-boolean-values",
    "href": "fa24/lectures_qmd/lec08.html#slide-11-using-boolean-values",
    "title": "[Lec 10] Data 6 Fall 2024 - Taking and Filtering Rows",
    "section": "Slide 11: Using Boolean Values",
    "text": "Slide 11: Using Boolean Values\n\nTrue and False are technically numeric values:you can cast them to integers and floats,and use them in arithmetic expressions.\nTrue is equivalent to 1.\nFalse is equivalent to 0.\nLike other data types, it can be stored in arrays."
  },
  {
    "objectID": "fa24/lectures_qmd/lec08.html#slide-12-filtering-with-.where",
    "href": "fa24/lectures_qmd/lec08.html#slide-12-filtering-with-.where",
    "title": "[Lec 10] Data 6 Fall 2024 - Taking and Filtering Rows",
    "section": "Slide 12: Filtering with .where()",
    "text": "Slide 12: Filtering with .where()\n\n\nReview: .take()\n\n\nBooleans\n\n\nFiltering with .where()\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd/lec08.html#slide-13-review-filtering-rows",
    "href": "fa24/lectures_qmd/lec08.html#slide-13-review-filtering-rows",
    "title": "[Lec 10] Data 6 Fall 2024 - Taking and Filtering Rows",
    "section": "Slide 13: Review: Filtering Rows",
    "text": "Slide 13: Review: Filtering Rows\n\nOften times, we will have a table and will want to access only the rows where some condition is true. For example, given our SAT data, we may want all of the rows where…\nThe combined SAT score is above 1800 (remember, this data is on the old 2400 scale).\nThe state name is equal to “California”.\nThe state name contains “Dakota”.\nThe math SAT score is between 580 and 600.\nAccessing a subset of our data is called filtering. The method t.where will help us filter.\n.where is the most important table method we will learn in this class.\n✅ Exact Match .where()"
  },
  {
    "objectID": "fa24/lectures_qmd/lec08.html#slide-14-review-filtering-rows",
    "href": "fa24/lectures_qmd/lec08.html#slide-14-review-filtering-rows",
    "title": "[Lec 10] Data 6 Fall 2024 - Taking and Filtering Rows",
    "section": "Slide 14: Review: Filtering Rows",
    "text": "Slide 14: Review: Filtering Rows\n\nOften times, we will have a table and will want to access only the rows where some condition is true. For example, given our SAT data, we may want all of the rows where…\nThe combined SAT score is above 1800 (remember, this data is on the old 2400 scale).\nThe state name is equal to “California”.\nThe state name contains “Dakota”.\nThe math SAT score is between 580 and 600.\nAccessing a subset of our data is called filtering. The method t.where will help us filter.\n.where is the most important table method we will learn in this class.\n✅ Exact Match .where()\nWe will now use .where to performconditional match, meaning we get rows whose columns meet a particular condition!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec08.html#slide-15-table.where-predicates",
    "href": "fa24/lectures_qmd/lec08.html#slide-15-table.where-predicates",
    "title": "[Lec 10] Data 6 Fall 2024 - Taking and Filtering Rows",
    "section": "Slide 15: Table.where Predicates",
    "text": "Slide 15: Table.where Predicates\n\nThe method t.where(label, value) returns a new table that contains only the rows whose label field/attribute exactly matches value.\nThis method is shorthand for the Table.where predicate structure: t.where(label, are.equal_to(value))\nThis structure chooses the rows for which the “predicate” is True,and filters out the rows for which the predicate is False.\nA couple of examples will make this syntax easier to understand."
  },
  {
    "objectID": "fa24/lectures_qmd/lec08.html#slide-16-example",
    "href": "fa24/lectures_qmd/lec08.html#slide-16-example",
    "title": "[Lec 10] Data 6 Fall 2024 - Taking and Filtering Rows",
    "section": "Slide 16: Example",
    "text": "Slide 16: Example"
  },
  {
    "objectID": "fa24/lectures_qmd/lec08.html#slide-17-table.where-predicates-reference",
    "href": "fa24/lectures_qmd/lec08.html#slide-17-table.where-predicates-reference",
    "title": "[Lec 10] Data 6 Fall 2024 - Taking and Filtering Rows",
    "section": "Slide 17: Table.where Predicates Reference",
    "text": "Slide 17: Table.where Predicates Reference\n\nThe method t.where(column, pred) creates a new table with only the rows from t where column satisfies the predicate pred. See the Python Reference™ for all possible predicates; here are some of the main ones:\nAdding not_ to any of the above to negates the predicate, e.g. are.not_equal_to(z)."
  },
  {
    "objectID": "fa24/lectures_qmd/lec08.html#slide-18-multiple-predicates-with-method-chaining",
    "href": "fa24/lectures_qmd/lec08.html#slide-18-multiple-predicates-with-method-chaining",
    "title": "[Lec 10] Data 6 Fall 2024 - Taking and Filtering Rows",
    "section": "Slide 18: Multiple Predicates with Method Chaining",
    "text": "Slide 18: Multiple Predicates with Method Chaining\n\nSometimes we may want only the rows where multiple conditions are true. For instance, we may want all rows where…\nThe participation rate is above 20% and the combined SAT score is above 1500.\nThe participation rate is below 10%, the combined SAT score is above 1600, and the state is in the Deep South.\nNo problem: just method chain .where multiple times!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec08.html#slide-19",
    "href": "fa24/lectures_qmd/lec08.html#slide-19",
    "title": "[Lec 10] Data 6 Fall 2024 - Taking and Filtering Rows",
    "section": "Slide 19: ‹#›",
    "text": "Slide 19: ‹#›"
  },
  {
    "objectID": "fa24/lectures_qmd/lec08.html#slide-20-in-conclusion",
    "href": "fa24/lectures_qmd/lec08.html#slide-20-in-conclusion",
    "title": "[Lec 10] Data 6 Fall 2024 - Taking and Filtering Rows",
    "section": "Slide 20: In Conclusion…",
    "text": "Slide 20: In Conclusion…"
  },
  {
    "objectID": "fa24/lectures_qmd/lec08.html#slide-21-summary",
    "href": "fa24/lectures_qmd/lec08.html#slide-21-summary",
    "title": "[Lec 10] Data 6 Fall 2024 - Taking and Filtering Rows",
    "section": "Slide 21: Summary",
    "text": "Slide 21: Summary"
  },
  {
    "objectID": "fa24/lectures_qmd/lec08.html#slide-22-recap",
    "href": "fa24/lectures_qmd/lec08.html#slide-22-recap",
    "title": "[Lec 10] Data 6 Fall 2024 - Taking and Filtering Rows",
    "section": "Slide 22: Recap",
    "text": "Slide 22: Recap\n\n.take()\nBooleans\n.where()\nhttps://forms.gle/G9UVKN4unatCLWC66\nWorking with Rows\nJoining Tables\nNext Time"
  },
  {
    "objectID": "fa24/lectures_qmd/lec22.html",
    "href": "fa24/lectures_qmd/lec22.html",
    "title": "[Lec 22] Data 6 Fall 2024 - Sampling and Computational Social Science",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 22\nThinking about representation.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd/lec22.html#slide-1-sampling-and-css",
    "href": "fa24/lectures_qmd/lec22.html#slide-1-sampling-and-css",
    "title": "[Lec 22] Data 6 Fall 2024 - Sampling and Computational Social Science",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 22\nThinking about representation.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd/lec22.html#slide-2-week-13",
    "href": "fa24/lectures_qmd/lec22.html#slide-2-week-13",
    "title": "[Lec 22] Data 6 Fall 2024 - Sampling and Computational Social Science",
    "section": "Slide 2: Week 13",
    "text": "Slide 2: Week 13\n\nQuiz 2 grades will come out tomorrow night\n\nA few observations:\n\nQuiz 1 median: 89, mean: 81\nQuiz 2 median: 79, mean: 78\n\nQuiz 2 was more difficult than Quiz 1 (particularly the coding questions). However, there were fewer outliers.\nClobber policy based on the pre-midterm 2 material. Likely a z-score clobber. I’ll update the syllabus end-of-week\n\nWe’re in the home stretch!\nAnnouncements!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec22.html#slide-3-final-project-details",
    "href": "fa24/lectures_qmd/lec22.html#slide-3-final-project-details",
    "title": "[Lec 22] Data 6 Fall 2024 - Sampling and Computational Social Science",
    "section": "Slide 3: Final Project Details",
    "text": "Slide 3: Final Project Details\n\nLarge language models have transformed the way that we approach computational social science\nBig question: How accurately can LLMs classify/detect hate speech? Empathy? Misinformation?\n2 Parts to the Final Project\n\nPart 0: Fill out the survey due tomorrow night for partner matching. If you have someone in mind, I will do my best to honor that request.\n\nWednesday you will get started on Part 1 of the project\n\nPart 1 (Assigned tonight, due November 25th)\n\nPick a dataset, as well as a CSS task\nYou’ll classify data by hand (just a little, it’s a very manual process)\n\nPart 2 (Assigned November 25th, due December 9th)\n\nUse LLMs to speed up this process. Investigate your findings!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec22.html#slide-4-todays-roadmap",
    "href": "fa24/lectures_qmd/lec22.html#slide-4-todays-roadmap",
    "title": "[Lec 22] Data 6 Fall 2024 - Sampling and Computational Social Science",
    "section": "Slide 4: Today’s Roadmap",
    "text": "Slide 4: Today’s Roadmap\n\nComputational Social Science\nSampling Approaches\nLecture 22, Data 6 Fall 2024"
  },
  {
    "objectID": "fa24/lectures_qmd/lec22.html#slide-5-computational-social-science",
    "href": "fa24/lectures_qmd/lec22.html#slide-5-computational-social-science",
    "title": "[Lec 22] Data 6 Fall 2024 - Sampling and Computational Social Science",
    "section": "Slide 5: Computational Social Science",
    "text": "Slide 5: Computational Social Science\n\n➤\n\nRecap\n\n\nSample Setting\n\n\nBiases\n\n\nSampling Approaches"
  },
  {
    "objectID": "fa24/lectures_qmd/lec22.html#slide-6-what-is-computational-social-science",
    "href": "fa24/lectures_qmd/lec22.html#slide-6-what-is-computational-social-science",
    "title": "[Lec 22] Data 6 Fall 2024 - Sampling and Computational Social Science",
    "section": "Slide 6: What is Computational Social Science?",
    "text": "Slide 6: What is Computational Social Science?\n\n\nSpeaker notes\n\nA little useless…"
  },
  {
    "objectID": "fa24/lectures_qmd/lec22.html#slide-7-what-is-computational-social-science",
    "href": "fa24/lectures_qmd/lec22.html#slide-7-what-is-computational-social-science",
    "title": "[Lec 22] Data 6 Fall 2024 - Sampling and Computational Social Science",
    "section": "Slide 7: What is Computational Social Science?",
    "text": "Slide 7: What is Computational Social Science?\n\n\nSpeaker notes\n\nSource: https://direct.mit.edu/coli/article/50/1/237/118498/Can-Large-Language-Models-Transform-Computational"
  },
  {
    "objectID": "fa24/lectures_qmd/lec22.html#slide-8-language-from-police-body-camera-footage-shows-racial-disparities-in-officer-respect",
    "href": "fa24/lectures_qmd/lec22.html#slide-8-language-from-police-body-camera-footage-shows-racial-disparities-in-officer-respect",
    "title": "[Lec 22] Data 6 Fall 2024 - Sampling and Computational Social Science",
    "section": "Slide 8: Language from police body camera footage shows racial disparities in officer respect",
    "text": "Slide 8: Language from police body camera footage shows racial disparities in officer respect\n\n\nSpeaker notes\n\nSource: https://law.stanford.edu/wp-content/uploads/2017/06/PNAS-2017-Voigt-1702413114.pdf"
  },
  {
    "objectID": "fa24/lectures_qmd/lec22.html#slide-9-language-from-police-body-camera-footage-shows-racial-disparities-in-officer-respect",
    "href": "fa24/lectures_qmd/lec22.html#slide-9-language-from-police-body-camera-footage-shows-racial-disparities-in-officer-respect",
    "title": "[Lec 22] Data 6 Fall 2024 - Sampling and Computational Social Science",
    "section": "Slide 9: Language from police body camera footage shows racial disparities in officer respect",
    "text": "Slide 9: Language from police body camera footage shows racial disparities in officer respect\n\n\nSpeaker notes\n\nSource: https://law.stanford.edu/wp-content/uploads/2017/06/PNAS-2017-Voigt-1702413114.pdf"
  },
  {
    "objectID": "fa24/lectures_qmd/lec22.html#slide-10-predicting-epidemics-using-search-engine-data-a-comparative-study-on-measles-in-the-largest-countries-of-europe",
    "href": "fa24/lectures_qmd/lec22.html#slide-10-predicting-epidemics-using-search-engine-data-a-comparative-study-on-measles-in-the-largest-countries-of-europe",
    "title": "[Lec 22] Data 6 Fall 2024 - Sampling and Computational Social Science",
    "section": "Slide 10: Predicting epidemics using search engine data: a comparative study on measles in the largest countries of Europe",
    "text": "Slide 10: Predicting epidemics using search engine data: a comparative study on measles in the largest countries of Europe\n\n\nSpeaker notes\n\nhttps://bmcpublichealth.biomedcentral.com/articles/10.1186/s12889-020-10106-8"
  },
  {
    "objectID": "fa24/lectures_qmd/lec22.html#slide-11-class-activity",
    "href": "fa24/lectures_qmd/lec22.html#slide-11-class-activity",
    "title": "[Lec 22] Data 6 Fall 2024 - Sampling and Computational Social Science",
    "section": "Slide 11: Class Activity",
    "text": "Slide 11: Class Activity\n\nhttps://direct.mit.edu/coli/article/50/1/237/118498/Can-Large-Language-Models-Transform-Computational\nRead over your assigned utterance-level and conversational-level data. How difficult do you think it would be to perform a CSS classification task with these types of data?\nTed’s and Nikita’s Group: 3.1.1-3.1.3\nKimberly’s and Caroline’s Group: 3.1.4-3.1.6\nAnnie’s and Abi’s Group: 3.1.7-3.1.9\nHenry’s and Andy’s Group 3.1.10-3.2.1\nAbhi’s Group 3.2.2 - 3.2.4\nMarcela’s Group: 3.2.5-3.2.6\n\n\n\nSpeaker notes\n\nhttps://direct.mit.edu/coli/article/50/1/237/118498/Can-Large-Language-Models-Transform-Computational"
  },
  {
    "objectID": "fa24/lectures_qmd/lec22.html#slide-12-css-task-overview-discussion",
    "href": "fa24/lectures_qmd/lec22.html#slide-12-css-task-overview-discussion",
    "title": "[Lec 22] Data 6 Fall 2024 - Sampling and Computational Social Science",
    "section": "Slide 12: CSS Task Overview & Discussion",
    "text": "Slide 12: CSS Task Overview & Discussion\n\nTed & Nikita’s group\nDialect features, emotions, figurative language\n\nDialect feature\n\nBased on how they talk (diction, grammar, spelling)\n\nEmotions\n\nExpressive language, fear, happiness, anger\nAnger → easy\n\nFigurative language\n\nDenotative meaning vs connotative meaning\n\nDifficulty: depends, rhetoric devices like metaphors that are pretty easy.\nSarcasm could be hard"
  },
  {
    "objectID": "fa24/lectures_qmd/lec22.html#slide-13-css-task-overview-discussion",
    "href": "fa24/lectures_qmd/lec22.html#slide-13-css-task-overview-discussion",
    "title": "[Lec 22] Data 6 Fall 2024 - Sampling and Computational Social Science",
    "section": "Slide 13: CSS Task Overview & Discussion",
    "text": "Slide 13: CSS Task Overview & Discussion\n\nHate speech, humor, ideology\nHate speech\n\nHarm individuals/group based on stereotype\n\nHard to detect → stereotypes are rooted in ideology. Is it hate speech or common sense in society?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec22.html#slide-14-sample-setting",
    "href": "fa24/lectures_qmd/lec22.html#slide-14-sample-setting",
    "title": "[Lec 22] Data 6 Fall 2024 - Sampling and Computational Social Science",
    "section": "Slide 14: Sample Setting",
    "text": "Slide 14: Sample Setting\n\n➤\n\nRecap\n\n\nSample Setting\n\n\nBiases\n\n\nSampling Approaches"
  },
  {
    "objectID": "fa24/lectures_qmd/lec22.html#slide-15-why-talk-about-samples",
    "href": "fa24/lectures_qmd/lec22.html#slide-15-why-talk-about-samples",
    "title": "[Lec 22] Data 6 Fall 2024 - Sampling and Computational Social Science",
    "section": "Slide 15: Why talk about samples?",
    "text": "Slide 15: Why talk about samples?\n\nIf you want to create your own dataset, rather than use materials-based research\nRemember the concepts of external validity/generalizability!"
  },
  {
    "objectID": "fa24/lectures_qmd/lec22.html#slide-16-what-is-a-sample",
    "href": "fa24/lectures_qmd/lec22.html#slide-16-what-is-a-sample",
    "title": "[Lec 22] Data 6 Fall 2024 - Sampling and Computational Social Science",
    "section": "Slide 16: What is a Sample?",
    "text": "Slide 16: What is a Sample?\n\nA sample is a subset of the population used to make inferences about the overall group.\nExamples:\n\nA classroom of students in a school.\n\nSample: classroom\nPopulation: student body of the school\n\nPicking out 10 marbles from a bag with 100 marbles.\n\nSample: 10 marbles\nPopulation: bag of marbles\n\nPublished papers in an academic journal.\n\nSample: published papers in the journal\nPopulation: all research happening in the field"
  },
  {
    "objectID": "fa24/lectures_qmd/lec22.html#slide-17-motivating-question",
    "href": "fa24/lectures_qmd/lec22.html#slide-17-motivating-question",
    "title": "[Lec 22] Data 6 Fall 2024 - Sampling and Computational Social Science",
    "section": "Slide 17: Motivating Question",
    "text": "Slide 17: Motivating Question\n\nWhy would would we need to take a sample? What are the pros and cons?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec22.html#slide-18-population-vs.-sampling-frame-vs.-sample",
    "href": "fa24/lectures_qmd/lec22.html#slide-18-population-vs.-sampling-frame-vs.-sample",
    "title": "[Lec 22] Data 6 Fall 2024 - Sampling and Computational Social Science",
    "section": "Slide 18: Population vs. Sampling Frame vs. Sample",
    "text": "Slide 18: Population vs. Sampling Frame vs. Sample\n\nGiven a research question, the population is the group you want to learn something about.\n\nHowever, directly studying the population as a whole is often not possible! Data might not exist at that scale, or it might be too costly to collect, if it’s even possible to gather that information.\n\nSo, we want to use a sample from the population to make inferences.\n\nIf the sample is a good representation of the population, we can make useful analyses at a much lower cost.\n\nDepending on how we select our sample, we may miss individuals from the population we’re interested in, and we might also include individuals that are not in the population.\n\nThe list we actually draw our sample from is the sampling frame."
  },
  {
    "objectID": "fa24/lectures_qmd/lec22.html#slide-19-population-vs.-sampling-frame-vs.-sample",
    "href": "fa24/lectures_qmd/lec22.html#slide-19-population-vs.-sampling-frame-vs.-sample",
    "title": "[Lec 22] Data 6 Fall 2024 - Sampling and Computational Social Science",
    "section": "Slide 19: Population vs. Sampling Frame vs. Sample",
    "text": "Slide 19: Population vs. Sampling Frame vs. Sample\n\nExamples:\n\nA classroom of students in a school.\n\nSample: classroom\nPopulation: student body of the school\n\nPicking out 10 marbles from a bag with 100 marbles.\n\nSample: 10 marbles\nPopulation: bag of marbles\n\nPublished papers in an academic journal.\n\nSample: published papers in the journal\nPopulation: all research happening in the field\n\n\nSampling Frame: All classrooms\nSampling Frame: All marbles\nSampling Frame: All accessible papers"
  },
  {
    "objectID": "fa24/lectures_qmd/lec22.html#slide-20-visualizing-the-relationship",
    "href": "fa24/lectures_qmd/lec22.html#slide-20-visualizing-the-relationship",
    "title": "[Lec 22] Data 6 Fall 2024 - Sampling and Computational Social Science",
    "section": "Slide 20: Visualizing the Relationship",
    "text": "Slide 20: Visualizing the Relationship\n\nPopulation\nSampling Frame\nSample"
  },
  {
    "objectID": "fa24/lectures_qmd/lec22.html#slide-21-population-vs.-sampling-frame-vs.-sample",
    "href": "fa24/lectures_qmd/lec22.html#slide-21-population-vs.-sampling-frame-vs.-sample",
    "title": "[Lec 22] Data 6 Fall 2024 - Sampling and Computational Social Science",
    "section": "Slide 21: Population vs. Sampling Frame vs. Sample",
    "text": "Slide 21: Population vs. Sampling Frame vs. Sample\n\nLet’s say you’re planning a social event for all second-year students at your school. Since you only have the budget to cater pizza, you want to figure out what pizza toppings second-year students enjoy, and buy pizza toppings according to how popular they are.\n\nOur population is second-year students. Since our social event is for second-year students, the preferences of students that are not second-years is not relevant.\n\nIn order to figure out the most popular flavors, you survey every student walking into the cafeteria from 12 PM to 1 PM by asking what their favorite topping is. Assume that everyone responds.\n\nOur sampling frame is students walking into the cafeteria between 12 and 1."
  },
  {
    "objectID": "fa24/lectures_qmd/lec22.html#slide-22-population-vs.-sampling-frame-vs.-sample",
    "href": "fa24/lectures_qmd/lec22.html#slide-22-population-vs.-sampling-frame-vs.-sample",
    "title": "[Lec 22] Data 6 Fall 2024 - Sampling and Computational Social Science",
    "section": "Slide 22: Population vs. Sampling Frame vs. Sample",
    "text": "Slide 22: Population vs. Sampling Frame vs. Sample\n\nIf we draw a sample from this sampling frame, is our sample representative? Why or why not?\n\nNot necessarily. Our survey will include the responses of students that are not second-years, who might have different preferences than the second-years.\n\nHow can we change our sampling method to make our sample look more like our population?\n\nWe could send out an email to only second-year students, only record the response of second-year students, conduct the survey in more locations…\n\nIf a sample is representative, then it looks like the population. In this case, our sample may not be very representative.\nAre our results generalizable?\n\nMaybe! For example, first-year students might have similar pizza preferences, but professors might not."
  },
  {
    "objectID": "fa24/lectures_qmd/lec22.html#slide-23-key-terms",
    "href": "fa24/lectures_qmd/lec22.html#slide-23-key-terms",
    "title": "[Lec 22] Data 6 Fall 2024 - Sampling and Computational Social Science",
    "section": "Slide 23: Key Terms",
    "text": "Slide 23: Key Terms\n\nPopulation: the group you want to learn something about\nSampling frame: the list from which the sample is taken\n\nRemember that this is not necessarily the same as the population!\n\nSample: a subset of the sampling frame used to make inferences about the population\nRepresentativeness: how similar a sample is to the intended population\nGeneralizability: the degree to which your results can be applied to a broader population or domain of interest, based on your sampling and data collection methods"
  },
  {
    "objectID": "fa24/lectures_qmd/lec22.html#slide-24-questions",
    "href": "fa24/lectures_qmd/lec22.html#slide-24-questions",
    "title": "[Lec 22] Data 6 Fall 2024 - Sampling and Computational Social Science",
    "section": "Slide 24: Questions?",
    "text": "Slide 24: Questions?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec22.html#slide-25-sampling-approaches",
    "href": "fa24/lectures_qmd/lec22.html#slide-25-sampling-approaches",
    "title": "[Lec 22] Data 6 Fall 2024 - Sampling and Computational Social Science",
    "section": "Slide 25: Sampling Approaches",
    "text": "Slide 25: Sampling Approaches\n\n➤\n\nRecap\n\n\nSample Setting\n\n\nBiases\n\n\nSampling Approaches"
  },
  {
    "objectID": "fa24/lectures_qmd/lec22.html#slide-26-probabilistic-sampling-methods",
    "href": "fa24/lectures_qmd/lec22.html#slide-26-probabilistic-sampling-methods",
    "title": "[Lec 22] Data 6 Fall 2024 - Sampling and Computational Social Science",
    "section": "Slide 26: Probabilistic Sampling Methods",
    "text": "Slide 26: Probabilistic Sampling Methods"
  },
  {
    "objectID": "fa24/lectures_qmd/lec22.html#slide-27-simple-random-sampling",
    "href": "fa24/lectures_qmd/lec22.html#slide-27-simple-random-sampling",
    "title": "[Lec 22] Data 6 Fall 2024 - Sampling and Computational Social Science",
    "section": "Slide 27: Simple Random Sampling",
    "text": "Slide 27: Simple Random Sampling\n\nSample drawn uniformly at random, without replacement\nEvery subset of the population has the same chance of being chosen from the sampling frame\n\nEach individual has the same probability of selection as any other individual\nEach pair has the same probability of selection as any other pair\nEach trio has the same probability of selection as any other trio…"
  },
  {
    "objectID": "fa24/lectures_qmd/lec22.html#slide-28-complex-sampling",
    "href": "fa24/lectures_qmd/lec22.html#slide-28-complex-sampling",
    "title": "[Lec 22] Data 6 Fall 2024 - Sampling and Computational Social Science",
    "section": "Slide 28: Complex Sampling",
    "text": "Slide 28: Complex Sampling\n\nStratified random sampling: Divide populations into subgroups (these are the strata) based on population characteristics, then draw random sample from each strata.\n\nCharacteristics within each strata should be homogenous, but characteristics between different strata should be heterogeneous\nRequires detailed population information, which may not be readily available\nImproves representativeness by carefully curating the makeup of the sampling frame"
  },
  {
    "objectID": "fa24/lectures_qmd/lec22.html#slide-29-non-probabilistic-sampling-methods",
    "href": "fa24/lectures_qmd/lec22.html#slide-29-non-probabilistic-sampling-methods",
    "title": "[Lec 22] Data 6 Fall 2024 - Sampling and Computational Social Science",
    "section": "Slide 29: Non-Probabilistic Sampling Methods",
    "text": "Slide 29: Non-Probabilistic Sampling Methods"
  },
  {
    "objectID": "fa24/lectures_qmd/lec22.html#slide-30-quota-sampling",
    "href": "fa24/lectures_qmd/lec22.html#slide-30-quota-sampling",
    "title": "[Lec 22] Data 6 Fall 2024 - Sampling and Computational Social Science",
    "section": "Slide 30: Quota Sampling",
    "text": "Slide 30: Quota Sampling\n\nQuota sampling is a non-probability sampling technique where you arbitrarily select a sample that includes a specific number of samples from particular categories.\n\nExample: You’re a classical musician who wants to know what piece of music other orchestra members want to play. In order to figure this out, you ask the first two violin players, first two trumpet players, first flute player, first three viola players, and first percussionist you see at rehearsal.\nEasier to do than stratified random sampling, with similar intentions"
  },
  {
    "objectID": "fa24/lectures_qmd/lec22.html#slide-31-snowball-sampling",
    "href": "fa24/lectures_qmd/lec22.html#slide-31-snowball-sampling",
    "title": "[Lec 22] Data 6 Fall 2024 - Sampling and Computational Social Science",
    "section": "Slide 31: Snowball Sampling",
    "text": "Slide 31: Snowball Sampling\n\nSnowball sampling is a non-probabilistic sampling method where existing study subjects recruit future subjects from among their acquaintances, such as through a referral program.\n\nUseful when study subjects have a rare characteristic that you are interested in studying. The concept of homophily is why it’s easier to find subjects with the rare characteristic by referral.\nThis could lead to skewed results due to in-group bias and bias introduced through the non-probabilistic method of constructing the sample."
  },
  {
    "objectID": "fa24/lectures_qmd/lec22.html#slide-32-questions",
    "href": "fa24/lectures_qmd/lec22.html#slide-32-questions",
    "title": "[Lec 22] Data 6 Fall 2024 - Sampling and Computational Social Science",
    "section": "Slide 32: Questions?",
    "text": "Slide 32: Questions?"
  },
  {
    "objectID": "fa24/lectures_qmd/lec22.html#slide-33-recap",
    "href": "fa24/lectures_qmd/lec22.html#slide-33-recap",
    "title": "[Lec 22] Data 6 Fall 2024 - Sampling and Computational Social Science",
    "section": "Slide 33: Recap",
    "text": "Slide 33: Recap\n\nNext Time\nComputational Social Science - what is it?\nDifferent types of sampling\nQuick check: https://docs.google.com/forms/d/e/1FAIpQLSdjvk8kpQepzncipVJ-UIetXcz4e1NCLW3rttW3Focmxvgnaw/viewform?usp=sf_link\nStarting the final project!"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec22/index.html",
    "href": "fa24/lectures_qmd_complete/lec22/index.html",
    "title": "Sampling and Computational Social Science",
    "section": "",
    "text": "This chapter covers the key concepts from Lecture 22."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec22/index.html#topics-covered",
    "href": "fa24/lectures_qmd_complete/lec22/index.html#topics-covered",
    "title": "Sampling and Computational Social Science",
    "section": "Topics Covered",
    "text": "Topics Covered\n\nComputational Social Science\nSampling Approaches"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec25/randomness.html",
    "href": "fa24/lectures_qmd_complete/lec25/randomness.html",
    "title": "Randomness",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 25\nA quick dive into some statistics.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec25/randomness.html#sampling-and-randomness",
    "href": "fa24/lectures_qmd_complete/lec25/randomness.html#sampling-and-randomness",
    "title": "Randomness",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 25\nA quick dive into some statistics.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec25/randomness.html#randomness",
    "href": "fa24/lectures_qmd_complete/lec25/randomness.html#randomness",
    "title": "Randomness",
    "section": "Randomness",
    "text": "Randomness\n\n\nRandomness\n\n\nSimulation\n\n\nRepeated Simulations\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec25/randomness.html#computation-and-randomness",
    "href": "fa24/lectures_qmd_complete/lec25/randomness.html#computation-and-randomness",
    "title": "Randomness",
    "section": "Computation and Randomness",
    "text": "Computation and Randomness\n\nQuestion: What problem does this pose?\nAnswer: Computers cannot, on their own, generate truly random numbers. So… now what? 🤔\nComputer programs take our instructions (code) and execute them. Their outputs are entirely predictable.\nRandomness is the lack of pattern or predictability in events. (Some events may be more likely than others.)"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec25/index.html",
    "href": "fa24/lectures_qmd_complete/lec25/index.html",
    "title": "Sampling and Randomness",
    "section": "",
    "text": "This chapter covers the key concepts from Lecture 25."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec25/index.html#topics-covered",
    "href": "fa24/lectures_qmd_complete/lec25/index.html#topics-covered",
    "title": "Sampling and Randomness",
    "section": "Topics Covered",
    "text": "Topics Covered\n\nSampling\nRandomness"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/higher-order-functions.html",
    "href": "fa24/lectures_qmd_complete/lec13/higher-order-functions.html",
    "title": "Higher order functions",
    "section": "",
    "text": "Higher order functions\n\n2.Grouping with .group\n\nGrouping by Multiple Columns\n\n\nPivot Tables with .pivot\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/higher-order-functions.html#higher-order-functions",
    "href": "fa24/lectures_qmd_complete/lec13/higher-order-functions.html#higher-order-functions",
    "title": "Higher order functions",
    "section": "",
    "text": "Higher order functions\n\n2.Grouping with .group\n\nGrouping by Multiple Columns\n\n\nPivot Tables with .pivot\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/higher-order-functions.html#higher-order-functions-1",
    "href": "fa24/lectures_qmd_complete/lec13/higher-order-functions.html#higher-order-functions-1",
    "title": "Higher order functions",
    "section": "Higher Order Functions",
    "text": "Higher Order Functions\n\nHigher order functions are functions that can take in a function as an input or returns a function as an output.\nWe’ll be focusing on the first case: functions that take in inputs.\nWhat is an example of a method that takes in a function as a parameter that we’ve used in this class?\nSource"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/higher-order-functions.html#higher-order-functions-demo",
    "href": "fa24/lectures_qmd_complete/lec13/higher-order-functions.html#higher-order-functions-demo",
    "title": "Higher order functions",
    "section": "Higher order functions: Demo",
    "text": "Higher order functions: Demo\n\nDemo link here\nSource"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/grouping-with-group.html",
    "href": "fa24/lectures_qmd_complete/lec13/grouping-with-group.html",
    "title": "Grouping with .group",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 12\nExtracting and aggregating information from tables.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/grouping-with-group.html#grouping-pivoting",
    "href": "fa24/lectures_qmd_complete/lec13/grouping-with-group.html#grouping-pivoting",
    "title": "Grouping with .group",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 12\nExtracting and aggregating information from tables.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/grouping-with-group.html#grouping-with-.group",
    "href": "fa24/lectures_qmd_complete/lec13/grouping-with-group.html#grouping-with-.group",
    "title": "Grouping with .group",
    "section": "Grouping with .group",
    "text": "Grouping with .group\n\n\nGrouping with .group\n\n\nGrouping by Multiple Columns\n\n\nPivot Tables with .pivot\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/grouping-with-group.html#aggregating-with-.group",
    "href": "fa24/lectures_qmd_complete/lec13/grouping-with-group.html#aggregating-with-.group",
    "title": "Grouping with .group",
    "section": "Aggregating with .group()",
    "text": "Aggregating with .group()\n\nThe term “group” in data science is most commonly associated with data aggregation and disaggregation.\nAggregation: A process in which information is gathered and expressed in collective or summary form.\nUseful for getting information about groups based on variables (age, profession, income) while simultaneously preserving confidentiality of individuals\nDisaggregation (aka disentanglement): A process of taking aggregated data and breaking it down into smaller information units.\nUseful to highlight outcomes that pertain to individual subsets of results/outcomes (e.g., gender, location, socio-cultural/ethnic background, age groups, etc.) to expose hidden trends\nSource\n\n\n\nSpeaker notes\n\nhttps://www.nccih.ca/docs/context/FS-ImportanceDisaggregatedData-EN.pdf"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/grouping-with-group.html#group",
    "href": "fa24/lectures_qmd_complete/lec13/grouping-with-group.html#group",
    "title": "Grouping with .group",
    "section": ".group()",
    "text": ".group()\n\nQuestion: What is the relationship between the table on the right and the table on the left?\nAnswer: Same data, different unit of analysis. The right table is an aggregated view of the left table, grouped by artist."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/grouping-with-group.html#group-1",
    "href": "fa24/lectures_qmd_complete/lec13/grouping-with-group.html#group-1",
    "title": "Grouping with .group",
    "section": ".group()",
    "text": ".group()\n\nThe method t.group(column) counts the number of rows for each unique value in column, and returns a two-column table with the results.\nNote: t.group(column) only keeps the column column, the frequency counts, and no others."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/grouping-with-group.html#group-sort-take",
    "href": "fa24/lectures_qmd_complete/lec13/grouping-with-group.html#group-sort-take",
    "title": "Grouping with .group",
    "section": "group + sort + take = ❤️",
    "text": "group + sort + take = ❤️\n\nThis is a common pattern: grouping and then sorting, and then taking.\nHere, it gives us the 10 artists with the most songs in the Spotify Daily Top 200 streams table.\ntop_10_artists = streams.group(‘artist_names’)\n\n.sort(‘count’,\ndescending=True)\n\n.take(np.arange(10))"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/grouping-with-group.html#advanced-grouping",
    "href": "fa24/lectures_qmd_complete/lec13/grouping-with-group.html#advanced-grouping",
    "title": "Grouping with .group",
    "section": "Advanced Grouping",
    "text": "Advanced Grouping\n\n\nGrouping with .group\n\n\nGrouping by Multiple Columns\n\n\nPivot Tables with .pivot\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/grouping-with-group.html#gm.groupbrand-np.mean",
    "href": "fa24/lectures_qmd_complete/lec13/grouping-with-group.html#gm.groupbrand-np.mean",
    "title": "Grouping with .group",
    "section": "gm.group(‘Brand’, np.mean)",
    "text": "gm.group(‘Brand’, np.mean)\n\ngm.group(‘Brand’, np.mean)"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/grouping-with-group.html#group-2",
    "href": "fa24/lectures_qmd_complete/lec13/grouping-with-group.html#group-2",
    "title": "Grouping with .group",
    "section": ".group",
    "text": ".group\n\nThe method t.group(column, collect) combines/aggregates all rows with the same value for column into a single row in the resulting table, according to the function collect.\nThe collect argument is optional.\n\nlen: number of grouped values (default).\nlist: list of all grouped values.\nsum: total of all grouped values.\nnp.mean: average of all grouped values.\n\ncollect can be function that works on arrays!\n\nYou can write your own functions if you need to.\nIf it doesn’t work with non-numeric values (like sum), it skips non-numeric columns."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/grouping-with-group.html#which-columns-should-we-group-by",
    "href": "fa24/lectures_qmd_complete/lec13/grouping-with-group.html#which-columns-should-we-group-by",
    "title": "Grouping with .group",
    "section": "Which Columns Should We Group By?",
    "text": "Which Columns Should We Group By?\n\nIt usually only makes sense to group by columns that store categorical information that is shared across multiple rows.\nIf you had a bunch of dogs, you could group by\nBreed.\nSize (small, medium, large).\nSex.\nColor.\nIt wouldn’t make sense to group by weight in pounds, since every dog will have a slightly different weight and two dogs having the exact same weight doesn’t tell you much."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/grouping-with-group.html#grouping-by-multiple-columns",
    "href": "fa24/lectures_qmd_complete/lec13/grouping-with-group.html#grouping-by-multiple-columns",
    "title": "Grouping with .group",
    "section": "Grouping by Multiple Columns",
    "text": "Grouping by Multiple Columns\n\n\nGrouping with .group\n\n\nGrouping by Multiple Columns\n\n\nPivot Tables with .pivot\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/grouping-with-group.html#grouping-by-multiple-columns-1",
    "href": "fa24/lectures_qmd_complete/lec13/grouping-with-group.html#grouping-by-multiple-columns-1",
    "title": "Grouping with .group",
    "section": "Grouping by Multiple Columns",
    "text": "Grouping by Multiple Columns\n\nIf we pass a list of column names as the first argument to group:\nt.group(column_or_columns, collect)\nthe resulting table has one row for every unique combination of values in the specified columns.\nJust as before, if we call group with a single argument (a list or array), we get back counts. We can specify a collect function if we want to.\nOne row for every combination of Manufacturer and Brand."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec13/grouping-with-group.html#grouping-by-more-than-two-columns",
    "href": "fa24/lectures_qmd_complete/lec13/grouping-with-group.html#grouping-by-more-than-two-columns",
    "title": "Grouping with .group",
    "section": "Grouping by More Than Two Columns",
    "text": "Grouping by More Than Two Columns\n\nYou can group by any number of columns, but we rarely group by more than two columns as the results tend to be less meaningful.\nHere, Manufacturer doesn’t tell us much."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec14/encoding.html",
    "href": "fa24/lectures_qmd_complete/lec14/encoding.html",
    "title": "Encoding",
    "section": "",
    "text": "Examples of Visualization\n\n\nWhat is Visualization?\n\n\nVariable Types\n\n\nEncoding\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec14/encoding.html#encoding",
    "href": "fa24/lectures_qmd_complete/lec14/encoding.html#encoding",
    "title": "Encoding",
    "section": "",
    "text": "Examples of Visualization\n\n\nWhat is Visualization?\n\n\nVariable Types\n\n\nEncoding\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec14/encoding.html#encoding-1",
    "href": "fa24/lectures_qmd_complete/lec14/encoding.html#encoding-1",
    "title": "Encoding",
    "section": "Encoding",
    "text": "Encoding\n\nAn encoding is a mapping from a variable to a visual element.\nFor instance, in bar charts, length can visually encode a numerical variable (here, the average age).\nLonger bar = higher average age."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec14/what-is-visualization.html",
    "href": "fa24/lectures_qmd_complete/lec14/what-is-visualization.html",
    "title": "What is Visualization?",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 14\nThey say a picture is worth a thousand words… right?\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec14/what-is-visualization.html#introduction-to-visualization",
    "href": "fa24/lectures_qmd_complete/lec14/what-is-visualization.html#introduction-to-visualization",
    "title": "What is Visualization?",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 14\nThey say a picture is worth a thousand words… right?\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec14/what-is-visualization.html#examples-of-visualizations",
    "href": "fa24/lectures_qmd_complete/lec14/what-is-visualization.html#examples-of-visualizations",
    "title": "What is Visualization?",
    "section": "Examples of Visualizations",
    "text": "Examples of Visualizations\n\n\nExamples of Visualization\n\n\nWhat is Visualization?\n\n\nVariable Types\n\n\nEncoding\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec14/what-is-visualization.html#florence-nightingales-visualization-depicting-deaths-in-the-crimean-war-1850s.",
    "href": "fa24/lectures_qmd_complete/lec14/what-is-visualization.html#florence-nightingales-visualization-depicting-deaths-in-the-crimean-war-1850s.",
    "title": "What is Visualization?",
    "section": "Florence Nightingale’s visualization depicting deaths in the Crimean war (1850s).",
    "text": "Florence Nightingale’s visualization depicting deaths in the Crimean war (1850s).\n\nFlorence Nightingale’s visualization depicting deaths in the Crimean war (1850s)."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec14/what-is-visualization.html#what-is-visualization",
    "href": "fa24/lectures_qmd_complete/lec14/what-is-visualization.html#what-is-visualization",
    "title": "What is Visualization?",
    "section": "What is Visualization?",
    "text": "What is Visualization?\n\n\nExamples of Visualization\n\n\nWhat is Visualization?\n\n\nVariable Types\n\n\nEncoding\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec14/what-is-visualization.html#whats-the-point-of-visualization",
    "href": "fa24/lectures_qmd_complete/lec14/what-is-visualization.html#whats-the-point-of-visualization",
    "title": "What is Visualization?",
    "section": "What’s the point of visualization?",
    "text": "What’s the point of visualization?\n\nCreating good visualizations is an art as much it is a science; there is often no “correct” way to visualize data.\nWe must be careful and deliberate when visualizing data, especially if our visualizations are going to be used in the real-world.\nIf you want to look at some creative, sophisticated visualizations, see\nThe John Hunter Excellence in Plotting Contest."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec14/what-is-visualization.html#whats-wrong",
    "href": "fa24/lectures_qmd_complete/lec14/what-is-visualization.html#whats-wrong",
    "title": "What is Visualization?",
    "section": "What’s Wrong?",
    "text": "What’s Wrong?\n\nThis graph implies that Swedish cars are “greater” than cars from other countries in some sense, when they’re not.\nThe variable type determines the types of plots (and hence, encodings) that are appropriate.\nOver the next few weeks, we will learn how to create several kinds of plots and learn when each is appropriate."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec14/what-is-visualization.html#visualization-tools",
    "href": "fa24/lectures_qmd_complete/lec14/what-is-visualization.html#visualization-tools",
    "title": "What is Visualization?",
    "section": "Visualization tools",
    "text": "Visualization tools\n\nWithout a computer:\n\nDrawing\nPainting\n\nWith a computer:\n\nWithout programming:\n\nPhotoshop\nFigma\nTableau\n\nWith programming:\n\nmatplotlib\nseaborn\nplotly\nD3.js\n\n\nThere are many Python visualization libraries that integrate well with tables.\nThis is nowhere near a comprehensive list!\nBoth are popular but less “modern”\nNewer, and can create interactive visualizations."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec14/variable-types.html",
    "href": "fa24/lectures_qmd_complete/lec14/variable-types.html",
    "title": "Variable Types",
    "section": "",
    "text": "Examples of Visualization\n\n\nWhat is Visualization?\n\n\nVariable Types\n\n\nEncoding\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec14/variable-types.html#variable-types",
    "href": "fa24/lectures_qmd_complete/lec14/variable-types.html#variable-types",
    "title": "Variable Types",
    "section": "",
    "text": "Examples of Visualization\n\n\nWhat is Visualization?\n\n\nVariable Types\n\n\nEncoding\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec14/variable-types.html#variable-types-1",
    "href": "fa24/lectures_qmd_complete/lec14/variable-types.html#variable-types-1",
    "title": "Variable Types",
    "section": "Variable Types",
    "text": "Variable Types\n\nSuppose we have some data and want to create a visualization.\nQuestion: How do we know what kind of visualization to create? 🤔\nAnswer: It depends on the type(s) of information we want to visualize.\n\nBar charts work sometimes. But not all the time!\n\nWhere we are visualizing different variables (features) of a dataset, a lot depends on the type(s) of variables we’re working with:\nVariable types are different from data types like string, int, Table, etc.\nIn the next few slides we’ll study the different variable feature types, in order to make more informed decisions when creating visualizations."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/overlaid-and-side-by-side-histograms.html",
    "href": "fa24/lectures_qmd_complete/lec15/overlaid-and-side-by-side-histograms.html",
    "title": "Overlaid and Side-by-Side Histograms",
    "section": "",
    "text": "Review: Bar Charts\n\n\nNumerical Distributions, Histograms\n\n\nChoosing Bins\n\n\nOverlaid and Side-by-Side Histograms\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/overlaid-and-side-by-side-histograms.html#numerical-distributions-histograms",
    "href": "fa24/lectures_qmd_complete/lec15/overlaid-and-side-by-side-histograms.html#numerical-distributions-histograms",
    "title": "Overlaid and Side-by-Side Histograms",
    "section": "",
    "text": "Review: Bar Charts\n\n\nNumerical Distributions, Histograms\n\n\nChoosing Bins\n\n\nOverlaid and Side-by-Side Histograms\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/overlaid-and-side-by-side-histograms.html#histograms",
    "href": "fa24/lectures_qmd_complete/lec15/overlaid-and-side-by-side-histograms.html#histograms",
    "title": "Overlaid and Side-by-Side Histograms",
    "section": "Histograms",
    "text": "Histograms\n\nA histogram visualizes the distribution of a numerical variable by binning. The method\nt.hist(column, density = False)\ncreates a histogram of the column column of t. This column must contain numerical values.\nIt automatically chooses bins for us. We can change them."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/overlaid-and-side-by-side-histograms.html#bar-charts-vs.-histograms",
    "href": "fa24/lectures_qmd_complete/lec15/overlaid-and-side-by-side-histograms.html#bar-charts-vs.-histograms",
    "title": "Overlaid and Side-by-Side Histograms",
    "section": "Bar Charts vs. Histograms",
    "text": "Bar Charts vs. Histograms\n\nBar charts visualize the distribution of a categorical variable, or the relationship between a categorical variable and a numerical variable.\nLength of bar corresponds to value.\nWidth of bar means nothing.\nHistograms visualize the distribution of a numerical variable.\nLength of bar corresponds to number of values within bin.\nWidth of bar corresponds to the width of the bin.\n\nWider bin → more values within bin → smoother histogram."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/review-bar-charts.html",
    "href": "fa24/lectures_qmd_complete/lec15/review-bar-charts.html",
    "title": "Review: Bar Charts",
    "section": "",
    "text": "Display all values of a categorical variable, along with their respective frequencies.\nOne bar for each category\nChoose the order of bars\nLength of bar is the frequency (percent or count) of individuals in that category.\nNot a bar chart; each respondent could pick more answer, so the bars represent overlapping groups..\nA bar chart that plots the distribution of the categorical variable Cookie.\nPercents of survey respondents on “a major reason they would find it difficult to quarantine themselves for at least 14 days”\nSource: Pew Research"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/review-bar-charts.html#bar-charts",
    "href": "fa24/lectures_qmd_complete/lec15/review-bar-charts.html#bar-charts",
    "title": "Review: Bar Charts",
    "section": "",
    "text": "Display all values of a categorical variable, along with their respective frequencies.\nOne bar for each category\nChoose the order of bars\nLength of bar is the frequency (percent or count) of individuals in that category.\nNot a bar chart; each respondent could pick more answer, so the bars represent overlapping groups..\nA bar chart that plots the distribution of the categorical variable Cookie.\nPercents of survey respondents on “a major reason they would find it difficult to quarantine themselves for at least 14 days”\nSource: Pew Research"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/review-bar-charts.html#debugging-bar-charts",
    "href": "fa24/lectures_qmd_complete/lec15/review-bar-charts.html#debugging-bar-charts",
    "title": "Review: Bar Charts",
    "section": "Debugging bar charts",
    "text": "Debugging bar charts\n\n\nCategorical Distributions\n\n\nBar Charts\n\n\nGrouped Bar Charts\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/review-bar-charts.html#better-bar-charts",
    "href": "fa24/lectures_qmd_complete/lec15/review-bar-charts.html#better-bar-charts",
    "title": "Review: Bar Charts",
    "section": "Better bar charts",
    "text": "Better bar charts\n\n\nCategorical Distributions\n\n\nBar Charts\n\n\nGrouped Bar Charts\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/review-bar-charts.html#bar-charts-vs.-histograms",
    "href": "fa24/lectures_qmd_complete/lec15/review-bar-charts.html#bar-charts-vs.-histograms",
    "title": "Review: Bar Charts",
    "section": "Bar Charts vs. Histograms",
    "text": "Bar Charts vs. Histograms\n\nBar charts visualize the distribution of a categorical variable, or the relationship between a categorical variable and a numerical variable.\nLength of bar corresponds to value.\nWidth of bar means nothing.\nHistograms visualize the distribution of a numerical variable.\nLength of bar corresponds to number of values within bin.\nWidth of bar corresponds to the width of the bin.\n\nWider bin → more values within bin → smoother histogram."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/choosing-bins.html",
    "href": "fa24/lectures_qmd_complete/lec15/choosing-bins.html",
    "title": "Choosing Bins",
    "section": "",
    "text": "By looking at a histogram, we cannot tell how values are distributed within a bin."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/choosing-bins.html#a-note-on-bins",
    "href": "fa24/lectures_qmd_complete/lec15/choosing-bins.html#a-note-on-bins",
    "title": "Choosing Bins",
    "section": "",
    "text": "By looking at a histogram, we cannot tell how values are distributed within a bin."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/choosing-bins.html#choosing-bins",
    "href": "fa24/lectures_qmd_complete/lec15/choosing-bins.html#choosing-bins",
    "title": "Choosing Bins",
    "section": "Choosing Bins",
    "text": "Choosing Bins\n\n\nReview: Bar Charts\n\n\nNumPy Array Ranges\n\n\nNumerical Distributions, Histograms\n\n\nChoosing Bins\n\n\nOverlaid and Side-by-Side Histograms\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/choosing-bins.html#bins",
    "href": "fa24/lectures_qmd_complete/lec15/choosing-bins.html#bins",
    "title": "Choosing Bins",
    "section": "Bins",
    "text": "Bins\n\n.hist chooses bins by default for us.\nThe resulting histogram often looks nice, but has non-integer bins which are harder for us to interpret.\nWe can choose our own bins.\nWe will only consider histograms where all bins have equal width, though it is possible to draw histograms where bins have unequal width."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/numerical-variables.html",
    "href": "fa24/lectures_qmd_complete/lec15/numerical-variables.html",
    "title": "Numerical Variables",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 15\nAll about histograms and bar charts.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/numerical-variables.html#visualizing-categorical-and-numerical-variables",
    "href": "fa24/lectures_qmd_complete/lec15/numerical-variables.html#visualizing-categorical-and-numerical-variables",
    "title": "Numerical Variables",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 15\nAll about histograms and bar charts.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/numerical-variables.html#summary-categorical-variables",
    "href": "fa24/lectures_qmd_complete/lec15/numerical-variables.html#summary-categorical-variables",
    "title": "Numerical Variables",
    "section": "Summary (Categorical Variables)",
    "text": "Summary (Categorical Variables)\n\nBar charts are used to display the distribution of a categorical variable, or the relationship between a categorical variable and one or more numerical variables.\nThe method t.barh(column_for_categories) creates a bar chart with:\nThe values of the column column_for_categories as the categories on the y-axis. This column should contain a categorical variable, and values should be unique.\nBars for every other column in t. These columns should contain numerical variables.\n\nMultiple other columns → grouped bar chart.\n\nBars should be sorted depending on the type of the categorical variable."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/numerical-variables.html#numerical-distributions-histograms",
    "href": "fa24/lectures_qmd_complete/lec15/numerical-variables.html#numerical-distributions-histograms",
    "title": "Numerical Variables",
    "section": "Numerical Distributions, Histograms",
    "text": "Numerical Distributions, Histograms\n\n\nReview: Bar Charts\n\n\nNumerical Distributions, Histograms\n\n\nChoosing Bins\n\n\nOverlaid and Side-by-Side Histograms\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/numerical-variables.html#towards-numerical-distributions",
    "href": "fa24/lectures_qmd_complete/lec15/numerical-variables.html#towards-numerical-distributions",
    "title": "Numerical Variables",
    "section": "Towards Numerical Distributions",
    "text": "Towards Numerical Distributions\n\nBar charts visualize the distribution of a categorical variable, or the relationship between a categorical variable and one or more numerical variables.\nBar charts cannot display the distribution of a numerical variable.\nQuestion: How might we display the distribution of a numerical variable?\nAnswer: One solution is to combine ranges of values into bins."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/numerical-distributions-histograms.html",
    "href": "fa24/lectures_qmd_complete/lec15/numerical-distributions-histograms.html",
    "title": "Numerical Distributions, Histograms",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 15\nAll about histograms and bar charts.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/numerical-distributions-histograms.html#visualizing-categorical-and-numerical-variables",
    "href": "fa24/lectures_qmd_complete/lec15/numerical-distributions-histograms.html#visualizing-categorical-and-numerical-variables",
    "title": "Numerical Distributions, Histograms",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 15\nAll about histograms and bar charts.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/numerical-distributions-histograms.html#variable-types-and-distributions",
    "href": "fa24/lectures_qmd_complete/lec15/numerical-distributions-histograms.html#variable-types-and-distributions",
    "title": "Numerical Distributions, Histograms",
    "section": "Variable Types and Distributions",
    "text": "Variable Types and Distributions\n\n\nCategorical Distributions\n\n\nBar Charts\n\n\nGrouped Bar Charts\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/numerical-distributions-histograms.html#variable-distributions",
    "href": "fa24/lectures_qmd_complete/lec15/numerical-distributions-histograms.html#variable-distributions",
    "title": "Numerical Distributions, Histograms",
    "section": "Variable Distributions",
    "text": "Variable Distributions\n\nGiven a specific dataset, a variable has a distribution:\nFor each different value of the variable, the frequency of individuals that have that value.\nFrequency: number or percent of individuals (depends on definition of “individual”; more later)\nA distribution table of the categorical variable Cookie. Each row represents a different value of Cookie.\nA bar chart that plots the distribution of the categorical variable Cookie."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/numerical-distributions-histograms.html#numerical-distributions-histograms",
    "href": "fa24/lectures_qmd_complete/lec15/numerical-distributions-histograms.html#numerical-distributions-histograms",
    "title": "Numerical Distributions, Histograms",
    "section": "Numerical Distributions, Histograms",
    "text": "Numerical Distributions, Histograms\n\n\nReview: Bar Charts\n\n\nNumerical Distributions, Histograms\n\n\nChoosing Bins\n\n\nOverlaid and Side-by-Side Histograms\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/numerical-distributions-histograms.html#towards-numerical-distributions",
    "href": "fa24/lectures_qmd_complete/lec15/numerical-distributions-histograms.html#towards-numerical-distributions",
    "title": "Numerical Distributions, Histograms",
    "section": "Towards Numerical Distributions",
    "text": "Towards Numerical Distributions\n\nBar charts visualize the distribution of a categorical variable, or the relationship between a categorical variable and one or more numerical variables.\nBar charts cannot display the distribution of a numerical variable.\nQuestion: How might we display the distribution of a numerical variable?\nAnswer: One solution is to combine ranges of values into bins."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/numerical-distributions-histograms.html#histograms",
    "href": "fa24/lectures_qmd_complete/lec15/numerical-distributions-histograms.html#histograms",
    "title": "Numerical Distributions, Histograms",
    "section": "Histograms",
    "text": "Histograms\n\nA histogram visualizes the distribution of a numerical variable by binning. The method\nt.hist(column, density = False)\ncreates a histogram of the column column of t. This column must contain numerical values.\nIt automatically chooses bins for us. We can change them."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec15/numerical-distributions-histograms.html#bar-charts-vs.-histograms",
    "href": "fa24/lectures_qmd_complete/lec15/numerical-distributions-histograms.html#bar-charts-vs.-histograms",
    "title": "Numerical Distributions, Histograms",
    "section": "Bar Charts vs. Histograms",
    "text": "Bar Charts vs. Histograms\n\nBar charts visualize the distribution of a categorical variable, or the relationship between a categorical variable and a numerical variable.\nLength of bar corresponds to value.\nWidth of bar means nothing.\nHistograms visualize the distribution of a numerical variable.\nLength of bar corresponds to number of values within bin.\nWidth of bar corresponds to the width of the bin.\n\nWider bin → more values within bin → smoother histogram."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec24/llms.html",
    "href": "fa24/lectures_qmd_complete/lec24/llms.html",
    "title": "LLMs",
    "section": "",
    "text": "LLMs\n\n\nLocal LLMs Demo\n\n\nTraining Data\n\n\nAI Chatbot Demo\n\n\nRisks\n\n\nImprovements\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec24/llms.html#large-language-models-llms",
    "href": "fa24/lectures_qmd_complete/lec24/llms.html#large-language-models-llms",
    "title": "LLMs",
    "section": "",
    "text": "LLMs\n\n\nLocal LLMs Demo\n\n\nTraining Data\n\n\nAI Chatbot Demo\n\n\nRisks\n\n\nImprovements\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec24/llms.html#defining-large-language-models-llms",
    "href": "fa24/lectures_qmd_complete/lec24/llms.html#defining-large-language-models-llms",
    "title": "LLMs",
    "section": "Defining Large Language Models (LLMs)",
    "text": "Defining Large Language Models (LLMs)\n\nQuestion: What is a LLM?\nAnswer: A LLM is a type of artificial intelligence (AI) program that can recognize and generate text, among other tasks. LLMs are trained on huge sets of data — hence the name “large.” LLMs are built on machine learning: specifically, a type of neural network called a transformer model.\nGenerative Pretrained Transformer (GPT)\nare LLMs\nSo… you’ve potentially used LLMs (hopefully following academic guidelines)."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec24/llms.html#potential-risks-with-llms",
    "href": "fa24/lectures_qmd_complete/lec24/llms.html#potential-risks-with-llms",
    "title": "LLMs",
    "section": "Potential Risks with LLMs",
    "text": "Potential Risks with LLMs\n\nCopyright\nPoor Training Data → Made up information\nImpersonation"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec24/local-llms-demo.html",
    "href": "fa24/lectures_qmd_complete/lec24/local-llms-demo.html",
    "title": "Local LLMs Demo",
    "section": "",
    "text": "LLMs\n\n\nLocal LLMs Demo\n\n\nTraining Data\n\n\nAI Chatbot Demo\n\n\nRisks\n\n\nImprovements\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec24/local-llms-demo.html#large-language-models-llms",
    "href": "fa24/lectures_qmd_complete/lec24/local-llms-demo.html#large-language-models-llms",
    "title": "Local LLMs Demo",
    "section": "",
    "text": "LLMs\n\n\nLocal LLMs Demo\n\n\nTraining Data\n\n\nAI Chatbot Demo\n\n\nRisks\n\n\nImprovements\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec24/local-llms-demo.html#defining-large-language-models-llms",
    "href": "fa24/lectures_qmd_complete/lec24/local-llms-demo.html#defining-large-language-models-llms",
    "title": "Local LLMs Demo",
    "section": "Defining Large Language Models (LLMs)",
    "text": "Defining Large Language Models (LLMs)\n\nQuestion: What is a LLM?\nAnswer: A LLM is a type of artificial intelligence (AI) program that can recognize and generate text, among other tasks. LLMs are trained on huge sets of data — hence the name “large.” LLMs are built on machine learning: specifically, a type of neural network called a transformer model.\nGenerative Pretrained Transformer (GPT)\nare LLMs\nSo… you’ve potentially used LLMs (hopefully following academic guidelines)."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec24/local-llms-demo.html#ai-chatbot-demo",
    "href": "fa24/lectures_qmd_complete/lec24/local-llms-demo.html#ai-chatbot-demo",
    "title": "Local LLMs Demo",
    "section": "AI Chatbot Demo",
    "text": "AI Chatbot Demo\nhttps://data6-llm-79214fa7cb82.herokuapp.com/\n\n➤\n\nLLMs\n\n\nLocal LLMs Demo\n\n\nTraining Data\n\n\nAI Chatbot Demo\n\n\nRisks\n\n\nImprovements"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec24/local-llms-demo.html#potential-risks-with-llms",
    "href": "fa24/lectures_qmd_complete/lec24/local-llms-demo.html#potential-risks-with-llms",
    "title": "Local LLMs Demo",
    "section": "Potential Risks with LLMs",
    "text": "Potential Risks with LLMs\n\nCopyright\nPoor Training Data → Made up information\nImpersonation"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec24/local-llms-demo.html#api-calls-demo",
    "href": "fa24/lectures_qmd_complete/lec24/local-llms-demo.html#api-calls-demo",
    "title": "Local LLMs Demo",
    "section": "API Calls (Demo)",
    "text": "API Calls (Demo)\n\n➤\n\nLLMs\n\n\nLocal LLMs Demo\n\n\nTraining Data\n\n\nAI Chatbot Demo\n\n\nRisks\n\n\nImprovements\n\n\nAPI Calls"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec24/index.html",
    "href": "fa24/lectures_qmd_complete/lec24/index.html",
    "title": "LLMs",
    "section": "",
    "text": "This chapter covers the key concepts from Lecture 24."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec24/index.html#topics-covered",
    "href": "fa24/lectures_qmd_complete/lec24/index.html#topics-covered",
    "title": "LLMs",
    "section": "Topics Covered",
    "text": "Topics Covered\n\nLLMs\nLocal LLMs Demo\nTraining Data\nAI Chatbot Demo\nRisks\nImprovements\nAPI Calls"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec24/risks.html",
    "href": "fa24/lectures_qmd_complete/lec24/risks.html",
    "title": "Risks",
    "section": "",
    "text": "➤\n\nLLMs\n\n\nLocal LLMs Demo\n\n\nTraining Data\n\n\nAI Chatbot Demo\n\n\nRisks\n\n\nImprovements"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec24/risks.html#risks",
    "href": "fa24/lectures_qmd_complete/lec24/risks.html#risks",
    "title": "Risks",
    "section": "",
    "text": "➤\n\nLLMs\n\n\nLocal LLMs Demo\n\n\nTraining Data\n\n\nAI Chatbot Demo\n\n\nRisks\n\n\nImprovements"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec24/risks.html#potential-risks-with-llms",
    "href": "fa24/lectures_qmd_complete/lec24/risks.html#potential-risks-with-llms",
    "title": "Risks",
    "section": "Potential Risks with LLMs",
    "text": "Potential Risks with LLMs\n\nCopyright\nPoor Training Data → Made up information\nImpersonation"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec01/what-is-data-science-what-is-computational-thinking.html",
    "href": "fa24/lectures_qmd_complete/lec01/what-is-data-science-what-is-computational-thinking.html",
    "title": "What is data science? What is computational thinking?",
    "section": "",
    "text": "Su Min Park\nuGSI | m.suminpark@berkeley.edu\nhello hello:) I am a super senior from Seoul, South Korea studying Data Science and Sociology.\nElizabeth Feng\nTutor | elizabeth.feng@berkeley.edu\nHi everyone! I’m a sophomore majoring in Data Science from Oakland, CA.\nKenneth Llontop\nTutor | kennethllontop@berkeley.edu\nHey! I’m Kenneth, and I am a sophomore from LA studying EECS.\ndata6.org/fa24/staff\nIsabella Duong\nuGSI | isabella.duong@berkeley.edu\nhiii! im a junior studying Computer Science!\n\n\n\nSpeaker notes\n\n10:20"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec01/what-is-data-science-what-is-computational-thinking.html#data-6-course-staff",
    "href": "fa24/lectures_qmd_complete/lec01/what-is-data-science-what-is-computational-thinking.html#data-6-course-staff",
    "title": "What is data science? What is computational thinking?",
    "section": "",
    "text": "Su Min Park\nuGSI | m.suminpark@berkeley.edu\nhello hello:) I am a super senior from Seoul, South Korea studying Data Science and Sociology.\nElizabeth Feng\nTutor | elizabeth.feng@berkeley.edu\nHi everyone! I’m a sophomore majoring in Data Science from Oakland, CA.\nKenneth Llontop\nTutor | kennethllontop@berkeley.edu\nHey! I’m Kenneth, and I am a sophomore from LA studying EECS.\ndata6.org/fa24/staff\nIsabella Duong\nuGSI | isabella.duong@berkeley.edu\nhiii! im a junior studying Computer Science!\n\n\n\nSpeaker notes\n\n10:20"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec01/what-is-data-science-what-is-computational-thinking.html#sowe-just-created-some-data",
    "href": "fa24/lectures_qmd_complete/lec01/what-is-data-science-what-is-computational-thinking.html#sowe-just-created-some-data",
    "title": "What is data science? What is computational thinking?",
    "section": "So…we just created some data!",
    "text": "So…we just created some data!\n\nUsing this information, what sort of questions might we ask about the data?\n…and how the heck do we find the answers to these questions?"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec01/what-is-data-science-what-is-computational-thinking.html#what-is-data-science",
    "href": "fa24/lectures_qmd_complete/lec01/what-is-data-science-what-is-computational-thinking.html#what-is-data-science",
    "title": "What is data science? What is computational thinking?",
    "section": "What is Data Science?",
    "text": "What is Data Science?\n\n\nWhat is data science?\n\n\nWhat will you learn in this class?\n\n\nHow will this class be run?\n\n\nFun demo\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec01/what-is-data-science-what-is-computational-thinking.html#what-is-data-science-1",
    "href": "fa24/lectures_qmd_complete/lec01/what-is-data-science-what-is-computational-thinking.html#what-is-data-science-1",
    "title": "What is data science? What is computational thinking?",
    "section": "What is data science?",
    "text": "What is data science?\n\nLearning about the world from data using computation\nLearning how to ask the “right” questions\n\nWhen we group data and analyze it, we bring a set of assumptions\nWhen we asked what our “major” is, made an assumption that people have a major\n\nUsing data to predict future outcomes"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec01/what-is-data-science-what-is-computational-thinking.html#creator-of-data-100",
    "href": "fa24/lectures_qmd_complete/lec01/what-is-data-science-what-is-computational-thinking.html#creator-of-data-100",
    "title": "What is data science? What is computational thinking?",
    "section": "Creator of Data 100",
    "text": "Creator of Data 100\n\nCreator of Data 100\nJoey Gonzalez\n“Data Science is the application of data centric, computational, and inferential thinking to:\nUnderstand the world\nSolve problems”"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec01/what-is-data-science-what-is-computational-thinking.html#data-science-is-a-fundamentally-interdisciplinary-field",
    "href": "fa24/lectures_qmd_complete/lec01/what-is-data-science-what-is-computational-thinking.html#data-science-is-a-fundamentally-interdisciplinary-field",
    "title": "What is data science? What is computational thinking?",
    "section": "Data science is a fundamentally interdisciplinary field",
    "text": "Data science is a fundamentally interdisciplinary field\n\nby Drew Conway in 2010 (link)"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec01/what-is-data-science-what-is-computational-thinking.html#data-6-version",
    "href": "fa24/lectures_qmd_complete/lec01/what-is-data-science-what-is-computational-thinking.html#data-6-version",
    "title": "What is data science? What is computational thinking?",
    "section": "Data 6 Version",
    "text": "Data 6 Version\n\nStatistics and inference\nDomain knowledge and social contexts\nComputational Thinking\nDS\nMachine Learning\nEngineering\nResearch"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec01/what-is-data-science-what-is-computational-thinking.html#example-questions-in-data-science",
    "href": "fa24/lectures_qmd_complete/lec01/what-is-data-science-what-is-computational-thinking.html#example-questions-in-data-science",
    "title": "What is data science? What is computational thinking?",
    "section": "Example Questions in Data Science",
    "text": "Example Questions in Data Science\n\nData science is all about asking questions and answering them with data.\nIs the world getting better or worse?\nIs the use of the COMPAS algorithm for prison sentencing fair?\nWhere should we put docking ports for our bikes?\nWhat should we eat to avoid dying early of heart disease?\nDo immigrants from poor countries have a positive or negative impact on the economy?\nWill there be a third? fourth? wave of COVID-19?"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec01/what-is-data-science-what-is-computational-thinking.html#computational-thinking",
    "href": "fa24/lectures_qmd_complete/lec01/what-is-data-science-what-is-computational-thinking.html#computational-thinking",
    "title": "What is data science? What is computational thinking?",
    "section": "Computational Thinking",
    "text": "Computational Thinking\n\nCreator of WolframAlpha\nStephen Wolfram\n“Computational thinking is about formulating things with enough clarity, and in a systematic enough way, that one can tell a computer how to do them.”"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec01/what-is-data-science-what-is-computational-thinking.html#introduction-to-computational-thinking-with-data",
    "href": "fa24/lectures_qmd_complete/lec01/what-is-data-science-what-is-computational-thinking.html#introduction-to-computational-thinking-with-data",
    "title": "What is data science? What is computational thinking?",
    "section": "Introduction to Computational Thinking with Data",
    "text": "Introduction to Computational Thinking with Data\n\nAs the title suggests, this class will teach you how to make computers to do interesting things involving data.\nIn order to tell our computers what to do, we will use the Python programming language.\nWhile at points it may feel like this is a class about Python, this class is really about teaching you how to solve problems, particularly those involving real-world data.\nAt the end of the semester, you will be strong computational thinkers, and will be able to apply the skills you’ve learned to projects of your own."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec01/what-is-data-science-what-is-computational-thinking.html#advice-for-data-6",
    "href": "fa24/lectures_qmd_complete/lec01/what-is-data-science-what-is-computational-thinking.html#advice-for-data-6",
    "title": "What is data science? What is computational thinking?",
    "section": "Advice for Data 6",
    "text": "Advice for Data 6\n\n\nSpeaker notes\n\n10:35"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec01/index.html",
    "href": "fa24/lectures_qmd_complete/lec01/index.html",
    "title": "Introduction",
    "section": "",
    "text": "This chapter covers the key concepts from Lecture 01."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec01/index.html#topics-covered",
    "href": "fa24/lectures_qmd_complete/lec01/index.html#topics-covered",
    "title": "Introduction",
    "section": "Topics Covered",
    "text": "Topics Covered\n\nWhat is data science? What is computational thinking?\nWhat will you learn in this class?\nHow will this class be run?"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec06/aggregation-and-disaggregation.html",
    "href": "fa24/lectures_qmd_complete/lec06/aggregation-and-disaggregation.html",
    "title": "Aggregation and Disaggregation",
    "section": "",
    "text": "➤\nUnits of Analysis\nSocial Science Research\nMaterials-Based Research\nAggregation and Disaggregation"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec06/aggregation-and-disaggregation.html#aggregation-and-disaggregation",
    "href": "fa24/lectures_qmd_complete/lec06/aggregation-and-disaggregation.html#aggregation-and-disaggregation",
    "title": "Aggregation and Disaggregation",
    "section": "",
    "text": "➤\nUnits of Analysis\nSocial Science Research\nMaterials-Based Research\nAggregation and Disaggregation"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec06/aggregation-and-disaggregation.html#disaggregation-and-privacy",
    "href": "fa24/lectures_qmd_complete/lec06/aggregation-and-disaggregation.html#disaggregation-and-privacy",
    "title": "Aggregation and Disaggregation",
    "section": "Disaggregation and Privacy",
    "text": "Disaggregation and Privacy\n\nPublic dataset by geographic region\nThe ACS main webpage [link] provides an aggregated view of data by region and specific disaggregations by income and sex.\nBy doing so, researchers can find it difficult (if not impossible) to disentangle the impact of certain variables, e.g., by race/ethnicity.\nACS has therefore also released ACS Public Use Microdata Sample (PUMS) [link] which releases a smaller sample of records from individual people and/or housing units.\nWhy the distinction?\nReleasing fine-grained data about individuals is a privacy issue.\n\nIt puts individuals in that dataset at risk of being identified beyond the research.\nIn particular, small, already vulnerable populations are often more easily identified.\n\nPUMS therefore uses a combination of privacy-preserving techniques such as differential privacy and synthetic data [source1, source2]\nTable 2"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec06/materials-based-research.html",
    "href": "fa24/lectures_qmd_complete/lec06/materials-based-research.html",
    "title": "Materials-Based Research",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 06\nFrom social theory to working with data.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec06/materials-based-research.html#intro-to-social-science-research",
    "href": "fa24/lectures_qmd_complete/lec06/materials-based-research.html#intro-to-social-science-research",
    "title": "Materials-Based Research",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 06\nFrom social theory to working with data.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec06/materials-based-research.html#social-science-research",
    "href": "fa24/lectures_qmd_complete/lec06/materials-based-research.html#social-science-research",
    "title": "Materials-Based Research",
    "section": "Social Science Research",
    "text": "Social Science Research\n\n➤\nUnits of Analysis\nSocial Science Research\nMaterials-Based Research\nAggregation and Disaggregation"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec06/materials-based-research.html#theory-research-and-hypotheses",
    "href": "fa24/lectures_qmd_complete/lec06/materials-based-research.html#theory-research-and-hypotheses",
    "title": "Materials-Based Research",
    "section": "Theory, Research, and Hypotheses",
    "text": "Theory, Research, and Hypotheses\n\nTheory - a systematic set of related statements that accord with a worldview.\nWhen (social) scientists do research, we use theories 3 different ways:\nTheories prevent us from being taken in by flukes.\nTheories help us make sense of observed patterns in ways that can suggest other possibilities.\nTheories direct our research efforts, pointing us toward likely discoveries through empirical observation.\nFrom SOC 5: Evaluation of Evidence"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec06/materials-based-research.html#research-question-theory-hypothesis",
    "href": "fa24/lectures_qmd_complete/lec06/materials-based-research.html#research-question-theory-hypothesis",
    "title": "Materials-Based Research",
    "section": "Research Question? Theory? Hypothesis?",
    "text": "Research Question? Theory? Hypothesis?\n\nFor the purposes of this class, we’ll make the following distinction:\nA research question is an exploratory question about a social concept to guide how we collect data OR make sense of existing data.\nA theory is an associative statement that links together social concepts.\nA hypothesis is an empirical instantiation of a theory, i.e., a testable statement involving a relationship between two variables, each of which represents a social concept."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec06/materials-based-research.html#research-question-theory-hypothesis-1",
    "href": "fa24/lectures_qmd_complete/lec06/materials-based-research.html#research-question-theory-hypothesis-1",
    "title": "Materials-Based Research",
    "section": "Research Question? Theory? Hypothesis?",
    "text": "Research Question? Theory? Hypothesis?\n\nFor the purposes of this class, we’ll make the following distinction:\nA research question is an exploratory question about a social concept to guide how we collect data OR make sense of existing data.\nA theory is an associative statement that links together social concepts.\nA hypothesis is an empirical instantiation of a theory, i.e., a testable statement involving a relationship between two variables, each of which represents a social concept.\nIn materials based research, the research question guides how we make observations about existing data, from which we then formulate theories and test hypotheses."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec06/materials-based-research.html#materials-based-research",
    "href": "fa24/lectures_qmd_complete/lec06/materials-based-research.html#materials-based-research",
    "title": "Materials-Based Research",
    "section": "Materials-Based Research",
    "text": "Materials-Based Research\n\n➤\nUnits of Analysis\nSocial Science Research\nMaterials-Based Research\nAggregation and Disaggregation"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec06/materials-based-research.html#gathering-data-for-research-and-analysis",
    "href": "fa24/lectures_qmd_complete/lec06/materials-based-research.html#gathering-data-for-research-and-analysis",
    "title": "Materials-Based Research",
    "section": "Gathering Data for Research and Analysis",
    "text": "Gathering Data for Research and Analysis\n\nConduct surveys, experiments, interviews, ethnography,measurements…\nData\nConceptualize variables\nPose research question and theory\n\n\n\n\n\n\nAll data are created/generated from human input:\nDefinition of variables\nResearch design and measurement\nHowever, the researcher and data scientist are often not the same person.Data scientists therefore need to consider the context of how researchers generated data from existing materials.\n\n\n\nSpeaker notes\n\nSOC 5 textbook p. 29\nSurveys: Participants answer a series of questions Experiments: trying an intervention, measuring outcomes, etc. Interviews: researchers actively talk to participants, generally messier data than surveys Ethnography: participant observation (passive)"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec06/materials-based-research.html#gathering-data-for-research-and-analysis-1",
    "href": "fa24/lectures_qmd_complete/lec06/materials-based-research.html#gathering-data-for-research-and-analysis-1",
    "title": "Materials-Based Research",
    "section": "Gathering Data for Research and Analysis",
    "text": "Gathering Data for Research and Analysis\n\nA researcher considers both validity and generalizability throughout the data gathering process.\nConduct surveys, experiments, interviews, ethnography,measurements…\nData\nConceptualize variables\nPose research question and theory\n\n\n\n\n\n\nValidity A quality of a measure concerning how accurate it is.\nInternal Validity: How accurately are we measuring the defined concepts?\nExternal Validity:\n\nHow representative is the group being studied?\nHow “real” is this study?\n\nGeneralizability The extent to which results or conclusions based on one population can be applied to others.\n\n\n\nSpeaker notes\n\nSOC 5 textbook p. 29\nSurveys: Participants answer a series of questions Experiments: trying an intervention, measuring outcomes, etc. Interviews: researchers actively talk to participants, generally messier data than surveys Ethnography: participant observation (passive)"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec06/social-science-research.html",
    "href": "fa24/lectures_qmd_complete/lec06/social-science-research.html",
    "title": "Social Science Research",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 06\nFrom social theory to working with data.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec06/social-science-research.html#intro-to-social-science-research",
    "href": "fa24/lectures_qmd_complete/lec06/social-science-research.html#intro-to-social-science-research",
    "title": "Social Science Research",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 06\nFrom social theory to working with data.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec06/social-science-research.html#social-science-research",
    "href": "fa24/lectures_qmd_complete/lec06/social-science-research.html#social-science-research",
    "title": "Social Science Research",
    "section": "Social Science Research",
    "text": "Social Science Research\n\n➤\nUnits of Analysis\nSocial Science Research\nMaterials-Based Research\nAggregation and Disaggregation"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec06/social-science-research.html#theory-research-and-hypotheses",
    "href": "fa24/lectures_qmd_complete/lec06/social-science-research.html#theory-research-and-hypotheses",
    "title": "Social Science Research",
    "section": "Theory, Research, and Hypotheses",
    "text": "Theory, Research, and Hypotheses\n\nTheory - a systematic set of related statements that accord with a worldview.\nWhen (social) scientists do research, we use theories 3 different ways:\nTheories prevent us from being taken in by flukes.\nTheories help us make sense of observed patterns in ways that can suggest other possibilities.\nTheories direct our research efforts, pointing us toward likely discoveries through empirical observation.\nFrom SOC 5: Evaluation of Evidence"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec06/social-science-research.html#research-question-theory-hypothesis",
    "href": "fa24/lectures_qmd_complete/lec06/social-science-research.html#research-question-theory-hypothesis",
    "title": "Social Science Research",
    "section": "Research Question? Theory? Hypothesis?",
    "text": "Research Question? Theory? Hypothesis?\n\nFor the purposes of this class, we’ll make the following distinction:\nA research question is an exploratory question about a social concept to guide how we collect data OR make sense of existing data.\nA theory is an associative statement that links together social concepts.\nA hypothesis is an empirical instantiation of a theory, i.e., a testable statement involving a relationship between two variables, each of which represents a social concept."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec06/social-science-research.html#research-question-theory-hypothesis-1",
    "href": "fa24/lectures_qmd_complete/lec06/social-science-research.html#research-question-theory-hypothesis-1",
    "title": "Social Science Research",
    "section": "Research Question? Theory? Hypothesis?",
    "text": "Research Question? Theory? Hypothesis?\n\nFor the purposes of this class, we’ll make the following distinction:\nA research question is an exploratory question about a social concept to guide how we collect data OR make sense of existing data.\nA theory is an associative statement that links together social concepts.\nA hypothesis is an empirical instantiation of a theory, i.e., a testable statement involving a relationship between two variables, each of which represents a social concept.\nIn materials based research, the research question guides how we make observations about existing data, from which we then formulate theories and test hypotheses."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec06/social-science-research.html#materials-based-research",
    "href": "fa24/lectures_qmd_complete/lec06/social-science-research.html#materials-based-research",
    "title": "Social Science Research",
    "section": "Materials-Based Research",
    "text": "Materials-Based Research\n\n➤\nUnits of Analysis\nSocial Science Research\nMaterials-Based Research\nAggregation and Disaggregation"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec06/social-science-research.html#gathering-data-for-research-and-analysis",
    "href": "fa24/lectures_qmd_complete/lec06/social-science-research.html#gathering-data-for-research-and-analysis",
    "title": "Social Science Research",
    "section": "Gathering Data for Research and Analysis",
    "text": "Gathering Data for Research and Analysis\n\nConduct surveys, experiments, interviews, ethnography,measurements…\nData\nConceptualize variables\nPose research question and theory\n\n\n\n\n\n\nAll data are created/generated from human input:\nDefinition of variables\nResearch design and measurement\nHowever, the researcher and data scientist are often not the same person.Data scientists therefore need to consider the context of how researchers generated data from existing materials.\n\n\n\nSpeaker notes\n\nSOC 5 textbook p. 29\nSurveys: Participants answer a series of questions Experiments: trying an intervention, measuring outcomes, etc. Interviews: researchers actively talk to participants, generally messier data than surveys Ethnography: participant observation (passive)"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec06/social-science-research.html#gathering-data-for-research-and-analysis-1",
    "href": "fa24/lectures_qmd_complete/lec06/social-science-research.html#gathering-data-for-research-and-analysis-1",
    "title": "Social Science Research",
    "section": "Gathering Data for Research and Analysis",
    "text": "Gathering Data for Research and Analysis\n\nA researcher considers both validity and generalizability throughout the data gathering process.\nConduct surveys, experiments, interviews, ethnography,measurements…\nData\nConceptualize variables\nPose research question and theory\n\n\n\n\n\n\nValidity A quality of a measure concerning how accurate it is.\nInternal Validity: How accurately are we measuring the defined concepts?\nExternal Validity:\n\nHow representative is the group being studied?\nHow “real” is this study?\n\nGeneralizability The extent to which results or conclusions based on one population can be applied to others.\n\n\n\nSpeaker notes\n\nSOC 5 textbook p. 29\nSurveys: Participants answer a series of questions Experiments: trying an intervention, measuring outcomes, etc. Interviews: researchers actively talk to participants, generally messier data than surveys Ethnography: participant observation (passive)"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec08/review-take.html",
    "href": "fa24/lectures_qmd_complete/lec08/review-take.html",
    "title": "Review: .take()",
    "section": "",
    "text": "Review: .take()\n\n\nBooleans\n\n\nFiltering with .where()\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec08/review-take.html#review-.take",
    "href": "fa24/lectures_qmd_complete/lec08/review-take.html#review-.take",
    "title": "Review: .take()",
    "section": "",
    "text": "Review: .take()\n\n\nBooleans\n\n\nFiltering with .where()\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec08/review-take.html#take",
    "href": "fa24/lectures_qmd_complete/lec08/review-take.html#take",
    "title": "Review: .take()",
    "section": ".take()",
    "text": ".take()\n\nThe method\nt.take(row_indices)\nreturns a new table with only the rows specified by row_indices.\nIf row_indices is a single integer, it returns a table with just one row – the row at index row_indices.\nIf row_indices is an array, it returns a table with all of the rows at positions specified by row_indices.\n.take is often used in conjunction with NumPy array ranges!"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec08/review-take.html#take-with-arrays",
    "href": "fa24/lectures_qmd_complete/lec08/review-take.html#take-with-arrays",
    "title": "Review: .take()",
    "section": ".take() with Arrays",
    "text": ".take() with Arrays\n\nIncidentally, the .take method works on arrays too, not just tables.\nThat means you can reverse the order of .take and .column and still get the same result.\n⚠️ This interchangeability does not generally hold true with other methods, so be careful!"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec08/review-take.html#review-filtering-rows",
    "href": "fa24/lectures_qmd_complete/lec08/review-take.html#review-filtering-rows",
    "title": "Review: .take()",
    "section": "Review: Filtering Rows",
    "text": "Review: Filtering Rows\n\nOften times, we will have a table and will want to access only the rows where some condition is true. For example, given our SAT data, we may want all of the rows where…\nThe combined SAT score is above 1800 (remember, this data is on the old 2400 scale).\nThe state name is equal to “California”.\nThe state name contains “Dakota”.\nThe math SAT score is between 580 and 600.\nAccessing a subset of our data is called filtering. The method t.where will help us filter.\n.where is the most important table method we will learn in this class.\n✅ Exact Match .where()"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec08/review-take.html#review-filtering-rows-1",
    "href": "fa24/lectures_qmd_complete/lec08/review-take.html#review-filtering-rows-1",
    "title": "Review: .take()",
    "section": "Review: Filtering Rows",
    "text": "Review: Filtering Rows\n\nOften times, we will have a table and will want to access only the rows where some condition is true. For example, given our SAT data, we may want all of the rows where…\nThe combined SAT score is above 1800 (remember, this data is on the old 2400 scale).\nThe state name is equal to “California”.\nThe state name contains “Dakota”.\nThe math SAT score is between 580 and 600.\nAccessing a subset of our data is called filtering. The method t.where will help us filter.\n.where is the most important table method we will learn in this class.\n✅ Exact Match .where()\nWe will now use .where to performconditional match, meaning we get rows whose columns meet a particular condition!"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec08/filtering-with-where.html",
    "href": "fa24/lectures_qmd_complete/lec08/filtering-with-where.html",
    "title": "Filtering with .where()",
    "section": "",
    "text": "Incidentally, the .take method works on arrays too, not just tables.\nThat means you can reverse the order of .take and .column and still get the same result.\n⚠️ This interchangeability does not generally hold true with other methods, so be careful!"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec08/filtering-with-where.html#take-with-arrays",
    "href": "fa24/lectures_qmd_complete/lec08/filtering-with-where.html#take-with-arrays",
    "title": "Filtering with .where()",
    "section": "",
    "text": "Incidentally, the .take method works on arrays too, not just tables.\nThat means you can reverse the order of .take and .column and still get the same result.\n⚠️ This interchangeability does not generally hold true with other methods, so be careful!"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec08/filtering-with-where.html#filtering-with-.where",
    "href": "fa24/lectures_qmd_complete/lec08/filtering-with-where.html#filtering-with-.where",
    "title": "Filtering with .where()",
    "section": "Filtering with .where()",
    "text": "Filtering with .where()\n\n\nReview: .take()\n\n\nBooleans\n\n\nFiltering with .where()\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec08/filtering-with-where.html#review-filtering-rows",
    "href": "fa24/lectures_qmd_complete/lec08/filtering-with-where.html#review-filtering-rows",
    "title": "Filtering with .where()",
    "section": "Review: Filtering Rows",
    "text": "Review: Filtering Rows\n\nOften times, we will have a table and will want to access only the rows where some condition is true. For example, given our SAT data, we may want all of the rows where…\nThe combined SAT score is above 1800 (remember, this data is on the old 2400 scale).\nThe state name is equal to “California”.\nThe state name contains “Dakota”.\nThe math SAT score is between 580 and 600.\nAccessing a subset of our data is called filtering. The method t.where will help us filter.\n.where is the most important table method we will learn in this class.\n✅ Exact Match .where()"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec08/filtering-with-where.html#review-filtering-rows-1",
    "href": "fa24/lectures_qmd_complete/lec08/filtering-with-where.html#review-filtering-rows-1",
    "title": "Filtering with .where()",
    "section": "Review: Filtering Rows",
    "text": "Review: Filtering Rows\n\nOften times, we will have a table and will want to access only the rows where some condition is true. For example, given our SAT data, we may want all of the rows where…\nThe combined SAT score is above 1800 (remember, this data is on the old 2400 scale).\nThe state name is equal to “California”.\nThe state name contains “Dakota”.\nThe math SAT score is between 580 and 600.\nAccessing a subset of our data is called filtering. The method t.where will help us filter.\n.where is the most important table method we will learn in this class.\n✅ Exact Match .where()\nWe will now use .where to performconditional match, meaning we get rows whose columns meet a particular condition!"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec08/filtering-with-where.html#table.where-predicates",
    "href": "fa24/lectures_qmd_complete/lec08/filtering-with-where.html#table.where-predicates",
    "title": "Filtering with .where()",
    "section": "Table.where Predicates",
    "text": "Table.where Predicates\n\nThe method t.where(label, value) returns a new table that contains only the rows whose label field/attribute exactly matches value.\nThis method is shorthand for the Table.where predicate structure: t.where(label, are.equal_to(value))\nThis structure chooses the rows for which the “predicate” is True,and filters out the rows for which the predicate is False.\nA couple of examples will make this syntax easier to understand."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec08/filtering-with-where.html#table.where-predicates-reference",
    "href": "fa24/lectures_qmd_complete/lec08/filtering-with-where.html#table.where-predicates-reference",
    "title": "Filtering with .where()",
    "section": "Table.where Predicates Reference",
    "text": "Table.where Predicates Reference\n\nThe method t.where(column, pred) creates a new table with only the rows from t where column satisfies the predicate pred. See the Python Reference™ for all possible predicates; here are some of the main ones:\nAdding not_ to any of the above to negates the predicate, e.g. are.not_equal_to(z)."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec08/filtering-with-where.html#multiple-predicates-with-method-chaining",
    "href": "fa24/lectures_qmd_complete/lec08/filtering-with-where.html#multiple-predicates-with-method-chaining",
    "title": "Filtering with .where()",
    "section": "Multiple Predicates with Method Chaining",
    "text": "Multiple Predicates with Method Chaining\n\nSometimes we may want only the rows where multiple conditions are true. For instance, we may want all rows where…\nThe participation rate is above 20% and the combined SAT score is above 1500.\nThe participation rate is below 10%, the combined SAT score is above 1600, and the state is in the Deep South.\nNo problem: just method chain .where multiple times!"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec09/index.html",
    "href": "fa24/lectures_qmd_complete/lec09/index.html",
    "title": "Applying",
    "section": "",
    "text": "This chapter covers the key concepts from Lecture 09."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec09/index.html#topics-covered",
    "href": "fa24/lectures_qmd_complete/lec09/index.html#topics-covered",
    "title": "Applying",
    "section": "Topics Covered",
    "text": "Topics Covered\n\nMotivation\nApplying with .apply\nMasking with Boolean Arrays"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec09/applying-with-apply.html",
    "href": "fa24/lectures_qmd_complete/lec09/applying-with-apply.html",
    "title": "Applying with .apply",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 9\nWriting functions to augment our tables.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec09/applying-with-apply.html#applying",
    "href": "fa24/lectures_qmd_complete/lec09/applying-with-apply.html#applying",
    "title": "Applying with .apply",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 9\nWriting functions to augment our tables.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec09/applying-with-apply.html#applying-with-.apply",
    "href": "fa24/lectures_qmd_complete/lec09/applying-with-apply.html#applying-with-.apply",
    "title": "Applying with .apply",
    "section": "Applying with .apply",
    "text": "Applying with .apply\n\n\nMotivation\n\n\nApplying with .apply\n\n\nMasking with Boolean Arrays\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec09/applying-with-apply.html#apply",
    "href": "fa24/lectures_qmd_complete/lec09/applying-with-apply.html#apply",
    "title": "Applying with .apply",
    "section": ".apply()",
    "text": ".apply()\n\nThe method\nt.apply(function, column_or_columns)\napplies function to every element in column_or_columns, and returns an array with the results.\nIf you only supply one column name, function should only take one argument.\nIf you supply X column names, function should take X arguments."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec09/applying-with-apply.html#masking-with",
    "href": "fa24/lectures_qmd_complete/lec09/applying-with-apply.html#masking-with",
    "title": "Applying with .apply",
    "section": "Masking with",
    "text": "Masking with\nBoolean Arrays\n\n\nMotivation\n\n\nApplying with .apply\n\n\nMasking with Boolean Arrays\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec09/applying-with-apply.html#masks-with-tables",
    "href": "fa24/lectures_qmd_complete/lec09/applying-with-apply.html#masks-with-tables",
    "title": "Applying with .apply",
    "section": "Masks with Tables",
    "text": "Masks with Tables\n\nWe can achieve the same behavior with tables – by using where with just a single argument.\nPreviously, where required two arguments.\nJust one argument: a list of booleans."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/index.html",
    "href": "fa24/lectures_qmd_complete/lec07/index.html",
    "title": "Table Fundamentals",
    "section": "",
    "text": "This chapter covers the key concepts from Lecture 07."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/index.html#topics-covered",
    "href": "fa24/lectures_qmd_complete/lec07/index.html#topics-covered",
    "title": "Table Fundamentals",
    "section": "Topics Covered",
    "text": "Topics Covered\n\nTable Attributes and Methods\nselect, drop, and add columns\nCreate new tables\nMore Table Methods and Documentation\nDemo: WNBA Data"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/select-drop-and-add-columns.html",
    "href": "fa24/lectures_qmd_complete/lec07/select-drop-and-add-columns.html",
    "title": "select, drop, and add columns",
    "section": "",
    "text": "➤\n\nTable Attributes and Methods\n\n\nselect, drop, and add columns\n\n\nCreate new tables\n\n\nMore Table Methods and Documentation\n\n\nDemo: WNBA Data"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/select-drop-and-add-columns.html#select-drop-and-add-columns",
    "href": "fa24/lectures_qmd_complete/lec07/select-drop-and-add-columns.html#select-drop-and-add-columns",
    "title": "select, drop, and add columns",
    "section": "",
    "text": "➤\n\nTable Attributes and Methods\n\n\nselect, drop, and add columns\n\n\nCreate new tables\n\n\nMore Table Methods and Documentation\n\n\nDemo: WNBA Data"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/select-drop-and-add-columns.html#reorder-columns",
    "href": "fa24/lectures_qmd_complete/lec07/select-drop-and-add-columns.html#reorder-columns",
    "title": "select, drop, and add columns",
    "section": "Reorder Columns",
    "text": "Reorder Columns\n\nHow do we reorder the columns to get the following table?\nHint: use one of .select, .drop, or .with_columns."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/select-drop-and-add-columns.html#reorder-columns-solution",
    "href": "fa24/lectures_qmd_complete/lec07/select-drop-and-add-columns.html#reorder-columns-solution",
    "title": "select, drop, and add columns",
    "section": "Reorder Columns: Solution",
    "text": "Reorder Columns: Solution\n\nHow do we reorder the columns to get the following table?"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/table-attributes-and-methods.html",
    "href": "fa24/lectures_qmd_complete/lec07/table-attributes-and-methods.html",
    "title": "Table Attributes and Methods",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 07\nLearning how to work with tables in Python.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/table-attributes-and-methods.html#table-fundamentals",
    "href": "fa24/lectures_qmd_complete/lec07/table-attributes-and-methods.html#table-fundamentals",
    "title": "Table Attributes and Methods",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 07\nLearning how to work with tables in Python.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/table-attributes-and-methods.html#review-table",
    "href": "fa24/lectures_qmd_complete/lec07/table-attributes-and-methods.html#review-table",
    "title": "Table Attributes and Methods",
    "section": "Review: Table",
    "text": "Review: Table\n\nReview: In this course, we often start with tabular data and perform EDA:\nColumns\nRows (also known as records).\nrow\ncolumn\n\n\n\nSpeaker notes\n\n“Data” are systematically collected elements of information about the world. They can be qualitative or quantitative in style. Sometimes data are collected to evaluate a very specific theory, but not so infrequently, scholars collect data before knowing precisely what they are interested in finding out. Moreover, even if data are collected to evaluate a specific hypothesis, researchers may ultimately be interested in questions that had not occurred to them previously."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/table-attributes-and-methods.html#table-attributes-and-methods",
    "href": "fa24/lectures_qmd_complete/lec07/table-attributes-and-methods.html#table-attributes-and-methods",
    "title": "Table Attributes and Methods",
    "section": "Table Attributes and Methods",
    "text": "Table Attributes and Methods\n\n\nTable Attributes and Methods\n\n\nselect, drop, and add columns\n\n\nCreate new tables\n\n\nMore Table Methods and Documentation\n\n\nDemo: WNBA Data\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/table-attributes-and-methods.html#first-assign-a-table-to-a-name",
    "href": "fa24/lectures_qmd_complete/lec07/table-attributes-and-methods.html#first-assign-a-table-to-a-name",
    "title": "Table Attributes and Methods",
    "section": "First, assign a Table to a name",
    "text": "First, assign a Table to a name\n\nTo work with this table, we first load it in from a file called data/cal_unis.csv:\nschools = Table.read_table(‘data/cal_unis.csv’)\nThis lecture we will return to the dataset of public four-year colleges and universities in California (source):\nassigns RHS value to schools name\nreturns a datascience Table from the given data file\nThen we use schools to call Table methods and attributes.\nAlways assign your table to a name!"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/table-attributes-and-methods.html#attributes-vs.-methods",
    "href": "fa24/lectures_qmd_complete/lec07/table-attributes-and-methods.html#attributes-vs.-methods",
    "title": "Table Attributes and Methods",
    "section": "Attributes vs. Methods",
    "text": "Attributes vs. Methods\n\nTable attributes\nProperties/ characteristics of the given data type (in this case, datascience.Table)\nTable methods\nFunctions that are called on a given data science table (in this case, schools)\nAll table methods return copies of information from the original table!\nVery important Python datascience library paradigm"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/table-attributes-and-methods.html#create-new-tables",
    "href": "fa24/lectures_qmd_complete/lec07/table-attributes-and-methods.html#create-new-tables",
    "title": "Table Attributes and Methods",
    "section": "Create new tables",
    "text": "Create new tables\n\n➤\n\nTable Attributes and Methods\n\n\nselect, drop, and add columns\n\n\nCreate new tables\n\n\nMore Table Methods and Documentation\n\n\nDemo: WNBA Data"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec07/table-attributes-and-methods.html#more-table-methods-and-documentation",
    "href": "fa24/lectures_qmd_complete/lec07/table-attributes-and-methods.html#more-table-methods-and-documentation",
    "title": "Table Attributes and Methods",
    "section": "More Table Methods and Documentation",
    "text": "More Table Methods and Documentation\n\n➤\n\nTable Attributes and Methods\n\n\nselect, drop, and add columns\n\n\nCreate new tables\n\n\nMore Table Methods and Documentation\n\n\nDemo: WNBA Data"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec19/motivation.html",
    "href": "fa24/lectures_qmd_complete/lec19/motivation.html",
    "title": "Motivation",
    "section": "",
    "text": "Motivation\n\n\nFor Loops\n\n\nRanges\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec19/motivation.html#motivation",
    "href": "fa24/lectures_qmd_complete/lec19/motivation.html#motivation",
    "title": "Motivation",
    "section": "",
    "text": "Motivation\n\n\nFor Loops\n\n\nRanges\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec19/index.html",
    "href": "fa24/lectures_qmd_complete/lec19/index.html",
    "title": "Iteration",
    "section": "",
    "text": "This chapter covers the key concepts from Lecture 19."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec19/index.html#topics-covered",
    "href": "fa24/lectures_qmd_complete/lec19/index.html#topics-covered",
    "title": "Iteration",
    "section": "Topics Covered",
    "text": "Topics Covered\n\nMotivation\nFor Loops\nRanges"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec26/what-you-learned.html",
    "href": "fa24/lectures_qmd_complete/lec26/what-you-learned.html",
    "title": "What You Learned",
    "section": "",
    "text": "Final Exam Logistics\n\n\nWhat You Learned\n\n\nWhere To Go From Here\n\n\nStaff Ask Us Anything\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec26/what-you-learned.html#what-did-you-learn",
    "href": "fa24/lectures_qmd_complete/lec26/what-you-learned.html#what-did-you-learn",
    "title": "What You Learned",
    "section": "",
    "text": "Final Exam Logistics\n\n\nWhat You Learned\n\n\nWhere To Go From Here\n\n\nStaff Ask Us Anything\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/review-overlaid-and-side-by-side-histograms.html",
    "href": "fa24/lectures_qmd_complete/lec17/review-overlaid-and-side-by-side-histograms.html",
    "title": "Review: Overlaid and Side-by-Side Histograms",
    "section": "",
    "text": "Review: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/review-overlaid-and-side-by-side-histograms.html#review-histograms",
    "href": "fa24/lectures_qmd_complete/lec17/review-overlaid-and-side-by-side-histograms.html#review-histograms",
    "title": "Review: Overlaid and Side-by-Side Histograms",
    "section": "",
    "text": "Review: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/review-overlaid-and-side-by-side-histograms.html#overlaid-and-side-by-side-histograms",
    "href": "fa24/lectures_qmd_complete/lec17/review-overlaid-and-side-by-side-histograms.html#overlaid-and-side-by-side-histograms",
    "title": "Review: Overlaid and Side-by-Side Histograms",
    "section": "Overlaid and Side-by-Side Histograms",
    "text": "Overlaid and Side-by-Side Histograms\n\n\nReview: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/review-overlaid-and-side-by-side-histograms.html#histograms",
    "href": "fa24/lectures_qmd_complete/lec17/review-overlaid-and-side-by-side-histograms.html#histograms",
    "title": "Review: Overlaid and Side-by-Side Histograms",
    "section": "Histograms",
    "text": "Histograms\n\nA histogram visualizes the distribution of a numerical variable by binning. The method\nt.hist(column, density = False)\ncreates a histogram of the column column of t. This column must contain numerical values.\nIt automatically chooses bins for us. We can change them.\nWe will always set density = False."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/review-overlaid-and-side-by-side-histograms.html#overlaid-bar-charts-vs.-overlaid-histograms",
    "href": "fa24/lectures_qmd_complete/lec17/review-overlaid-and-side-by-side-histograms.html#overlaid-bar-charts-vs.-overlaid-histograms",
    "title": "Review: Overlaid and Side-by-Side Histograms",
    "section": "Overlaid Bar Charts vs. Overlaid Histograms",
    "text": "Overlaid Bar Charts vs. Overlaid Histograms\n\nOverlaid Histograms visualize the relationship between one continuous numerical variable and one categorical variable\nThere should only be one y value for every x value.\nUseful for comparing numerical distributions\nOverlaid Bar Charts visualize the relationship of two or more categorical variables (normally same categories).\nUseful for comparing categorical distributions"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/index.html",
    "href": "fa24/lectures_qmd_complete/lec17/index.html",
    "title": "Visualizing Two Numerical Variables",
    "section": "",
    "text": "This chapter covers the key concepts from Lecture 17."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/index.html#topics-covered",
    "href": "fa24/lectures_qmd_complete/lec17/index.html#topics-covered",
    "title": "Visualizing Two Numerical Variables",
    "section": "Topics Covered",
    "text": "Topics Covered\n\nReview: Histograms\nReview: Overlaid and Side-by-Side Histograms\nReview: Grouped Bar Charts\nScatter Plots\nCustomizing Scatter Plots\nLine Plots\nMultiple Line Plots"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/line-plots.html",
    "href": "fa24/lectures_qmd_complete/lec17/line-plots.html",
    "title": "Line Plots",
    "section": "",
    "text": "Review: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/line-plots.html#scatter-plots",
    "href": "fa24/lectures_qmd_complete/lec17/line-plots.html#scatter-plots",
    "title": "Line Plots",
    "section": "",
    "text": "Review: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/line-plots.html#scatter-plots-1",
    "href": "fa24/lectures_qmd_complete/lec17/line-plots.html#scatter-plots-1",
    "title": "Line Plots",
    "section": "Scatter Plots",
    "text": "Scatter Plots\n\nScatter plots are used to visualize two numerical variables at once. To create a scatter plot from a table, you need two columns:\nA numerical column for the x-axis.\nA numerical column for the y-axis.\nThe resulting graph has one point for every row in your table.\nWe call this a graph of “y vs. x”"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/line-plots.html#customizing-scatter-plots",
    "href": "fa24/lectures_qmd_complete/lec17/line-plots.html#customizing-scatter-plots",
    "title": "Line Plots",
    "section": "Customizing Scatter Plots",
    "text": "Customizing Scatter Plots\n\n\nReview: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/line-plots.html#line-plots",
    "href": "fa24/lectures_qmd_complete/lec17/line-plots.html#line-plots",
    "title": "Line Plots",
    "section": "Line Plots",
    "text": "Line Plots\n\n\nReview: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/line-plots.html#motivating-line-plots",
    "href": "fa24/lectures_qmd_complete/lec17/line-plots.html#motivating-line-plots",
    "title": "Line Plots",
    "section": "Motivating Line Plots",
    "text": "Motivating Line Plots\n\nWhile a scatter plot would theoretically work in such a scenario, there are some key differences that lead us to another type of plot.\nThere’s only one y for every x.\n\nThere’s only one number of COVID cases per day.\nThere can be many people with the same height when graphing weight vs. height.\n\nWe want to emphasize a trend by “connecting the dots”.\n\n🤔\n\nWhat if we want to visualize two numerical variables, but one of them is time?\nCOVID cases per day in Alameda County.\nAverage rainfall for each month of the year in San Diego."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/line-plots.html#multiple-line-plots",
    "href": "fa24/lectures_qmd_complete/lec17/line-plots.html#multiple-line-plots",
    "title": "Line Plots",
    "section": "Multiple Line Plots",
    "text": "Multiple Line Plots\n\n\nReview: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/line-plots.html#multiple-line-plots-1",
    "href": "fa24/lectures_qmd_complete/lec17/line-plots.html#multiple-line-plots-1",
    "title": "Line Plots",
    "section": "Multiple Line Plots",
    "text": "Multiple Line Plots\n\nIf we provide plot with only a single column name, it will draw lines for every other column in your table.\nIf you want to do this, make sure to select columns first!"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/line-plots.html#scatter-plots-vs.-line-plots",
    "href": "fa24/lectures_qmd_complete/lec17/line-plots.html#scatter-plots-vs.-line-plots",
    "title": "Line Plots",
    "section": "Scatter Plots vs. Line Plots",
    "text": "Scatter Plots vs. Line Plots\n\nLine plots visualize the relationship between two numerical variables — one of them is ordered.\nx-axis generally represents time or distance.\nThere should only be one y value for every x value.\nUseful for identifying trends over time\nScatter plots visualize the relationship between any two numerical variables.\nNo need to have unique x (or y) values.\nUseful for identifying patterns between variables"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/review-grouped-bar-charts.html",
    "href": "fa24/lectures_qmd_complete/lec17/review-grouped-bar-charts.html",
    "title": "Review: Grouped Bar Charts",
    "section": "",
    "text": "Review: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/review-grouped-bar-charts.html#review-histograms",
    "href": "fa24/lectures_qmd_complete/lec17/review-grouped-bar-charts.html#review-histograms",
    "title": "Review: Grouped Bar Charts",
    "section": "",
    "text": "Review: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/review-grouped-bar-charts.html#grouped-bar-charts",
    "href": "fa24/lectures_qmd_complete/lec17/review-grouped-bar-charts.html#grouped-bar-charts",
    "title": "Review: Grouped Bar Charts",
    "section": "Grouped Bar Charts",
    "text": "Grouped Bar Charts\n\n\nReview: Histograms\n\n\nOverlaid and Side-by-Side Histograms\n\n\nGrouped Bar Charts\n\n\nScatter Plots\n\n\nCustomizing Scatter Plots\n\n\nLine Plots\n\n\nMultiple Line Plots\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/review-grouped-bar-charts.html#separate-bar-charts",
    "href": "fa24/lectures_qmd_complete/lec17/review-grouped-bar-charts.html#separate-bar-charts",
    "title": "Review: Grouped Bar Charts",
    "section": "Separate Bar Charts",
    "text": "Separate Bar Charts\n\ntop_10.barh(‘track_name’, ‘rank’)\ntop_10.barh(‘track_name’, ‘peak_rank’)\nSpotify keeps track of each song’s “peak rank”, which is a song’s lowest rank since its release on the platform.\nWith our current tools, we’d likely make two different plots, which are difficult to compare:"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/review-grouped-bar-charts.html#grouped-bar-charts-1",
    "href": "fa24/lectures_qmd_complete/lec17/review-grouped-bar-charts.html#grouped-bar-charts-1",
    "title": "Review: Grouped Bar Charts",
    "section": "Grouped Bar Charts",
    "text": "Grouped Bar Charts\n\ntop_10.select(‘rank’,\n‘track_name’,\n‘peak_rank’)\n\n.barh(‘track_name’)\nWe can use t.select() to build a “narrower” table with one categorical variable + several variables.\nIf the table we call barh on has multiple numerical columns, it will draw bars for each of them, and each column will get its own color!"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec17/review-grouped-bar-charts.html#overlaid-bar-charts-vs.-overlaid-histograms",
    "href": "fa24/lectures_qmd_complete/lec17/review-grouped-bar-charts.html#overlaid-bar-charts-vs.-overlaid-histograms",
    "title": "Review: Grouped Bar Charts",
    "section": "Overlaid Bar Charts vs. Overlaid Histograms",
    "text": "Overlaid Bar Charts vs. Overlaid Histograms\n\nOverlaid Histograms visualize the relationship between one continuous numerical variable and one categorical variable\nThere should only be one y value for every x value.\nUseful for comparing numerical distributions\nOverlaid Bar Charts visualize the relationship of two or more categorical variables (normally same categories).\nUseful for comparing categorical distributions"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec10/joining.html",
    "href": "fa24/lectures_qmd_complete/lec10/joining.html",
    "title": "Joining",
    "section": "",
    "text": "Row Methods\n\nData 6 Fall 2024\nLECTURE 10\nCombining multiple sources of data.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec10/joining.html#joining-and",
    "href": "fa24/lectures_qmd_complete/lec10/joining.html#joining-and",
    "title": "Joining",
    "section": "",
    "text": "Row Methods\n\nData 6 Fall 2024\nLECTURE 10\nCombining multiple sources of data.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec10/joining.html#joining-tables",
    "href": "fa24/lectures_qmd_complete/lec10/joining.html#joining-tables",
    "title": "Joining",
    "section": "Joining Tables",
    "text": "Joining Tables\n\n\nJoining\n\n\nDemo\n\n\nThe Row Data Type\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec11/parameter-scope-and-return-values.html",
    "href": "fa24/lectures_qmd_complete/lec11/parameter-scope-and-return-values.html",
    "title": "Parameter Scope and Return Values",
    "section": "",
    "text": "Functions and Parameters\n\n\nParameter Scope and Return Values\n\n\nString Methods\n\n\nDemo\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec11/parameter-scope-and-return-values.html#functions-and-parameters",
    "href": "fa24/lectures_qmd_complete/lec11/parameter-scope-and-return-values.html#functions-and-parameters",
    "title": "Parameter Scope and Return Values",
    "section": "",
    "text": "Functions and Parameters\n\n\nParameter Scope and Return Values\n\n\nString Methods\n\n\nDemo\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec11/parameter-scope-and-return-values.html#parameters",
    "href": "fa24/lectures_qmd_complete/lec11/parameter-scope-and-return-values.html#parameters",
    "title": "Parameter Scope and Return Values",
    "section": "Parameters",
    "text": "Parameters\n\nParameters are the names that a function requires as an input, that are defined in its “signature”.\nParameters are placeholders for the values that will be passed into the function when it is called.\n# This function has one parameter, x.\n# When we call the function, the value we pass in\n# as an argument will replace x in the computation.\ndef triple(x):\nreturn x*3"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec11/parameter-scope-and-return-values.html#parameter-scope-and-return-values",
    "href": "fa24/lectures_qmd_complete/lec11/parameter-scope-and-return-values.html#parameter-scope-and-return-values",
    "title": "Parameter Scope and Return Values",
    "section": "Parameter Scope and Return Values",
    "text": "Parameter Scope and Return Values\n\n\nFunctions and Parameters\n\n\nParameter Scope and Return Values\n\n\nString Methods\n\n\nDemo\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec11/parameter-scope-and-return-values.html#scope",
    "href": "fa24/lectures_qmd_complete/lec11/parameter-scope-and-return-values.html#scope",
    "title": "Parameter Scope and Return Values",
    "section": "Scope",
    "text": "Scope\n\nThe names you choose for a function’s parameters are only known to that function (known as “local scope”). The rest of your notebook is unaffected by parameter names."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec11/parameter-scope-and-return-values.html#scope-1",
    "href": "fa24/lectures_qmd_complete/lec11/parameter-scope-and-return-values.html#scope-1",
    "title": "Parameter Scope and Return Values",
    "section": "Scope",
    "text": "Scope\n\nSimilarly, you can choose parameter names that also exist as names outside of your function.\nWe do this sometimes, but it can get confusing."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec11/parameter-scope-and-return-values.html#scope-2",
    "href": "fa24/lectures_qmd_complete/lec11/parameter-scope-and-return-values.html#scope-2",
    "title": "Parameter Scope and Return Values",
    "section": "Scope",
    "text": "Scope\n\nYou can also use names that don’t overlap with parameter names within your function.\nIn such cases, the function looks “outside” of its definition to the rest of your notebook to see if it can find that name anywhere."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec11/parameter-scope-and-return-values.html#aside-out-of-scope",
    "href": "fa24/lectures_qmd_complete/lec11/parameter-scope-and-return-values.html#aside-out-of-scope",
    "title": "Parameter Scope and Return Values",
    "section": "Aside: “Out of Scope”",
    "text": "Aside: “Out of Scope”\n\nIn Data 6 (and other CS/DS classes), when we say a concept is “out of scope”, this is where it comes from."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec11/parameter-scope-and-return-values.html#return-values",
    "href": "fa24/lectures_qmd_complete/lec11/parameter-scope-and-return-values.html#return-values",
    "title": "Parameter Scope and Return Values",
    "section": "Return Values",
    "text": "Return Values\n\nFunctions are not required to “return” anything. If a function doesn’t explicitly return anything, it will return None (like print)."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec11/parameter-scope-and-return-values.html#return-statements",
    "href": "fa24/lectures_qmd_complete/lec11/parameter-scope-and-return-values.html#return-statements",
    "title": "Parameter Scope and Return Values",
    "section": "Return Statements",
    "text": "Return Statements\n\nOnce we reach a return keyword, our function is done running. Nothing after it is run."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec11/string-methods.html",
    "href": "fa24/lectures_qmd_complete/lec11/string-methods.html",
    "title": "String Methods",
    "section": "",
    "text": "Functions and Parameters\n\n\nParameter Scope and Return Values\n\n\nString Methods\n\n\nDemo\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec11/string-methods.html#string-methods",
    "href": "fa24/lectures_qmd_complete/lec11/string-methods.html#string-methods",
    "title": "String Methods",
    "section": "",
    "text": "Functions and Parameters\n\n\nParameter Scope and Return Values\n\n\nString Methods\n\n\nDemo\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec11/string-methods.html#methods",
    "href": "fa24/lectures_qmd_complete/lec11/string-methods.html#methods",
    "title": "String Methods",
    "section": "Methods",
    "text": "Methods\n\nMethods are functions with slightly different syntax.\n‘ian’.upper() # Evaluates to ‘IAN’\nMethods use “dot notation”.\nIn our class, we will not write any methods of our own; we’ll only write functions of our own.\nHowever, many of the data types we will deal with have built-in methods that we will use."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec11/string-methods.html#string-methods-1",
    "href": "fa24/lectures_qmd_complete/lec11/string-methods.html#string-methods-1",
    "title": "String Methods",
    "section": "String Methods",
    "text": "String Methods\n\nJust like tables have table methods, strings have string methods that can be used on any string. For now, here are some methods that work on strings that you should know.\nAssume that the line s = ‘JuNiOR12’ has been run.\nThere are many more, but we will use them as they become relevant."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec11/functions-and-parameters.html",
    "href": "fa24/lectures_qmd_complete/lec11/functions-and-parameters.html",
    "title": "Functions and Parameters",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 11\nBreaking programs into smaller pieces.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec11/functions-and-parameters.html#functions",
    "href": "fa24/lectures_qmd_complete/lec11/functions-and-parameters.html#functions",
    "title": "Functions and Parameters",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 11\nBreaking programs into smaller pieces.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec11/functions-and-parameters.html#functions-and-parameters",
    "href": "fa24/lectures_qmd_complete/lec11/functions-and-parameters.html#functions-and-parameters",
    "title": "Functions and Parameters",
    "section": "Functions and Parameters",
    "text": "Functions and Parameters\n\n\nFunctions and Parameters\n\n\nParameter Scope and Return Values\n\n\nString Methods\n\n\nDemo\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec11/functions-and-parameters.html#functions-1",
    "href": "fa24/lectures_qmd_complete/lec11/functions-and-parameters.html#functions-1",
    "title": "Functions and Parameters",
    "section": "Functions",
    "text": "Functions\n\nA key facet of Python and many other programming languages is the concept of a function.\nFunctions are a way to divide our code into small subparts to prevent us from writing repetitive code. They abstract away the complexity of operations, kind of like a toaster:"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec11/functions-and-parameters.html#functions-2",
    "href": "fa24/lectures_qmd_complete/lec11/functions-and-parameters.html#functions-2",
    "title": "Functions and Parameters",
    "section": "Functions",
    "text": "Functions\n\nFunctions are a way to divide our code into small subparts to prevent us from writing repetitive code.\ndef calc_grade(bins, scores):\nreturn sum(bins * scores/100)\ncalc_grade(data6_bins, data6_scores) # Evaluates to 100\ncalc_grade(data8_bins, data8_scores) # Evaluates to 91.75"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec11/functions-and-parameters.html#defining-new-functions",
    "href": "fa24/lectures_qmd_complete/lec11/functions-and-parameters.html#defining-new-functions",
    "title": "Functions and Parameters",
    "section": "Defining New Functions",
    "text": "Defining New Functions\n\nAll function definitions use the same syntax structure.\ndef calc_grade(bins, scores):\nreturn sum(bins * scores/100)\ndef is a keyword in Python. It means “define”.\ncalc_grade is the name of our new function.\nOur function has two parameters: bins and scores.\nAfter the first line, we must indent using 4 spaces or one tab.\nThe return keyword determines what our function outputs."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec11/functions-and-parameters.html#parameters",
    "href": "fa24/lectures_qmd_complete/lec11/functions-and-parameters.html#parameters",
    "title": "Functions and Parameters",
    "section": "Parameters",
    "text": "Parameters\n\nParameters are the names that a function requires as an input, that are defined in its “signature”.\nParameters are placeholders for the values that will be passed into the function when it is called.\n# This function has one parameter, x.\n# When we call the function, the value we pass in\n# as an argument will replace x in the computation.\ndef triple(x):\nreturn x*3"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec16/1973-uc-berkeley-graduate-admissions.html",
    "href": "fa24/lectures_qmd_complete/lec16/1973-uc-berkeley-graduate-admissions.html",
    "title": "1973 UC Berkeley Graduate Admissions",
    "section": "",
    "text": "1973 UC Berkeley Graduate Admissions\nSimpson’s Paradox\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec16/1973-uc-berkeley-graduate-admissions.html#uc-berkeley-graduate-admissions",
    "href": "fa24/lectures_qmd_complete/lec16/1973-uc-berkeley-graduate-admissions.html#uc-berkeley-graduate-admissions",
    "title": "1973 UC Berkeley Graduate Admissions",
    "section": "",
    "text": "1973 UC Berkeley Graduate Admissions\nSimpson’s Paradox\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec16/1973-uc-berkeley-graduate-admissions.html#uc-berkeley-fall-1973",
    "href": "fa24/lectures_qmd_complete/lec16/1973-uc-berkeley-graduate-admissions.html#uc-berkeley-fall-1973",
    "title": "1973 UC Berkeley Graduate Admissions",
    "section": "UC Berkeley, Fall 1973",
    "text": "UC Berkeley, Fall 1973\n\nUC Berkeley graduate admissions data from the Fall of 1973.\nAdmissions data disaggregated by the six largest departments, labeled A through F.\nFreedman, Pisani, and Purves. “Sex Bias in Graduate Admissions.” Statistics (1978) Chapter 2. pp. 17-20.\nBickel, Hammel, and O’Connell. “Sex Bias in Graduate Admissions:” Data from Berkeley“ Science vol. 187 (1975) pp. 398-404.\nWikipedia [link]\nGreater percentage of successful applicantsthan the other listed gender\nGreater number of applicants than the other listed gender"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec16/simpsons-paradox.html",
    "href": "fa24/lectures_qmd_complete/lec16/simpsons-paradox.html",
    "title": "Simpson’s Paradox",
    "section": "",
    "text": "➤\n1973 UC Berkeley Graduate Admissions\nSimpson’s Paradox"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec16/simpsons-paradox.html#simpsons-paradox",
    "href": "fa24/lectures_qmd_complete/lec16/simpsons-paradox.html#simpsons-paradox",
    "title": "Simpson’s Paradox",
    "section": "",
    "text": "➤\n1973 UC Berkeley Graduate Admissions\nSimpson’s Paradox"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec16/simpsons-paradox.html#simpsons-paradox-1",
    "href": "fa24/lectures_qmd_complete/lec16/simpsons-paradox.html#simpsons-paradox-1",
    "title": "Simpson’s Paradox",
    "section": "Simpson’s Paradox",
    "text": "Simpson’s Paradox\n\nSimpson’s paradox is a phenomenon where a trend appears to go one way in data, but when disaggregated into groups the trend appears to reverse direction or disappear.\nSimpson’s paradox involves at least three variables:\nThe observed outcome variable\nThe observed explanatory variable\nThe lurking (or confounding) explanatory variable\n(less of a paradox; more of a lesson to analyze not just the whole, but also the parts)\nWikipedia [link]"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec16/simpsons-paradox.html#simpsons-paradox-example",
    "href": "fa24/lectures_qmd_complete/lec16/simpsons-paradox.html#simpsons-paradox-example",
    "title": "Simpson’s Paradox",
    "section": "Simpson’s Paradox: Example",
    "text": "Simpson’s Paradox: Example\n\nWhen taken as a whole, women seem to have a lower admission rate than men.\nFreedman, Pisani, and Purves. “Sex Bias in Graduate Admissions.” Statistics (1978) Chapter 2. pp. 17-20.\nBickel, Hammel, and O’Connell. “Sex Bias in Graduate Admissions:” Data from Berkeley“ Science vol. 187 (1975) pp. 398-404.\nWikipedia [link]\nWhen split by departments, women actually have a higher admission rate than men in many different departments (4 of the largest 6).\nGreater percentage of successful applicantsthan the other listed gender\nGreater number of applicants than the other listed gender"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec16/simpsons-paradox.html#simpsons-paradox-visualized",
    "href": "fa24/lectures_qmd_complete/lec16/simpsons-paradox.html#simpsons-paradox-visualized",
    "title": "Simpson’s Paradox",
    "section": "Simpson’s Paradox: Visualized",
    "text": "Simpson’s Paradox: Visualized\n\nWhen taken as a whole, women seem to have a lower admission rate than men.\nFreedman, Pisani, and Purves. “Sex Bias in Graduate Admissions.” Statistics (1978) Chapter 2. pp. 17-20.\nBickel, Hammel, and O’Connell. “Sex Bias in Graduate Admissions:” Data from Berkeley“ Science vol. 187 (1975) pp. 398-404.\nWikipedia [link]\nWhen split by departments, women actually have a higher admission rate than men in many different departments (4 of the largest 6).\nhttps://setosa.io/simpsons/\n\n\n\nSpeaker notes\n\nNOTE: to get rid of unprofessional caption on a website, once you open the URL then right-click, hit “Inspect”, then double-click/edit to remove the offensive text."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec20/examples.html",
    "href": "fa24/lectures_qmd_complete/lec20/examples.html",
    "title": "Examples",
    "section": "",
    "text": "Review: For Loops\n\n\nWhile Loops\n\n\nExamples\n\n\nDemo: Sorting an Array\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec20/examples.html#examples",
    "href": "fa24/lectures_qmd_complete/lec20/examples.html#examples",
    "title": "Examples",
    "section": "",
    "text": "Review: For Loops\n\n\nWhile Loops\n\n\nExamples\n\n\nDemo: Sorting an Array\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec20/index.html",
    "href": "fa24/lectures_qmd_complete/lec20/index.html",
    "title": "Lecture 20 More Iteration",
    "section": "",
    "text": "This chapter covers the key concepts from Lecture 20."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec20/index.html#topics-covered",
    "href": "fa24/lectures_qmd_complete/lec20/index.html#topics-covered",
    "title": "Lecture 20 More Iteration",
    "section": "Topics Covered",
    "text": "Topics Covered\n\nReview: For Loops\nWhile Loops\nExamples\nDemo: Sorting an Array"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec18/truthy-values.html",
    "href": "fa24/lectures_qmd_complete/lec18/truthy-values.html",
    "title": "Truthy Values",
    "section": "",
    "text": "Motivation\n\n\nIf and If-Else Statements\n\n\nElif\n\n\nTruthy Values\n\n\nDemo\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec18/truthy-values.html#truthy-values",
    "href": "fa24/lectures_qmd_complete/lec18/truthy-values.html#truthy-values",
    "title": "Truthy Values",
    "section": "",
    "text": "Motivation\n\n\nIf and If-Else Statements\n\n\nElif\n\n\nTruthy Values\n\n\nDemo\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec18/truthy-values.html#truthy-values-1",
    "href": "fa24/lectures_qmd_complete/lec18/truthy-values.html#truthy-values-1",
    "title": "Truthy Values",
    "section": "Truthy Values",
    "text": "Truthy Values\n\nIt turns out that almost everything evaluates to True when converted to bool.\nThese are pretty much the only exceptions (these all evaluate to False):\nFalse\n’’(the empty string)\n0 (and hence 0.0)\nNone\nGenerally things that are empty (empty lists, sets, dictionaries, etc)\nIf something evaluates to True when converted to bool, we call it a truthy value. Otherwise, we call it a falsy value."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec18/truthy-values.html#truthy-values-in-practice",
    "href": "fa24/lectures_qmd_complete/lec18/truthy-values.html#truthy-values-in-practice",
    "title": "Truthy Values",
    "section": "Truthy Values in Practice",
    "text": "Truthy Values in Practice\n\nConditional statements use the truthiness of an expression."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec18/boolean-operators.html",
    "href": "fa24/lectures_qmd_complete/lec18/boolean-operators.html",
    "title": "Boolean Operators",
    "section": "",
    "text": "Each of these comparisons evaluate to True if the statement holds, and False if it doesn’t."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec18/boolean-operators.html#comparison-operators",
    "href": "fa24/lectures_qmd_complete/lec18/boolean-operators.html#comparison-operators",
    "title": "Boolean Operators",
    "section": "",
    "text": "Each of these comparisons evaluate to True if the statement holds, and False if it doesn’t."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec18/boolean-operators.html#boolean-operators",
    "href": "fa24/lectures_qmd_complete/lec18/boolean-operators.html#boolean-operators",
    "title": "Boolean Operators",
    "section": "Boolean Operators",
    "text": "Boolean Operators\n\n\nComparisons\n\n\nBoolean Operators\n\n\nTruth Tables\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec18/boolean-operators.html#boolean-operators-1",
    "href": "fa24/lectures_qmd_complete/lec18/boolean-operators.html#boolean-operators-1",
    "title": "Boolean Operators",
    "section": "Boolean operators",
    "text": "Boolean operators\n\nBoolean operators allow us to combine the result of multiple booleans.\nand and or operate on two (or more) operands; not operates on just one."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec18/boolean-operators.html#compound-boolean-expressions",
    "href": "fa24/lectures_qmd_complete/lec18/boolean-operators.html#compound-boolean-expressions",
    "title": "Boolean Operators",
    "section": "Compound boolean expressions",
    "text": "Compound boolean expressions\n\nThings can get pretty wacky!\n3 &lt; 4 &lt;= 5 # True\n3 &lt; 4 &gt; 2 &lt; 11 &gt; -1 # True\n3 &lt; 4 &lt; 2 &gt; 11 &gt; -1 # False\nBut again, just because you can do something doesn’t mean you should.\nThe first line is fine, but don’t use the latter two."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec18/index.html",
    "href": "fa24/lectures_qmd_complete/lec18/index.html",
    "title": "Comparisons and Control",
    "section": "",
    "text": "This chapter covers the key concepts from Lecture 18."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec18/index.html#topics-covered",
    "href": "fa24/lectures_qmd_complete/lec18/index.html#topics-covered",
    "title": "Comparisons and Control",
    "section": "Topics Covered",
    "text": "Topics Covered\n\nComparisons\nBoolean Operators\nTruth Tables\nIf and If-Else Statements\nElif\nTruthy Values"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec18/if-and-if-else-statements.html",
    "href": "fa24/lectures_qmd_complete/lec18/if-and-if-else-statements.html",
    "title": "If and If-Else Statements",
    "section": "",
    "text": "If statements allow our code to make decisions."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec18/if-and-if-else-statements.html#if-statements-an-example",
    "href": "fa24/lectures_qmd_complete/lec18/if-and-if-else-statements.html#if-statements-an-example",
    "title": "If and If-Else Statements",
    "section": "",
    "text": "If statements allow our code to make decisions."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec18/if-and-if-else-statements.html#if-and-if-else",
    "href": "fa24/lectures_qmd_complete/lec18/if-and-if-else-statements.html#if-and-if-else",
    "title": "If and If-Else Statements",
    "section": "If and If-Else",
    "text": "If and If-Else\n\n\nMotivation\n\n\nIf and If-Else Statements\n\n\nElif\n\n\nTruthy Values\n\n\nDemo\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec18/if-and-if-else-statements.html#if-statements",
    "href": "fa24/lectures_qmd_complete/lec18/if-and-if-else-statements.html#if-statements",
    "title": "If and If-Else Statements",
    "section": "If Statements",
    "text": "If Statements\n\nIf statements are used to control which lines of code are run, according to some boolean expression(s).\nThe most basic if-statement includes just one header: if.\nif :\n\nIf  is True,  is run. Otherwise, it is not run"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec18/if-and-if-else-statements.html#if-else",
    "href": "fa24/lectures_qmd_complete/lec18/if-and-if-else-statements.html#if-else",
    "title": "If and If-Else Statements",
    "section": "If-Else",
    "text": "If-Else\n\nOptionally, you can also use the else header. Use else if you want your code to do something in the event that  is False.\nif :\n\nelse:\n\nIf  is True,  is run.\nIf  is False,  is run."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/index.html",
    "href": "fa24/lectures_qmd_complete/lec05/index.html",
    "title": "NumPy, Indexing, Variables in Data Science",
    "section": "",
    "text": "This chapter covers the key concepts from Lecture 05."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/index.html#topics-covered",
    "href": "fa24/lectures_qmd_complete/lec05/index.html#topics-covered",
    "title": "NumPy, Indexing, Variables in Data Science",
    "section": "Topics Covered",
    "text": "Topics Covered\n\nArray Functions\nNumPy\nIndexing\nVariables in Data Science"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/indexing.html",
    "href": "fa24/lectures_qmd_complete/lec05/indexing.html",
    "title": "Indexing",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 05\nWhat it means to work with data.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/indexing.html#numpy-indexing-variables-in-data-science",
    "href": "fa24/lectures_qmd_complete/lec05/indexing.html#numpy-indexing-variables-in-data-science",
    "title": "Indexing",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 05\nWhat it means to work with data.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/indexing.html#indexing",
    "href": "fa24/lectures_qmd_complete/lec05/indexing.html#indexing",
    "title": "Indexing",
    "section": "Indexing",
    "text": "Indexing\n\n➤\n\nArray Functions\n\n\nNumPy\n\n\nIndexing"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/indexing.html#array-indexing",
    "href": "fa24/lectures_qmd_complete/lec05/indexing.html#array-indexing",
    "title": "Indexing",
    "section": "Array Indexing",
    "text": "Array Indexing\n\nWe can access an element in an array by using its index and the item() method:\narr.item(index)\nThough int_arr has 5 elements, the largest valid index is 4."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec05/indexing.html#negative-indexing",
    "href": "fa24/lectures_qmd_complete/lec05/indexing.html#negative-indexing",
    "title": "Indexing",
    "section": "Negative Indexing",
    "text": "Negative Indexing\n\nWe can also “count backwards” using negative indexes.\n-1 corresponds to the last element in a array.\n-2 corresponds to the second last element in a array.\nAnd so on…"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/arithmetic.html",
    "href": "fa24/lectures_qmd_complete/lec02/arithmetic.html",
    "title": "Arithmetic",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 02\nGetting familiar with our computing environment, and\nwriting our first Python programs.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University\ndata6.org/fa24/syllabus/#acknowledgements-"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/arithmetic.html#jupyter-notebooks-arithmetic",
    "href": "fa24/lectures_qmd_complete/lec02/arithmetic.html#jupyter-notebooks-arithmetic",
    "title": "Arithmetic",
    "section": "",
    "text": "Data 6 Fall 2024\nLECTURE 02\nGetting familiar with our computing environment, and\nwriting our first Python programs.\nDeveloped by students and faculty at UC Berkeley and Tuskegee University\ndata6.org/fa24/syllabus/#acknowledgements-"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/arithmetic.html#arithmetic-operators-with-ints-and-floats",
    "href": "fa24/lectures_qmd_complete/lec02/arithmetic.html#arithmetic-operators-with-ints-and-floats",
    "title": "Arithmetic",
    "section": "Arithmetic operators with ints and floats",
    "text": "Arithmetic operators with ints and floats\n\nWhen you add, subtract, and multiply int’s, the result will always be an int.\nAnytime you use a float in a calculation, the result is a float."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/example-incidence.html",
    "href": "fa24/lectures_qmd_complete/lec02/example-incidence.html",
    "title": "Example: Incidence",
    "section": "",
    "text": "Programming in Python\n\n\nArithmetic\n\n\nJupyter Shortcuts\n\n\nComments, Data Types, and Errors\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/example-incidence.html#example-incidence",
    "href": "fa24/lectures_qmd_complete/lec02/example-incidence.html#example-incidence",
    "title": "Example: Incidence",
    "section": "",
    "text": "Programming in Python\n\n\nArithmetic\n\n\nJupyter Shortcuts\n\n\nComments, Data Types, and Errors\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/example-incidence.html#incidence-rate",
    "href": "fa24/lectures_qmd_complete/lec02/example-incidence.html#incidence-rate",
    "title": "Example: Incidence",
    "section": "Incidence Rate",
    "text": "Incidence Rate\n\nUse Python to validate these values:\n2020 incidence\n2021 incidence\n†TB incidence is computed as “Cases per 100,000 persons using mid-year population estimates from the U.S. Census Bureau.”\nCDC MMWR source\nU.S. Census population estimates source (2019), source (2020-2021)"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/index.html",
    "href": "fa24/lectures_qmd_complete/lec02/index.html",
    "title": "Jupyter Notebooks, Arithmetic",
    "section": "",
    "text": "This chapter covers the key concepts from Lecture 02."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/index.html#topics-covered",
    "href": "fa24/lectures_qmd_complete/lec02/index.html#topics-covered",
    "title": "Jupyter Notebooks, Arithmetic",
    "section": "Topics Covered",
    "text": "Topics Covered\n\nProgramming in Python\nWhat Is Python Code?\nWhere Do We Write Code?\nArithmetic\nExpressions and Operators\nExample: Incidence\nJupyter Shortcuts\nComments, Data Types, and Errors"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/programming-in-python.html",
    "href": "fa24/lectures_qmd_complete/lec02/programming-in-python.html",
    "title": "Programming in Python",
    "section": "",
    "text": "Programming in Python\n\n\nArithmetic\n\n\nJupyter Shortcuts\n\n\nComments, Data Types, and Errors\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/programming-in-python.html#what-is-python-code",
    "href": "fa24/lectures_qmd_complete/lec02/programming-in-python.html#what-is-python-code",
    "title": "Programming in Python",
    "section": "",
    "text": "Programming in Python\n\n\nArithmetic\n\n\nJupyter Shortcuts\n\n\nComments, Data Types, and Errors\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/programming-in-python.html#why-python",
    "href": "fa24/lectures_qmd_complete/lec02/programming-in-python.html#why-python",
    "title": "Programming in Python",
    "section": "Why Python?",
    "text": "Why Python?\n\nPopular.\nVariety of uses.\n\nWeb development.\nScientific computing.\nData science and machine learning.\nNot really used for developing applications.\n\nData 8, CS61A, and more!\nEasy to dive right in!"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/programming-in-python.html#python-as-a-calculator",
    "href": "fa24/lectures_qmd_complete/lec02/programming-in-python.html#python-as-a-calculator",
    "title": "Programming in Python",
    "section": "Python as a calculator",
    "text": "Python as a calculator\n\nFor now, think of Python as a calculator:\nCalculators take expressions and compute values.\n17\n-1 + 3.14\n2 ** 3\n(17 - 14) / 2\n15 % 2\nThe following are all expressions.\nNotes:\nExpressions consist of values (like 2) and operators (like + and **).\nExpressions evaluate to values.\nexpression"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/programming-in-python.html#common-python-operators",
    "href": "fa24/lectures_qmd_complete/lec02/programming-in-python.html#common-python-operators",
    "title": "Programming in Python",
    "section": "Common Python Operators",
    "text": "Common Python Operators\n\n✅"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/programming-in-python.html#common-python-operators-1",
    "href": "fa24/lectures_qmd_complete/lec02/programming-in-python.html#common-python-operators-1",
    "title": "Programming in Python",
    "section": "Common Python Operators",
    "text": "Common Python Operators\n\nWait, why are there two division operators?"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/expressions-and-operators.html",
    "href": "fa24/lectures_qmd_complete/lec02/expressions-and-operators.html",
    "title": "Expressions and Operators",
    "section": "",
    "text": "Programming in Python\n\n\nArithmetic\n\n\nJupyter Shortcuts\n\n\nComments, Data Types, and Errors\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/expressions-and-operators.html#expressions-and-operators",
    "href": "fa24/lectures_qmd_complete/lec02/expressions-and-operators.html#expressions-and-operators",
    "title": "Expressions and Operators",
    "section": "",
    "text": "Programming in Python\n\n\nArithmetic\n\n\nJupyter Shortcuts\n\n\nComments, Data Types, and Errors\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/expressions-and-operators.html#common-python-operators",
    "href": "fa24/lectures_qmd_complete/lec02/expressions-and-operators.html#common-python-operators",
    "title": "Expressions and Operators",
    "section": "Common Python Operators",
    "text": "Common Python Operators\n\n✅"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/expressions-and-operators.html#common-python-operators-1",
    "href": "fa24/lectures_qmd_complete/lec02/expressions-and-operators.html#common-python-operators-1",
    "title": "Expressions and Operators",
    "section": "Common Python Operators",
    "text": "Common Python Operators\n\nWait, why are there two division operators?"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/expressions-and-operators.html#arithmetic-operators-with-ints-and-floats",
    "href": "fa24/lectures_qmd_complete/lec02/expressions-and-operators.html#arithmetic-operators-with-ints-and-floats",
    "title": "Expressions and Operators",
    "section": "Arithmetic operators with ints and floats",
    "text": "Arithmetic operators with ints and floats\n\nWhen you add, subtract, and multiply int’s, the result will always be an int.\nAnytime you use a float in a calculation, the result is a float."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec02/expressions-and-operators.html#two-different-division-operators-modulo",
    "href": "fa24/lectures_qmd_complete/lec02/expressions-and-operators.html#two-different-division-operators-modulo",
    "title": "Expressions and Operators",
    "section": "Two Different Division Operators + Modulo",
    "text": "Two Different Division Operators + Modulo\n\nWhen you add, subtract, and multiply int’s, the result will always be an int.\nAnytime you use a float in a calculation, the result is a float.\nPython has several division-related operators:\n“Regular” division /\nInteger division, //\nModulo operator, %\nWhat is the modulo operator?"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/nonetype.html",
    "href": "fa24/lectures_qmd_complete/lec04/nonetype.html",
    "title": "NoneType",
    "section": "",
    "text": "NoneType\n\n\nArrays\n\n\nVariables in Data Science\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/nonetype.html#nonetype",
    "href": "fa24/lectures_qmd_complete/lec04/nonetype.html#nonetype",
    "title": "NoneType",
    "section": "",
    "text": "NoneType\n\n\nArrays\n\n\nVariables in Data Science\n\n➤"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/nonetype.html#nonetype-1",
    "href": "fa24/lectures_qmd_complete/lec04/nonetype.html#nonetype-1",
    "title": "NoneType",
    "section": "NoneType",
    "text": "NoneType\n\nThere are infinitely* many integers, floating point numbers, and strings.\nHowever, for the NoneType data type, there is only one value: None.\n*Actually a finite number because of how computers store information; take CS61C to learn more!\nNone is strange:\nCells will not output expressions thatevaluate to None.\nNone can be displayed (i.e., printed).\nNone is also referred to as the “null value.”"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/nonetype.html#nonetype-2",
    "href": "fa24/lectures_qmd_complete/lec04/nonetype.html#nonetype-2",
    "title": "NoneType",
    "section": "NoneType",
    "text": "NoneType\n\nThere are infinitely* many integers, floating point numbers, and strings.\nHowever, for the NoneType data type, there is only one value: None.\n*Actually a finite number because of how computers store information; take CS61C to learn more!\nprint() returns None, therefore when evaluated as the last line in a cell:\nPrint displays the value of the evaluated argument\nBut the cell does not output anything!\ndisplay\noutput\nNone is strange:\nCells will not output expressions thatevaluate to None.\nNone can be displayed (i.e., printed).\nNone is also referred to as the “null value.”"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/display-vs-output.html",
    "href": "fa24/lectures_qmd_complete/lec04/display-vs-output.html",
    "title": "Display vs. Output",
    "section": "",
    "text": "The print() function displays values.\nWorks even if it’s not thelast line of a cell!\nStrings are displayed without quotes"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/display-vs-output.html#a-very-useful-function-for-human-display-print",
    "href": "fa24/lectures_qmd_complete/lec04/display-vs-output.html#a-very-useful-function-for-human-display-print",
    "title": "Display vs. Output",
    "section": "",
    "text": "The print() function displays values.\nWorks even if it’s not thelast line of a cell!\nStrings are displayed without quotes"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/display-vs-output.html#a-very-useful-function-for-human-display-print-1",
    "href": "fa24/lectures_qmd_complete/lec04/display-vs-output.html#a-very-useful-function-for-human-display-print-1",
    "title": "Display vs. Output",
    "section": "A very useful function for human display: print()",
    "text": "A very useful function for human display: print()\n\nTerminology going forward:\nPrint means display\nOutput means cell output\nThe print() function displays values.\nWorks even if it’s not thelast line of a cell!\nStrings are displayed without quotes\n⚠️ Note ⚠️\nPrint displays values.It does not produce cell output!"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/index.html",
    "href": "fa24/lectures_qmd_complete/lec04/index.html",
    "title": "Arrays and Variables",
    "section": "",
    "text": "This chapter covers the key concepts from Lecture 04."
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/index.html#topics-covered",
    "href": "fa24/lectures_qmd_complete/lec04/index.html#topics-covered",
    "title": "Arrays and Variables",
    "section": "Topics Covered",
    "text": "Topics Covered\n\nStrings\nNoneType\nprint()\nDisplay vs. Output\nArrays\nArray Operations\nVariables in Data Science"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/strings.html",
    "href": "fa24/lectures_qmd_complete/lec04/strings.html",
    "title": "Strings",
    "section": "",
    "text": "The third key data type in Python is string. Strings are used to store text.\nA string is a sequence of characters with single quotes ’’ or double quotes ““.\n“go bears!!”\n‘154’\n‘i am 21 years old’\n“”\n’’\nPython strings\nSince strings are values, they can also be used in assignment statements.\nstate = “California”"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/strings.html#strings",
    "href": "fa24/lectures_qmd_complete/lec04/strings.html#strings",
    "title": "Strings",
    "section": "",
    "text": "The third key data type in Python is string. Strings are used to store text.\nA string is a sequence of characters with single quotes ’’ or double quotes ““.\n“go bears!!”\n‘154’\n‘i am 21 years old’\n“”\n’’\nPython strings\nSince strings are values, they can also be used in assignment statements.\nstate = “California”"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/strings.html#strings-1",
    "href": "fa24/lectures_qmd_complete/lec04/strings.html#strings-1",
    "title": "Strings",
    "section": "Strings",
    "text": "Strings\n\nThe third key data type in Python is string. Strings are used to store text.\nA string is a sequence of characters with single quotes ’’ or double quotes ““.\n“go bears!!”\n‘154’\n‘i am 21 years old’\n“”\n’’\nPython strings\nSince strings are values, they can also be used in assignment statements.\nstate = “California”\nA few string operations:\nlen(): string length, i.e., the number of characters in a string\n+: string concatenation"
  },
  {
    "objectID": "fa24/lectures_qmd_complete/lec04/strings.html#casting-with-strings",
    "href": "fa24/lectures_qmd_complete/lec04/strings.html#casting-with-strings",
    "title": "Strings",
    "section": "Casting with Strings",
    "text": "Casting with Strings\n\nWe can also typecast, or convert values between data types. Note that data type conversion is only valid “when it makes sense.”\nstr(x) # Returns x as a string"
  },
  {
    "objectID": "fa24/convert.html",
    "href": "fa24/convert.html",
    "title": "Script to Build Materials for training for Data 6",
    "section": "",
    "text": "try:\n    from pptx import Presentation\nexcept ImportError:\n    !pip install python-pptx\n    from pptx import Presentation\nimport yaml\nfrom pathlib import Path\nimport re"
  },
  {
    "objectID": "fa24/convert.html#step-1---slide-decks",
    "href": "fa24/convert.html#step-1---slide-decks",
    "title": "Script to Build Materials for training for Data 6",
    "section": "Step 1 - Slide Decks",
    "text": "Step 1 - Slide Decks\nFind the slide decks in the Lectures folder.\nFor instance Fall 2024 Slides\nPlease download a zip file of the entire Lectures folder to your computer before proceeding.\n\n\n\n\n\n\nWarning\n\n\n\nThe lectures are formated as Lectures/Lecture_02/lec02.pptx when unzipped. Code would need to be edited for a different structure. Add the zip file as lectures.zip in the same directory as this notebook."
  },
  {
    "objectID": "fa24/convert.html#step-2-script-to-convert-pptx-to-markdown",
    "href": "fa24/convert.html#step-2-script-to-convert-pptx-to-markdown",
    "title": "Script to Build Materials for training for Data 6",
    "section": "Step 2: Script to convert pptx to markdown",
    "text": "Step 2: Script to convert pptx to markdown\n\n# Script to convert pptx to markdown using python-pptx\n# Saves each slide as a markdown header with bullet points for text\n# Speaker notes are included in a collapsible section\n\n\ndef md_escape(s): \n    return (s or \"\").replace(\"*\",\"\\\\*\").replace(\"_\",\"\\\\_\").replace(\"#\",\"\\\\#\")\n\ndef para_to_md(p):\n    txt = \"\".join(r.text for r in p.runs).strip()\n    if not txt: return \"\"\n    indent = \"  \" * (p.level or 0)\n    return f\"{indent}- {md_escape(txt)}\"\n\ndef slide_title(slide):\n    if slide.shapes.title and hasattr(slide.shapes.title, \"text\"):\n        return slide.shapes.title.text.strip()\n    for shp in slide.shapes:\n        if getattr(shp, \"has_text_frame\", False):\n            t = shp.text.strip()\n            if t: return t\n    return \"\"\n\ndef extract_notes(slide):\n    try:\n        ns = slide.notes_slide\n        if ns and ns.notes_text_frame:\n            return ns.notes_text_frame.text.strip()\n    except Exception:\n        pass\n    return \"\"\n\ndef extract_body(slide):\n    lines = []\n    for shp in slide.shapes:\n        if shp == slide.shapes.title: \n            continue\n        if getattr(shp, \"has_text_frame\", False):\n            for p in shp.text_frame.paragraphs:\n                md = para_to_md(p)\n                if md: lines.append(md)\n    return lines\n\nWEEK_NUM_RE = re.compile(r\"\\d+\")\n\ndef infer_week_from_filename(p: Path, valid_min=1, valid_max=60):\n    m = WEEK_NUM_RE.search(p.stem)\n    if not m:\n        return None\n    w = int(m.group(0))\n    return w if valid_min &lt;= w &lt;= valid_max else None\n\ndef pptx_to_md(pptx_path: Path, out_path: Path):\n    prs = Presentation(pptx_path)\n    week = infer_week_from_filename(pptx_path)\n\n    with out_path.open(\"w\", encoding=\"utf-8\") as md:\n        md.write(\"---\\n\")\n        md.write(f'title: \"{md_escape(pptx_path.stem)}\"\\n')\n        md.write(\"---\\n\\n\")\n\n        for i, slide in enumerate(prs.slides, start=1):\n            title = slide_title(slide) or \"(untitled)\"\n            md.write(f\"## Slide {i}: {md_escape(title)}\\n\\n\")\n\n            body = extract_body(slide)\n            if body:\n                md.write(\"\\n\".join(body) + \"\\n\\n\")\n\n            notes = extract_notes(slide)\n            if notes:\n                md.write(\"&lt;details&gt;&lt;summary&gt;Speaker notes&lt;/summary&gt;\\n\\n\")\n                md.write(\"\\n\".join(md_escape(x) for x in notes.splitlines()) + \"\\n\\n&lt;/details&gt;\\n\\n\")\n\n    print(f\"Converted {pptx_path.name} → {out_path.name} (week={week})\")"
  },
  {
    "objectID": "fa24/convert.html#step-3-script-to-convert-all-lectures-from-zip-to-markdown",
    "href": "fa24/convert.html#step-3-script-to-convert-all-lectures-from-zip-to-markdown",
    "title": "Script to Build Materials for training for Data 6",
    "section": "Step 3: Script to Convert all Lectures from Zip to Markdown",
    "text": "Step 3: Script to Convert all Lectures from Zip to Markdown\n\n# End-to-end: unzip fa24/lectures.zip and convert all decks (supports nested folders)\nfrom pathlib import Path\nimport zipfile\n\n# --- configure paths dynamically ---\n# Get the current notebook directory\nNOTEBOOK_DIR = Path.cwd()  # This will be the directory containing this notebook\nZIP_PATH = NOTEBOOK_DIR / \"lectures.zip\"\nEXTRACT_DIR = NOTEBOOK_DIR / \"lectures_extracted\"\nOUTPUT_DIR = NOTEBOOK_DIR / \"lectures_md\"\nOUTPUT_DIR.mkdir(parents=True, exist_ok=True)\n\n# Unzip only if needed\nif ZIP_PATH.exists():\n    if not EXTRACT_DIR.exists() or not any(EXTRACT_DIR.iterdir()):\n        EXTRACT_DIR.mkdir(parents=True, exist_ok=True)\n        with zipfile.ZipFile(ZIP_PATH, 'r') as zf:\n            zf.extractall(EXTRACT_DIR)\n        print(f\"Extracted {ZIP_PATH.name} -&gt; {EXTRACT_DIR}\")\n    else:\n        print(f\"Using existing extracted contents at {EXTRACT_DIR}\")\nelse:\n    print(f\"Zip not found: {ZIP_PATH}. Skipping extraction.\")\n\n# Determine root where PPTX files live (handle zips that contain a top-level 'lectures/' folder)\nif (EXTRACT_DIR / \"lectures\").exists():\n    INPUT_DIR = EXTRACT_DIR / \"lectures\"\nelse:\n    INPUT_DIR = EXTRACT_DIR\n\nprint(f\"Searching for decks under: {INPUT_DIR}\")\n\n# Gather all .pptx recursively to handle structures like lectures/lec01/lec01.pptx\npptx_files = sorted(INPUT_DIR.rglob(\"*.pptx\"))\n\nif not pptx_files:\n    print(f\"No .pptx files found under {INPUT_DIR} (searched recursively)\")\nelse:\n    print(f\"Found {len(pptx_files)} decks. Converting to: {OUTPUT_DIR}\\n\")\n\n    failures = []\n    for idx, pptx_path in enumerate(pptx_files, start=1):\n        # Preserve subfolder structure in the output\n        rel_path = pptx_path.relative_to(INPUT_DIR)\n        out_md = (OUTPUT_DIR / rel_path).with_suffix(\".md\")\n        out_md.parent.mkdir(parents=True, exist_ok=True)\n        try:\n            pptx_to_md(pptx_path, out_md)\n        except Exception as e:\n            failures.append((str(rel_path), str(e)))\n            print(f\"⚠️ Failed on {rel_path}: {e}\")\n\n    if failures:\n        print(\"\\nDone with errors on these files:\")\n        for name, err in failures:\n            print(f\" - {name}: {err}\")\n    else:\n        print(\"\\nAll decks converted successfully ✅\")"
  },
  {
    "objectID": "fa24/convert.html#step-4-make-a-summary-yaml-file-of-the-slide-decks",
    "href": "fa24/convert.html#step-4-make-a-summary-yaml-file-of-the-slide-decks",
    "title": "Script to Build Materials for training for Data 6",
    "section": "Step 4 Make a summary yaml file of the slide decks",
    "text": "Step 4 Make a summary yaml file of the slide decks\n\n# --- Build summary.yaml from Markdown front-matter for lectures_md ---\ntry:\n    import yaml\nexcept ImportError:\n    import sys, subprocess\n    subprocess.check_call([sys.executable, \"-m\", \"pip\", \"install\", \"pyyaml\"])\n    import yaml\n\nfrom pathlib import Path\n\n# Use dynamic path\nMD_DIR = OUTPUT_DIR  # Use the OUTPUT_DIR from Step 3\nsummary_path = MD_DIR / \"summary.yaml\"\n\ndef read_front_matter(md_path: Path) -&gt; dict:\n    \"\"\"Read YAML front matter (between --- markers) and return as dict.\"\"\"\n    lines = md_path.read_text(encoding=\"utf-8\").splitlines(True)\n    if not lines or lines[0].strip() != \"---\":\n        return {}\n    try:\n        end_idx = lines.index(\"---\\n\", 1)\n    except ValueError:\n        return {}\n    return yaml.safe_load(\"\".join(lines[1:end_idx])) or {}\n\nrecords = []\nfor md_file in sorted(MD_DIR.rglob(\"*.md\")):\n    meta = read_front_matter(md_file)\n    records.append({\n        \"file\": str(md_file.relative_to(MD_DIR)),\n        \"title\": meta.get(\"title\", md_file.stem),\n        \"type\": meta.get(\"type\", \"slides\"),\n        \"source_path\": meta.get(\"source_path\", \"\"),\n        \"week\": meta.get(\"week\")\n    })\n\n# Order strictly by week (1..15), fall back to alpha if week missing\nwith_week    = [r for r in records if isinstance(r[\"week\"], int)]\nwithout_week = [r for r in records if not isinstance(r[\"week\"], int)]\n\nwith_week.sort(key=lambda r: r[\"week\"])\nwithout_week.sort(key=lambda r: r[\"title\"].lower())\n\nordered = with_week + without_week\nfor i, r in enumerate(ordered, start=1):\n    r[\"order\"] = i\n\n# Write summary.yaml\nsummary_path.write_text(\n    yaml.safe_dump(ordered, sort_keys=False, allow_unicode=True),\n    encoding=\"utf-8\"\n)\n\nprint(f\"Wrote {summary_path} with {len(ordered)} entries.\")\nif without_week:\n    print(\"Note: These files had no 'week' in front matter and were placed at the end:\")\n    for r in without_week:\n        print(\" -\", r[\"file\"])"
  },
  {
    "objectID": "fa24/convert.html#step-5-convert-all-markdown-lectures-to-qmd-format",
    "href": "fa24/convert.html#step-5-convert-all-markdown-lectures-to-qmd-format",
    "title": "Script to Build Materials for training for Data 6",
    "section": "Step 5: Convert all Markdown lectures to QMD format",
    "text": "Step 5: Convert all Markdown lectures to QMD format\n\n# Convert all markdown files to QMD format\n# Adapted from converter.py logic\n\nimport os  # Add missing import\n\ndef md_to_qmd(md_file_path, output_qmd_path, title=None):\n    \"\"\"\n    Converts a Markdown file to a Quarto QMD file with proper YAML frontmatter.\n    \n    Args:\n        md_file_path (str): The path to the input Markdown file.\n        output_qmd_path (str): The desired path for the output QMD file.\n        title (str, optional): The title for the document. If None, will try to extract from content.\n    \"\"\"\n    try:\n        # Read the markdown file\n        with open(md_file_path, 'r', encoding='utf-8') as file:\n            content = file.read()\n        \n        # Check if file already has frontmatter\n        has_frontmatter = content.startswith('---')\n        \n        if has_frontmatter:\n            # File already has frontmatter, use it as-is\n            # This preserves the original lecture text without edits\n            qmd_content = content\n        else:\n            # No frontmatter, add it\n            # Try to extract title from first heading if not provided\n            if title is None:\n                # Look for title in the content\n                title_match = re.search(r'^#\\s+(.+)$', content, re.MULTILINE)\n                if title_match:\n                    title = title_match.group(1).strip()\n                else:\n                    # Use filename as fallback\n                    title = os.path.splitext(os.path.basename(md_file_path))[0]\n            \n            # Create YAML frontmatter\n            yaml_frontmatter = \"---\\n\"\n            yaml_frontmatter += f'title: \"{title}\"\\n'\n            yaml_frontmatter += \"format:\\n\"\n            yaml_frontmatter += \"  html:\\n\"\n            yaml_frontmatter += \"    toc: true\\n\"\n            yaml_frontmatter += \"---\\n\\n\"\n            \n            # Combine frontmatter with content\n            qmd_content = yaml_frontmatter + content\n        \n        # Write the QMD file\n        with open(output_qmd_path, 'w', encoding='utf-8') as file:\n            file.write(qmd_content)\n        \n        print(f\"Successfully created QMD: '{output_qmd_path}'\")\n        return True\n            \n    except Exception as e:\n        print(f\"Error during QMD conversion: {e}\")\n        return False\n\ndef process_md_directory(input_dir, output_dir=\"lectures_qmd\"):\n    \"\"\"\n    Process all markdown files in a directory structure and convert them to QMD.\n    \n    Args:\n        input_dir (str): Directory containing markdown files\n        output_dir (str): Directory to output QMD files\n    \"\"\"\n    # Create output directory if it doesn't exist\n    os.makedirs(output_dir, exist_ok=True)\n    \n    # Find all markdown files\n    md_files = []\n    for root, dirs, files in os.walk(input_dir):\n        for file in files:\n            if file.endswith('.md'):\n                md_files.append(os.path.join(root, file))\n    \n    print(f\"Found {len(md_files)} markdown files to convert.\")\n    \n    # Process each markdown file\n    converted_count = 0\n    for md_path in sorted(md_files):\n        # Extract lecture number from path or filename\n        filename = os.path.basename(md_path)\n        dir_name = os.path.basename(os.path.dirname(md_path))\n        \n        # Try different patterns to extract lecture number\n        # Priority: directory name first, then filename\n        patterns = [\n            r'lec[\\s_-]*(\\d+)',\n            r'lecture[\\s_-]*(\\d+)',\n            r'\\[Lec\\s*(\\d+)\\]',\n            r'^\\d+',\n        ]\n        \n        lec_num = None\n        # First try directory name (higher priority)\n        for pattern in patterns:\n            match = re.search(pattern, dir_name, re.IGNORECASE)\n            if match:\n                lec_num = match.group(1) if match.groups() else match.group(0)\n                break\n        \n        # If no match in directory, try filename\n        if not lec_num:\n            for pattern in patterns:\n                match = re.search(pattern, filename, re.IGNORECASE)\n                if match:\n                    lec_num = match.group(1) if match.groups() else match.group(0)\n                    break\n        \n        if lec_num:\n            # Pad with zero if single digit\n            lec_num = lec_num.zfill(2)\n            output_filename = f\"lec{lec_num}.qmd\"\n        else:\n            # Fallback to using the original filename\n            output_filename = os.path.splitext(filename)[0] + \".qmd\"\n        \n        output_path = os.path.join(output_dir, output_filename)\n        \n        print(f\"\\nProcessing: {filename}\")\n        print(f\"Output: {output_filename}\")\n        \n        # Extract title from filename (clean it up)\n        title = re.sub(r'\\[.*?\\]', '', filename)  # Remove brackets\n        title = os.path.splitext(title)[0]  # Remove extension\n        title = title.strip()\n        \n        # Convert MD to QMD\n        if md_to_qmd(md_path, output_path, title):\n            converted_count += 1\n        else:\n            print(f\"Failed to convert: {filename}\")\n    \n    print(f\"\\n{'='*50}\")\n    print(f\"Conversion complete! Successfully converted {converted_count}/{len(md_files)} files.\")\n    print(f\"Output directory: {output_dir}\")\n    \n    return converted_count\n\n# Convert all markdown files to QMD\nQMD_OUTPUT_DIR = NOTEBOOK_DIR / \"lectures_qmd\"\nconverted_count = process_md_directory(OUTPUT_DIR, QMD_OUTPUT_DIR)"
  },
  {
    "objectID": "fa24/convert.html#step-5-convert-lecture-qmd-files-to-chapter-structure",
    "href": "fa24/convert.html#step-5-convert-lecture-qmd-files-to-chapter-structure",
    "title": "Script to Build Materials for training for Data 6",
    "section": "Step 5: Convert Lecture QMD Files to Chapter Structure",
    "text": "Step 5: Convert Lecture QMD Files to Chapter Structure\n\n# Convert lecture QMD files to chapter structure\n# Creates lectures_qmd_complete/lec01/index.qmd + topic files based on roadmap\n\nimport re\nimport os\nfrom pathlib import Path\n\ndef extract_roadmap_topics(qmd_content):\n    \"\"\"Extract main topics from 'Today's Roadmap' slide\"\"\"\n    # Find the roadmap slide - try multiple patterns\n    patterns = [\n        r\"## Slide \\d+: Today's Roadmap\\s*\\n(.*?)(?=\\n## |$)\",\n        r\"## Slide \\d+: Today.s Roadmap\\s*\\n(.*?)(?=\\n## |$)\",\n        r\"## Slide \\d+: Today's Roadmap\\s*\\n(.*?)(?=\\n## |$)\",\n    ]\n    \n    roadmap_content = None\n    for pattern in patterns:\n        roadmap_match = re.search(pattern, qmd_content, re.DOTALL)\n        if roadmap_match:\n            roadmap_content = roadmap_match.group(1)\n            break\n    \n    if not roadmap_content:\n        print(\"No roadmap slide found\")\n        return []\n    \n    topics = []\n    \n    # Extract main bullet points (not sub-bullets)\n    lines = roadmap_content.split('\\n')\n    for line in lines:\n        line = line.strip()\n        # Skip empty lines and sub-bullets (indented with spaces)\n        if not line or line.startswith('  '):\n            continue\n        # Skip the \"Lecture XX, Data 6 Fall 2024\" line\n        if 'Lecture' in line and 'Data 6 Fall 2024' in line:\n            continue\n        # Extract main topics (lines that start with - but aren't indented)\n        if line.startswith('- '):\n            topic = line[2:].strip()\n            if topic and not topic.startswith('Lecture'):\n                topics.append(topic)\n    \n    print(f\"Found {len(topics)} topics: {topics}\")\n    return topics\n\ndef clean_topic_name(topic):\n    \"\"\"Convert topic to a clean filename\"\"\"\n    # Remove special characters and convert to lowercase\n    clean = re.sub(r'[^\\w\\s-]', '', topic)\n    clean = re.sub(r'[-\\s]+', '-', clean)\n    return clean.lower().strip('-')\n\ndef clean_lecture_title(title):\n    \"\"\"Clean lecture title by removing Data 6 Fall 2024 and [Lec XX] parts\"\"\"\n    # Remove [Lec XX] pattern\n    title = re.sub(r'\\[Lec \\d+\\]\\s*', '', title)\n    # Remove \"Data 6 Fall 2024\" pattern\n    title = re.sub(r'Data 6 Fall 2024\\s*-\\s*', '', title)\n    # Remove any remaining \"Data 6 Fall 2024\" at the end\n    title = re.sub(r'\\s*Data 6 Fall 2024\\s*$', '', title)\n    return title.strip()\n\ndef extract_lecture_title(qmd_content):\n    \"\"\"Extract and clean title from YAML frontmatter\"\"\"\n    yaml_match = re.search(r'---\\s*\\ntitle:\\s*\"([^\"]+)\"', qmd_content)\n    if yaml_match:\n        raw_title = yaml_match.group(1)\n        return clean_lecture_title(raw_title)\n    return \"Untitled Lecture\"\n\ndef extract_slide_content_for_topic(qmd_content, topic):\n    \"\"\"Extract slide content related to a specific topic\"\"\"\n    # Find slides that might contain content for this topic\n    # Look for slides with similar titles or content\n    topic_words = set(re.findall(r'\\b\\w+\\b', topic.lower()))\n    \n    slides = re.findall(r'## Slide \\d+: ([^\\n]+)\\n(.*?)(?=\\n## |$)', qmd_content, re.DOTALL)\n    \n    relevant_content = []\n    for slide_title, slide_content in slides:\n        slide_title_lower = slide_title.lower()\n        slide_words = set(re.findall(r'\\b\\w+\\b', slide_title_lower))\n        \n        # Check if slide title has significant overlap with topic\n        overlap = len(topic_words.intersection(slide_words))\n        if overlap &gt;= 2 or any(word in slide_title_lower for word in topic_words if len(word) &gt; 3):\n            # Clean up the slide content\n            clean_content = slide_content.strip()\n            if clean_content:\n                relevant_content.append(f\"## {slide_title}\\n\\n{clean_content}\\n\")\n    \n    return '\\n'.join(relevant_content)\n\ndef create_chapter_structure(lecture_qmd_path, output_dir):\n    \"\"\"Convert a single lecture QMD to chapter structure\"\"\"\n    # Read the lecture QMD file\n    with open(lecture_qmd_path, 'r', encoding='utf-8') as f:\n        content = f.read()\n    \n    # Extract lecture number from filename\n    lec_match = re.search(r'lec(\\d+)', lecture_qmd_path.stem)\n    if not lec_match:\n        print(f\"Could not extract lecture number from {lecture_qmd_path}\")\n        return False\n    \n    lec_num = lec_match.group(1)\n    lec_dir = output_dir / f\"lec{lec_num}\"\n    lec_dir.mkdir(parents=True, exist_ok=True)\n    \n    # Extract title and topics\n    title = extract_lecture_title(content)\n    topics = extract_roadmap_topics(content)\n    \n    # Create index.qmd with just title and subtitle\n    index_content = f\"\"\"---\ntitle: \"{title}\"\nsubtitle: \"Lecture {lec_num}\"\n---\n\nThis chapter covers the key concepts from Lecture {lec_num}.\n\n\"\"\"\n    \n    # Add links to topic files if they exist\n    if topics:\n        index_content += \"## Topics Covered\\n\\n\"\n        for topic in topics:\n            clean_name = clean_topic_name(topic)\n            index_content += f\"* [{topic}]({clean_name}.qmd)\\n\"\n        index_content += \"\\n\"\n    \n    # Write index.qmd\n    index_path = lec_dir / \"index.qmd\"\n    with open(index_path, 'w', encoding='utf-8') as f:\n        f.write(index_content)\n    \n    # Create topic files from roadmap with actual slide content\n    for topic in topics:\n        clean_name = clean_topic_name(topic)\n        slide_content = extract_slide_content_for_topic(content, topic)\n        \n        topic_content = f\"\"\"---\ntitle: \"{topic}\"\nsubtitle: \"From Lecture {lec_num}\"\n---\n\n{slide_content}\n\n\"\"\"\n        topic_path = lec_dir / f\"{clean_name}.qmd\"\n        with open(topic_path, 'w', encoding='utf-8') as f:\n            f.write(topic_content)\n    \n    print(f\"Created chapter structure for {lecture_qmd_path.name}\")\n    print(f\"  - {index_path}\")\n    for topic in topics:\n        clean_name = clean_topic_name(topic)\n        print(f\"  - {lec_dir / f'{clean_name}.qmd'}\")\n    \n    return True\n\ndef convert_all_lectures_to_chapters():\n    \"\"\"Convert all lecture QMD files to chapter structure\"\"\"\n    # Set up paths\n    lectures_qmd_dir = NOTEBOOK_DIR / \"lectures_qmd\"\n    output_dir = NOTEBOOK_DIR / \"lectures_qmd_complete\"\n    \n    if not lectures_qmd_dir.exists():\n        print(f\"Lectures QMD directory not found: {lectures_qmd_dir}\")\n        return\n    \n    # Create output directory\n    output_dir.mkdir(parents=True, exist_ok=True)\n    \n    # Find all lecture QMD files\n    qmd_files = sorted(lectures_qmd_dir.glob(\"lec*.qmd\"))\n    \n    if not qmd_files:\n        print(f\"No lecture QMD files found in {lectures_qmd_dir}\")\n        return\n    \n    print(f\"Converting {len(qmd_files)} lecture files to chapter structure...\")\n    print(f\"Output directory: {output_dir}\")\n    print()\n    \n    success_count = 0\n    for qmd_file in qmd_files:\n        if create_chapter_structure(qmd_file, output_dir):\n            success_count += 1\n        print()\n    \n    print(f\"Successfully converted {success_count}/{len(qmd_files)} lectures to chapter structure\")\n\n# Run the conversion\nconvert_all_lectures_to_chapters()"
  },
  {
    "objectID": "05-variables/units-of-analysis.html",
    "href": "05-variables/units-of-analysis.html",
    "title": "Units of Analysis",
    "section": "",
    "text": "Operationalization also depends on our unit of analysis, or the level of social life about which we want to generalize. There are many different such units:\n\nIndividuals\nGroups (families, classes, gangs, …)\nLocalities (cities, counties, countries, …)\nOrganizations, industries, political units, social artifacts, etc.\n\nFor example, consider the concept “poverty.” From Carr et al.:\n\nCounting up the number of economic stressors that a person has faced in the past year (for example, trouble paying bills, getting behind on rent) would be appropriate for categorizing individual people but not neighborhoods. Neighborhood poverty is generally assessed through summary factors that can be more directly and comparably measured across large numbers of people, such as average income. One can try to identify the unit of analysis in a study by asking whether the researchers are trying to compare people to each other or neighborhoods to each other.",
    "crumbs": [
      "L05: Variables in Social Science",
      "Units of Analysis"
    ]
  },
  {
    "objectID": "05-variables/units-of-analysis.html#units-of-analysis",
    "href": "05-variables/units-of-analysis.html#units-of-analysis",
    "title": "Units of Analysis",
    "section": "",
    "text": "Operationalization also depends on our unit of analysis, or the level of social life about which we want to generalize. There are many different such units:\n\nIndividuals\nGroups (families, classes, gangs, …)\nLocalities (cities, counties, countries, …)\nOrganizations, industries, political units, social artifacts, etc.\n\nFor example, consider the concept “poverty.” From Carr et al.:\n\nCounting up the number of economic stressors that a person has faced in the past year (for example, trouble paying bills, getting behind on rent) would be appropriate for categorizing individual people but not neighborhoods. Neighborhood poverty is generally assessed through summary factors that can be more directly and comparably measured across large numbers of people, such as average income. One can try to identify the unit of analysis in a study by asking whether the researchers are trying to compare people to each other or neighborhoods to each other.",
    "crumbs": [
      "L05: Variables in Social Science",
      "Units of Analysis"
    ]
  },
  {
    "objectID": "05-variables/units-of-analysis.html#aggregation-and-disaggregation",
    "href": "05-variables/units-of-analysis.html#aggregation-and-disaggregation",
    "title": "Units of Analysis",
    "section": "Aggregation and Disaggregation",
    "text": "Aggregation and Disaggregation\nIt is possible to operationalize variables at larger units of analysis using variables at smaller units of analysis via a process called aggregation.\nAggregation - “Roll up” a variable measured on a fine-grained unit of analysis (e.g., individuals) into a variable on a coarser-grained unit of analysis (e.g., groups).\n\nIncome of many individuals in geographic regions → average income by region\nUsually done through counting or averaging.\n\nFrom Carr et al.:\n\nA discussion of historical change in the onset of puberty in the United States occurs at a national level of analysis. Yet, researchers measure that national level by getting data on puberty from individuals and then calculating an average across the group. A country’s average age of puberty is a national-level concept, and its measurement is based on the aggregation of individual-level data.\n\nWe will soon see that it can often be challenging to move in the other direction with disaggregation:\nDisaggregation: “Drill down” a variable measured on a coarser-grained unit of analysis (e.g., region) into a variable on a coarser-grained unit of analysis (e.g., groups within that region)\n\nGenerally performed to identify confounding (or mediating) variables to disentangle the impact of certain variables (more later)\nAverage income by geographic region → average income by race/ethnicity by region",
    "crumbs": [
      "L05: Variables in Social Science",
      "Units of Analysis"
    ]
  },
  {
    "objectID": "05-variables/units-of-analysis.html#example-dataset-american-community-survey",
    "href": "05-variables/units-of-analysis.html#example-dataset-american-community-survey",
    "title": "Units of Analysis",
    "section": "Example Dataset: American Community Survey",
    "text": "Example Dataset: American Community Survey\nLet’s return to our American Community Survey (ACS) 2020 data. It shows education levels of adults 25 years or higher by state.\n\nACS 2020.\n\n\n\n\n\n\n\n\nState\nEstimated total state population\nEstimated high school graduate or higher (%)\nEstimated bachelor’s degree or higher (%)\n\n\n\n\nAlabama\n3,344,006\n86.9\n26.2\n\n\nCalifornia\n26,665,143\n83.9\n34.7\n\n\nFlorida\n15,255,326\n88.5\n30.5\n\n\nNew York\n13,649,157\n87.2\n37.5\n\n\nTexas\n18,449,851\n84.4\n30.7\n\n\n\nFrom the ACS webpage, the American Community Survey (ACS) is an ongoing monthly survey that collects detailed housing and socioeconomic data.\n\n\n\n\n\n\n\nFigure 1: ACS Household survey, which collects data on individual households.\n\n\n\n\nThere are (at least) two datasets collected by the ACS: A private dataset of survey responses by household (Figure 1), and a public-facing dataset of responses by geographic region. The variables for the geographic region, a larger unit of analysis, are constructed via aggregation and estimation (Figure 2):\n\n\n\n\n\n\n\nFigure 2: ACS reported public data, which reports aggregated data of households across a geographic region.\n\n\n\n\nSimple forms of aggregation are straightforward and involve counting and averaging—methods that are very possible using our limited Data Science toolkit thus far. However, disaggregation cannot be done without individual datapoints! There are various methods of estimating individuals from averages using statistics and distributions; we discuss this briefly in a few weeks, but you can take a statistics course for more information.",
    "crumbs": [
      "L05: Variables in Social Science",
      "Units of Analysis"
    ]
  },
  {
    "objectID": "05-variables/units-of-analysis.html#privacy-and-pums",
    "href": "05-variables/units-of-analysis.html#privacy-and-pums",
    "title": "Units of Analysis",
    "section": "Privacy and PUMS",
    "text": "Privacy and PUMS\nWhy would the ACS choose to release aggregate data publicly, but keep individual data private? Releasing “fine-grained” data about individuals is a privacy issue. It puts individuals in that dataset at risk of being identified beyond the research. In particular, small, already vulnerable populations are often more easily identified.\nNevertheless, the researchers at ACS understand the value of their government-collected dataset for supporting social science researchers in answering questions about large units of analysis. ACS therefore provides aggregated views of data by region and specific disaggregations by certain demographic factors, such as income and sex.\nResearchers who may be studying questions that try to disentangle the impact of demographic factors that ACS disaggregated data does not support (e.g., race/ethnicity) may choose to connect the ACS dataset with a second dataset that has finer-grained data on an individual level, then build up aggregate measures based on differently defined units of analysis.\nThe ACS Public Use Microdata Sample (PUMS) is one such source. PUMS is a smaller sample of records from individual people and/or housing units that uses a combination of techniques (including differential privacy and synthetic data) to preserve individual privacy (source1, source2). We hope that later in this class we can discuss this privacy protection process.",
    "crumbs": [
      "L05: Variables in Social Science",
      "Units of Analysis"
    ]
  },
  {
    "objectID": "05-variables/units-of-analysis.html#external-reading",
    "href": "05-variables/units-of-analysis.html#external-reading",
    "title": "Units of Analysis",
    "section": "External Reading",
    "text": "External Reading\n“Chapter 4: From Concepts to Models.” Elizabeth Heger Boyle, Deborah Carr, Benjamin Cornwell, Shelley Correll, Robert Crosnoe, Jeremy Freese, and Waters, Mary C. 2017. The Art and Science of Social Research. New York: W. W. Norton & Company.",
    "crumbs": [
      "L05: Variables in Social Science",
      "Units of Analysis"
    ]
  },
  {
    "objectID": "05-variables/units-of-analysis.html#references",
    "href": "05-variables/units-of-analysis.html#references",
    "title": "Units of Analysis",
    "section": "References",
    "text": "References\nU.S. Census Bureau, “EDUCATIONAL ATTAINMENT,” American Community Survey 5-Year Estimates Subject Tables, Table S1501, 2020, https://data.census.gov/table/ACSST5Y2020.S1501?q=2020+education&t=Age+and+Sex:Educational+Attainment&g=010XX00US$0400000, accessed on August 24, 2025.\nU.S. Census Bureau, “Design and Methodology Report.” https://www.census.gov/programs-surveys/acs/methodology/design-and-methodology.html, accessed on September 2, 2025.\nU.S. Census Bureau, “Public Use Microdata Sample (PUMS).” https://www.census.gov/programs-surveys/acs/microdata.html, accessed on September 2, 2025.",
    "crumbs": [
      "L05: Variables in Social Science",
      "Units of Analysis"
    ]
  },
  {
    "objectID": "07-visualizations/charts.html",
    "href": "07-visualizations/charts.html",
    "title": "Bar Charts, Scatter Plots, Line Graphs",
    "section": "",
    "text": "This note is entirely based on the external readings:\n\nComputational and Inferential Thinking, Ch 7, 7.1",
    "crumbs": [
      "L07: Visualizations",
      "Bar Charts, Scatter Plots, Line Graphs"
    ]
  },
  {
    "objectID": "07-visualizations/charts.html#external-reading",
    "href": "07-visualizations/charts.html#external-reading",
    "title": "Bar Charts, Scatter Plots, Line Graphs",
    "section": "",
    "text": "This note is entirely based on the external readings:\n\nComputational and Inferential Thinking, Ch 7, 7.1",
    "crumbs": [
      "L07: Visualizations",
      "Bar Charts, Scatter Plots, Line Graphs"
    ]
  },
  {
    "objectID": "07-visualizations/index.html",
    "href": "07-visualizations/index.html",
    "title": "Introduction to Visualizations",
    "section": "",
    "text": "A visualization is a way to represent data in a visual format. In practice, we use visualizations to explore patterns and communicate results.",
    "crumbs": [
      "L07: Visualizations"
    ]
  },
  {
    "objectID": "07-visualizations/index.html#what-is-a-visualization",
    "href": "07-visualizations/index.html#what-is-a-visualization",
    "title": "Introduction to Visualizations",
    "section": "",
    "text": "A visualization is a way to represent data in a visual format. In practice, we use visualizations to explore patterns and communicate results.",
    "crumbs": [
      "L07: Visualizations"
    ]
  },
  {
    "objectID": "07-visualizations/index.html#why-visualization-matters",
    "href": "07-visualizations/index.html#why-visualization-matters",
    "title": "Introduction to Visualizations",
    "section": "Why Visualization Matters",
    "text": "Why Visualization Matters\nVisualization serves two primary purposes:\n\nTo further your own understanding of your results\nTo communicate your results with others\n\nCreating good visualizations is both an art and a science. There is often no single “correct” way to visualize data. However, we must be careful and deliberate when creating visualizations, especially when they will be used in real-world decision-making.\nTo better understand these principles in action, let’s examine how humans have used visual representations throughout history to understand and communicate complex information. The following examples demonstrate powerful uses of data visualization that have shaped our understanding of the world.",
    "crumbs": [
      "L07: Visualizations"
    ]
  },
  {
    "objectID": "07-visualizations/index.html#historical-examples",
    "href": "07-visualizations/index.html#historical-examples",
    "title": "Introduction to Visualizations",
    "section": "Historical Examples",
    "text": "Historical Examples\n\nThe World’s First Map (~6200 BC)\nWhat do you see when you look at this ancient artifact?\n\n\n\n\n\n\n\nFigure 1: The World’s First Map\n\n\n\n\nThis is a map depicting the town of Konya, Turkey - supposedly the world’s first map, dating back to approximately 6200 BC. Even in prehistoric times, humans recognized the power of visual representation to communicate spatial relationships and important information.\n\n\nJohn Snow’s Cholera Map (1854)\n\n\n\n\n\n\nRead Inferential Thinking\n\n\n\nRead Ch 2.1, which describes in detail John Snow’s groundbreaking use of data visualization during the 1854 cholera epidemic.\nThis story demonstrates how observation and visualization can lead to life-saving discoveries, even when the underlying scientific theory (germ theory) wasn’t yet established.\n\n\n\n\n\n\n\n\nData Visualization Saves Lives\n\n\n\nOne of the most famous examples of data visualization directly saving human lives.\n\n\nThe Problem: In August 1854, a massive cholera outbreak was devastating the overcrowded SoHo district of London. Hundreds were dying within days, and the prevailing “miasma theory” blamed bad air and smells.\nThe Solution: Dr. John Snow was skeptical of the miasma theory and suspected contaminated water. He created a revolutionary approach that became standard in epidemiology: he drew a map.\n\n\n\n\n\n\n\nFigure 2: John Snow’s Cholera Map\n\n\n\n\nWhat the map revealed:\n\nDeaths were clustered around the Broad Street pump\nHouses closer to other pumps still used Broad Street (due to street layout)\nThe Lion Brewery had no deaths (workers drank beer and had their own well)\nScattered distant deaths were children who drank from the pump on their way to school\n\nThe Impact: Snow’s map convinced local authorities to remove the handle of the Broad Street pump. Later investigation revealed that a cesspit just feet away had been leaking sewage into the well, contaminating the water with cholera.\n\n\nFlorence Nightingale’s Rose Diagram (1850s)\nFlorence Nightingale wasn’t just a pioneering nurse, she was also an innovative data visualizer. During the Crimean War, she created what’s now called a “rose diagram” or “coxcomb chart” to visualize the causes of death among British soldiers.\n\n\n\n\n\n\n\nFigure 3: Florence Nightingale’s Rose Diagram\n\n\n\n\nHer visualization revealed a shocking truth: more soldiers were dying from preventable diseases than from battle wounds. This wasn’t just a pretty chart, it was a powerful argument that drove major reforms in military medical care. Nightingale understood that abstract statistics about mortality rates couldn’t compete with the visual impact of her rose petals, where the size of each segment made the disparity impossible to ignore.",
    "crumbs": [
      "L07: Visualizations"
    ]
  },
  {
    "objectID": "07-visualizations/index.html#modern-examples",
    "href": "07-visualizations/index.html#modern-examples",
    "title": "Introduction to Visualizations",
    "section": "Modern Examples",
    "text": "Modern Examples\n\nMaya Lin’s Vietnam War Memorial (1982)\nNot all data visualization involves charts and graphs. Maya Lin’s Vietnam War Memorial in Washington DC proves that data can be deeply emotional and memorial, not just analytical.\n\n\n\n\n\n\n\nFigure 4: Vietnam War Memorial\n\n\n\n\nEach of the 58,000+ names etched into the black granite represents one life lost. The chronological arrangement tells the story of the war’s progression through time, while the reflective surface creates an intimate connection between viewers and the data you literally see yourself reflected among the names. This memorial demonstrates that the most powerful visualizations don’t just inform us; they transform how we feel about the information.\n\n\nCOVID-19 Case Tracking (2022)\nDuring the COVID-19 pandemic, data visualization became part of daily life. Suddenly, everyone from epidemiologists to elementary school students was reading line charts showing case trends and interpreting what those curves meant for their communities.\n\n\n\n\n\n\n\nFigure 5: COVID-19 Case Tracking\n\n\n\n\nGoogle’s COVID tracking dashboard exemplified how modern visualization must be both accessible and updateable in real-time. The time series charts showed trends over months with clear visual indicators of peaks and valleys, but more importantly, they translated complex epidemiological data into something any concerned citizen could understand.",
    "crumbs": [
      "L07: Visualizations"
    ]
  },
  {
    "objectID": "07-visualizations/index.html#reflection-questions",
    "href": "07-visualizations/index.html#reflection-questions",
    "title": "Introduction to Visualizations",
    "section": "Reflection Questions",
    "text": "Reflection Questions\nAs you think about these examples, consider:\n\nWhat made each visualization effective for its time and purpose?\nHow might these visualizations be different if created with modern tools?\nWhat can we learn from these examples about designing effective visualizations today?",
    "crumbs": [
      "L07: Visualizations"
    ]
  },
  {
    "objectID": "07-visualizations/index.html#next-steps",
    "href": "07-visualizations/index.html#next-steps",
    "title": "Introduction to Visualizations",
    "section": "Next Steps",
    "text": "Next Steps\nNow that we’ve seen the power of visualization through these historical examples, let’s explore the theory behind what makes visualizations effective.",
    "crumbs": [
      "L07: Visualizations"
    ]
  },
  {
    "objectID": "07-visualizations/index.html#external-reading",
    "href": "07-visualizations/index.html#external-reading",
    "title": "Introduction to Visualizations",
    "section": "External Reading",
    "text": "External Reading\n\n(mentioned in notes) Computational and Inferential Thinking, Ch 2.1",
    "crumbs": [
      "L07: Visualizations"
    ]
  },
  {
    "objectID": "01-intro/jupyter-notebook.html",
    "href": "01-intro/jupyter-notebook.html",
    "title": "Jupyter Notebooks",
    "section": "",
    "text": "This course uses the Python 3 programming language in the Jupyter Notebook environment. By the end of this note, you’ll understand what that means.",
    "crumbs": [
      "L01: Introduction",
      "Jupyter Notebooks"
    ]
  },
  {
    "objectID": "01-intro/jupyter-notebook.html#python-3",
    "href": "01-intro/jupyter-notebook.html#python-3",
    "title": "Jupyter Notebooks",
    "section": "Python 3",
    "text": "Python 3\nFrom Wikipedia:\n\nA computer program is a [set or sequence] of instructions in a programming language.\n\nCode refers to a computer program written in a particular programming language. In this class, we use the Python 3 programming language. It is powerful and widely used in many computing applications, from web development, scripting, and scientific computing to data science and machine learning. It’s also extremely popular worldwide (Statista, 2025).\nComputer programs are nothing more than recipes: we write programs that tell the computer exactly what to do, and it does exactly that—nothing more, and nothing less.\nYou may be wondering—how can computers be simultaneously so powerful and so primitive? Why does everything in today’s age involve computers or computational technology? In part, this “age of computing” can considered as a complex system of advanced programs run on powerful computing machines to transform complex data. All three of these components involve human scientists and engineers: to write and design the programs, to collect and structure the data, and to design and build the computing machines.",
    "crumbs": [
      "L01: Introduction",
      "Jupyter Notebooks"
    ]
  },
  {
    "objectID": "01-intro/jupyter-notebook.html#jupyter-notebooks",
    "href": "01-intro/jupyter-notebook.html#jupyter-notebooks",
    "title": "Jupyter Notebooks",
    "section": "Jupyter Notebooks",
    "text": "Jupyter Notebooks\nIn order to run computer programs, we need a way to execute code written in a programming language on a computer. Development, also known as process of designing, iterating, and testing computer programs, often takes place in an environment which can support all of these tasks.\nThe environment we will use is Jupyter Notebook, which allows us to write and run code within a single .ipynb document (i.e., notebook). They also allow us to embedded text and code.\n\n\n\n\n\n\n\nFigure 1: An example of a Jupyter Notebook.\n\n\n\n\nThere’s a lot going on in the above Jupyter Notebook screenshot: there is code, there is output from running code, there are pictures, and there is (non-code) text. We’ll get to understanding all of these components in due time.\nBut this screenshot also elucidates why a tool like Jupyter Notebook is so important to doing data science work. Data Science often requires the use of computation and visualizations and the production of written reports. Notebooks support all three of these, in the same document.\n\n\n\n\n\n\nAside\n\n\n\n\n\nThe Project Jupyter community actually started at UC Berkeley. Professor Fernando Perez of Statistics created an interactive Python environment as part of his graduate studies in Physics, and the rest is history.\n\n\n\n\n\n\n\n\n\nAside 2\n\n\n\n\n\nAside 2: Jupyter can run things other than Python—in fact, Jupyter’s namesake is the three core languages it supports: Julia, Python, and R.\n\n\n\nIf you take more Computer Science and Data Science classes, you will learn about more tools for programming and statistics. In this class we will focus on using Jupyter Notebooks to develop Python code.",
    "crumbs": [
      "L01: Introduction",
      "Jupyter Notebooks"
    ]
  },
  {
    "objectID": "01-intro/jupyter-notebook.html#datahub",
    "href": "01-intro/jupyter-notebook.html#datahub",
    "title": "Jupyter Notebooks",
    "section": "DataHub",
    "text": "DataHub\nDataHub is the web-based environment we will use in this course for developing and running Jupyter Notebooks. Some features:\n\nDataHub is a Berkeley-hosted server that runs Jupyter notebooks.\nAll students have their own DataHub “container”; think of this as your own virtual computer.\nThis is where you will work on all assignments.\nYou will not need to install anything locally (meaning that you could theoretically do all assignments for this class on your phone, but we recommend giving your fingers and your eyes a break). All you need is a web browser.\nCourse staff can access everything in your DataHub to help debug your code.\n\n\n\n\n\n\n\nAccess DataHub\n\n\n\nIn this class, there are two common ways to develop Jupyter Notebooks:\n\nGo to http://datahub.berkeley.edu. Make a new notebook, or open an existing one.\nFrom our course website, often by clicking on code links or assignment links. These will often create a copy of a notebook skeleton, which you can then run or edit.\n\n\n\nGenerally, we will not be creating notebooks from scratch. Instead, the course staff have helped write scaffolding code and instructions for activities that are designed to help you understand the fundamentals.",
    "crumbs": [
      "L01: Introduction",
      "Jupyter Notebooks"
    ]
  },
  {
    "objectID": "01-intro/jupyter-notebook.html#jupyter-notebook-internals",
    "href": "01-intro/jupyter-notebook.html#jupyter-notebook-internals",
    "title": "Jupyter Notebooks",
    "section": "Jupyter Notebook Internals",
    "text": "Jupyter Notebook Internals\n\n\n\n\n\n\nCaution\n\n\n\nIf you have not yet tried interacting with your first Jupyter Notebook yet, this section will not make much sense. We recommend skipping ahead to the next set of notes, then coming back and referring to this as you build more notebooks.\n\n\nJupyter Notebooks are made up of cells. There are two main types of cells:\nCode cells. This is where you write and execute code. When run, Python code cells are evaluated as a Python code snippet, one line at a time. The cell output displayed is the value of the last evaluated expression:\n\n\n\n\n\n\n\nFigure 2: Both expressions are evaluated, but the result of the last expression’s evaluation is considered the output of the code cell.\n\n\n\n\nWe will discuss this output/display phenomenon more in future notes.\nTo run a code cell, you can either hit the “Run” button in the Toolbar, or you can use a keyboard shortcut: &lt;SHIFT&gt;+&lt;ENTER&gt;, which runs the cell and advances to the next cell. We recommend keyboard shortcuts; see below.\nMarkdown cells. This is where you write text and images that aren’t Python code. Markdown is a language used for formatting text. A Markdown cell will always display its formatting when it is not in edit mode.\n\n\n\n\n\n\n\nFigure 3: Left screenshot shows un-evaluated code cell and raw Markdown cell; right screenshot shows evaluated code cell and formatted text. To render formatted text for a selected markdown cell, exit editing mode for that cell. This screenshot starts with the code cell selected, then runs both that code cell and “runs” the markdown cell below.\n\n\n\n\nHere is a guide to Markdown formatting. You’ll explore Markdown more in lab.\n\nKeyboard Shortcuts\nWhile you can manage most of your notebook development by leveraging the Toolbar, many programmers (including me!) prefer using keyboard shortcuts. This minimizes use of the mouse/trackpad and keeps the hands on the keyboard. Together with stretching and taking breaks, keyboard shortcuts will reduce wrist cramps and improve your programming concentration.\nEdit mode vs. command mode: Hit the &lt;ESCAPE&gt; key on your keyboard to switch from edit mode to command mode. Keyboard shortcuts are specific to the mode you’re using:\n\nEdit mode: when you’re actively typing in the cell. Undo is &lt;CTRL/CMD&gt; + Z.\nCommand mode: when you’re not actively typing in the cell. Undo is z.\n\n\n\n\n\n\n\n\n\nAction\nMode\nKeyboard shortcut\n\n\n\n\nRun cell + jump to next cell*\nEither (puts you in edit mode)\n&lt;SHIFT&gt; + &lt;ENTER&gt;\n\n\nRun cell + stay on this cell\nEither (puts you in edit mode)\n&lt;CTRL/CMD&gt; + &lt;ENTER&gt;\n\n\nSave notebook\nEither\n&lt;CTRL/CMD&gt; + &lt;S&gt;\n\n\nSwitch to command mode*\nEither (puts you in command mode)\n&lt;ESCAPE&gt;\n\n\nSwitch to edit mode*\nCommand\n&lt;ENTER&gt;\n\n\nComment out the current line\nEdit\n&lt;CTRL/CMD&gt; + /\n\n\nCreate new cell above/below\nCommand\nA/B\n\n\nDelete cell\nCommand\nDD\n\n\nConvert cell to Markdown\nCommand\nM\n\n\nConvert cell to code\nCommand\nY\n\n\nShow all shortcuts\nCommand\nH\n\n\n\nThe above table should be used as a reference throughout the semester; don’t try to memorize these right now. And remember, you don’t have to use these shortcuts; you can always use the toolbar. Regardless, we’ve annotated the most useful keyboard shortcuts with an asterisk (*).\nThere are plenty more keyboard shortcuts available. Let us know if you find a good guide.",
    "crumbs": [
      "L01: Introduction",
      "Jupyter Notebooks"
    ]
  },
  {
    "objectID": "01-intro/index.html",
    "href": "01-intro/index.html",
    "title": "Course Introduction",
    "section": "",
    "text": "Check out our slides for today! No additional notes!",
    "crumbs": [
      "L01: Introduction"
    ]
  },
  {
    "objectID": "01-intro/index.html#what-will-i-learn-in-this-course",
    "href": "01-intro/index.html#what-will-i-learn-in-this-course",
    "title": "Course Introduction",
    "section": "",
    "text": "Check out our slides for today! No additional notes!",
    "crumbs": [
      "L01: Introduction"
    ]
  },
  {
    "objectID": "01-intro/index.html#external-reading",
    "href": "01-intro/index.html#external-reading",
    "title": "Course Introduction",
    "section": "External Reading",
    "text": "External Reading\n\nComputational and Inferential Thinking, Ch 1.1",
    "crumbs": [
      "L01: Introduction"
    ]
  },
  {
    "objectID": "06-variables-ii/sample-population.html",
    "href": "06-variables-ii/sample-population.html",
    "title": "Sample vs. Population",
    "section": "",
    "text": "Given a research question, the population is the group you want to learn something about However, directly studying the population as a whole is often not possible! Data might not exist at that scale, or it might be too costly to collect, if it’s even possible to gather that information.\nMany times, we instead study a sample of the population. If the sample is a good representation of the population, we can make useful analyses at a much lower cost.\n\n\nThe set of individuals we actually draw our sample from is the sampling frame. Depending on how we select our sample, we may miss individuals from the population we’re interested in, and we might also include individuals that are not in the population.",
    "crumbs": [
      "L06: Variables II",
      "Sample vs. Population"
    ]
  },
  {
    "objectID": "06-variables-ii/sample-population.html#population-vs.-sample",
    "href": "06-variables-ii/sample-population.html#population-vs.-sample",
    "title": "Sample vs. Population",
    "section": "",
    "text": "Given a research question, the population is the group you want to learn something about However, directly studying the population as a whole is often not possible! Data might not exist at that scale, or it might be too costly to collect, if it’s even possible to gather that information.\nMany times, we instead study a sample of the population. If the sample is a good representation of the population, we can make useful analyses at a much lower cost.\n\n\nThe set of individuals we actually draw our sample from is the sampling frame. Depending on how we select our sample, we may miss individuals from the population we’re interested in, and we might also include individuals that are not in the population.",
    "crumbs": [
      "L06: Variables II",
      "Sample vs. Population"
    ]
  },
  {
    "objectID": "06-variables-ii/sample-population.html#examples",
    "href": "06-variables-ii/sample-population.html#examples",
    "title": "Sample vs. Population",
    "section": "Examples",
    "text": "Examples\n\n\n\n\n\n\n\nFigure 1: A sampling frame may include individuals not in our population.\n\n\n\n\n\nExamples of target populations and the collected samples.\n\n\n\n\n\n\nTarget Population\nCollected sample\n\n\n\n\nStudent body of the school\nA specific classroom of students at the school\n\n\nA bag of 100 marbles\n10 marbles from the bag\n\n\nComputing Education Research (CER) papers\nPapers published at the American Society of Engineering Education (ASEE) conference\n\n\n\nIn the last example of the table, it is possible some of the research papers published at the ASEE conference are not specific to CER and may perhaps be focused on education in other engineering fields, like mechanical engineering or civil engineering. The sampling frame may be inferred to be the ASEE conference, and then the sample collected would need to be adjusted to include just the CER papers we want.\n\nA longer example\nLet’s say you’re planning a social event for all Data Science-declared sophomores (second-years). Since you only have the budget to cater pizza, you want to figure out what pizza toppings Data Science sophomores enjoy, and buy pizza toppings according to how popular they are.\nIn order to figure out the most popular flavors, you survey every student walking into or out of Warren Hall (where Data Science course office hours are located) from 12PM to 1PM by asking what their favorite topping is. Assume that everyone responds.\n\nPopulation: Data Science sophomores\nSampling frame: Students walking into/out of Warren Hall between 12PM and 1PM\n\nIf we draw a sample from this sampling frame we may not get a representative sample because we will get respondents from not just the sophomore pool, but also freshman, juniors, seniors, non-Data Science majors, and generally many more students than our target population. These students may have different preferences than Data Science sophomores.",
    "crumbs": [
      "L06: Variables II",
      "Sample vs. Population"
    ]
  },
  {
    "objectID": "06-variables-ii/sample-population.html#how-do-we-construct-representative-samples",
    "href": "06-variables-ii/sample-population.html#how-do-we-construct-representative-samples",
    "title": "Sample vs. Population",
    "section": "How do we construct representative samples?",
    "text": "How do we construct representative samples?\nWe will (hopefully) get into this topic later this semester.",
    "crumbs": [
      "L06: Variables II",
      "Sample vs. Population"
    ]
  },
  {
    "objectID": "06-variables-ii/index.html",
    "href": "06-variables-ii/index.html",
    "title": "Causality vs. EDA",
    "section": "",
    "text": "Read Inferential Thinking\n\n\n\nRead all of Chapter 2, which describes in detail experimental setup and design. It covers a core story to data scientists: John Snow and the Broad Street Pump.\nBefore continuing, make sure that you are familiar with the following terminology:\n\nobservational study\ncausality\nassociation\ncomparison\ntreatment group\ncontrol group\nrandomized controlled trial (RCT)",
    "crumbs": [
      "L06: Variables II"
    ]
  },
  {
    "objectID": "06-variables-ii/index.html#john-snow-and-the-broad-street-pump",
    "href": "06-variables-ii/index.html#john-snow-and-the-broad-street-pump",
    "title": "Causality vs. EDA",
    "section": "",
    "text": "Read Inferential Thinking\n\n\n\nRead all of Chapter 2, which describes in detail experimental setup and design. It covers a core story to data scientists: John Snow and the Broad Street Pump.\nBefore continuing, make sure that you are familiar with the following terminology:\n\nobservational study\ncausality\nassociation\ncomparison\ntreatment group\ncontrol group\nrandomized controlled trial (RCT)",
    "crumbs": [
      "L06: Variables II"
    ]
  },
  {
    "objectID": "06-variables-ii/index.html#randomized-controlled-trials-vs.-observational-studies",
    "href": "06-variables-ii/index.html#randomized-controlled-trials-vs.-observational-studies",
    "title": "Causality vs. EDA",
    "section": "Randomized Controlled Trials vs. Observational Studies",
    "text": "Randomized Controlled Trials vs. Observational Studies\nIn the Broad Street Pump experiment, John Snow established a causal relationship (between what? Read Inferential Thinking Chapter 2 to find out) because he noted that there was no systematic difference between the two different groups observed other than along a single variable dimension.\nIn modern days, randomized controlled trials are excellent ways to compare two groups of otherwise similar individuals. However, in the majority of this class we will not be able to conduct a randomized controlled trial. This is because the datasets we analyze are almost all observational studies and not experiments. Moreover, these datasets are largely pre-existing materials collected by other researchers, and we may not know the entire picture of how they collected the data. As a result, in this class we seek to understand associations between variables, and we will almost never seek to establish causal relationships between variables.\nTo further understand causality, we encourage you to take inferential thinking courses like Data 8, Stat 20, and a wide range of Statistics courses.",
    "crumbs": [
      "L06: Variables II"
    ]
  },
  {
    "objectID": "06-variables-ii/index.html#confounding",
    "href": "06-variables-ii/index.html#confounding",
    "title": "Causality vs. EDA",
    "section": "Confounding",
    "text": "Confounding\nFrom Inferential Thinking, Ch 3.2 Establishing Causality:\n\nIn an observational study, if the treatment and control groups differ in ways other than the treatment, it is difficult to make conclusions about causality.\nAn underlying difference between the two groups (other than the treatment) is called a confounding factor, because it might confound you (that is, mess you up) when you try to reach a conclusion.\n\nConfounding occurs when two variables can be consistently associated with each other even when one does not cause the other.\nTo determine whether a confounding variable can account for the association between two variables, we can try to disaggregate by different values of the confounding variable.\nThis disaggregation process can be repeated exhaustively for a potentially infinite number of confounding variables. Researchers generally don’t do this. Instead, we usually rely on assumptions drawn from social science theory or findings from prior studies. This process can narrow our search of potential confounding variables that may influence the association between two variables.",
    "crumbs": [
      "L06: Variables II"
    ]
  },
  {
    "objectID": "06-variables-ii/index.html#exploratory-data-analysis",
    "href": "06-variables-ii/index.html#exploratory-data-analysis",
    "title": "Causality vs. EDA",
    "section": "Exploratory Data Analysis",
    "text": "Exploratory Data Analysis\nIf we’re not going to be studying causal relationships in this class, what will we be looking at? In this course we will look deeply at a core component of Data Science: Exploratory Data Analysis, or EDA.\nExploratory Data Analysis (EDA) is like detective work. As coined by the famous American statistician and mathematician John Tukey (we will discuss Tukey numbers soon):\n\nExploratory data analysis is an attitude, a state of flexibility, a willingness to look for those things that we believe are not there, as well as those that we believe to be there.\n\nMore formally, Exploratory Data Analysis (EDA) is the process of understanding a new dataset. It is an open-ended, informal analysis that involves familiarizing ourselves with the variables present in the data, discovering potential hypotheses, and identifying possible issues with the data.",
    "crumbs": [
      "L06: Variables II"
    ]
  },
  {
    "objectID": "06-variables-ii/index.html#data-wrangling",
    "href": "06-variables-ii/index.html#data-wrangling",
    "title": "Causality vs. EDA",
    "section": "Data Wrangling",
    "text": "Data Wrangling\nA process very closely related to EDA is data wrangling, often called data cleaning. Data wrangling is the process of transforming raw data to facilitate subsequent analysis and can address issues like unclear structure or formatting, missing or corrupted values, unit conversions, and so on.\nEDA and data cleaning are often thought of as an “infinite loop,” with each process driving the other.\nFortunately, in our classes we will try our best to work with “clean” datasets. These datasets will often have already been preprocessed for cleaner analysis, allowing us to explore and ask questions much more easily than if we were stuck with messier data.",
    "crumbs": [
      "L06: Variables II"
    ]
  },
  {
    "objectID": "06-variables-ii/index.html#external-reading",
    "href": "06-variables-ii/index.html#external-reading",
    "title": "Causality vs. EDA",
    "section": "External Reading",
    "text": "External Reading\n\n(mentioned in notes) Computational and Inferential Thinking, Ch 5.1\n“Chapter 15: From Concepts to Models.” Elizabeth Heger Boyle, Deborah Carr, Benjamin Cornwell, Shelley Correll, Robert Crosnoe, Jeremy Freese, and Waters, Mary C. 2017. The Art and Science of Social Research. New York: W. W. Norton & Company.",
    "crumbs": [
      "L06: Variables II"
    ]
  },
  {
    "objectID": "04-tables/index.html",
    "href": "04-tables/index.html",
    "title": "Table Fundamentals",
    "section": "",
    "text": "Read Inferential Thinking\n\n\n\nRead Ch 6 intro, which describes the Table object type from the datascience library.\nThis is a very dense chapter, as it has lots of Python syntax. We will review it in detail. Before moving on, we encourage you to focus on the following questions:\n\nWhat is the syntax of the with_columns method? How does this method make a table?\nWhat are some table methods?\nWhat Python expression gets you the number of rows? a specific column? (bonus) How does the syntax differ between these two cases?\nIf you are new to programming, it is easy to get lost in the syntax of Python! For today, we will therefore focus on a few high-level goals:\nIn other words, you will not be expected to memorize all aspects of Tables (it’s as if we have a theme in this class…)! But you will have natural impulses for understanding and working with tabular data, many of which directly map to specific Table methods and attributes. To write Python code, then, you will need to learn to work with documentation to do this translation, and—when the precise methods don’t exist—construct new algorithms to achieve what you want. The more familiar you are with the documentation—and consequently, what is possible with Tables—the more you can focus on algorithmic thinking.",
    "crumbs": [
      "L04: Table Fundamentals"
    ]
  },
  {
    "objectID": "04-tables/index.html#definitions",
    "href": "04-tables/index.html#definitions",
    "title": "Table Fundamentals",
    "section": "Definitions",
    "text": "Definitions\nTo begin, recall the terminology we have been using to describe tables so far:\n\nTable: Retangular data structure.\n\nColumns (vertical) correspond to variables (AKA features, or attributes) that measure and operationalize social concepts. We discuss variables and social concepts more in another note.\nRows (horizontal) correspond to records (AKA entries), which are specific values of variables for a given individual, group, etc.—whatever your unit of analysis is.\n\n\nWe work with the datascience package’s Table.\n\nfrom datascience import *\nimport numpy as np",
    "crumbs": [
      "L04: Table Fundamentals"
    ]
  },
  {
    "objectID": "04-tables/index.html#todays-dataset-schools",
    "href": "04-tables/index.html#todays-dataset-schools",
    "title": "Table Fundamentals",
    "section": "Today’s Dataset: Schools",
    "text": "Today’s Dataset: Schools\nThis lecture we will return to the dataset of public universities in California (Wikipedia).\nTo work with this table, we first load it in from a file called data/cal_unis.csv.\n\nschools = Table.read_table('data/cal_unis.csv')\n\nLet’s break down what we meant by “load it in”: * The right-hand-side of the assignment calls a function that returns a datascience Table object from the provided data file. * The left-hand-side of the assignment assigns this object to the Python name schools. * After this assignment statement, then we can use schools as the particular Table object that has the tabular data we want.\nRunning the below cell evaluates schools and displays that tabular data to us:\n\nschools\n\n\n\n\nName\nInstitution\nCity\nCounty\nEnrollment\nFounded\n\n\n\n\nCalifornia State Polytechnic University, Humboldt\nCSU\nArcata\nHumboldt\n6025\n1913\n\n\nCalifornia State University, Bakersfield\nCSU\nBakersfield\nKern\n9613\n1965\n\n\nUniversity of California, Berkeley\nUC\nBerkeley\nAlameda\n45307\n1869\n\n\nCalifornia State University Channel Islands\nCSU\nCamarillo\nVentura\n6128\n2002\n\n\nCalifornia State University, Dominguez Hills\nCSU\nCarson\nLos Angeles\n16426\n1960\n\n\nCalifornia State University, Chico\nCSU\nChico\nButte\n14183\n1887\n\n\nUniversity of California, Davis\nUC\nDavis\nYolo\n39679\n1905\n\n\nCalifornia State University, Fresno\nCSU\nFresno\nFresno\n23999\n1911\n\n\nCalifornia State University, Fullerton\nCSU\nFullerton\nOrange\n40386\n1957\n\n\nCalifornia State University, East Bay\nCSU\nHayward\nAlameda\n13673\n1957\n\n\n\n\n... (22 rows omitted)\n\n\nLet’s get to exploring and understanding our tabular data!",
    "crumbs": [
      "L04: Table Fundamentals"
    ]
  },
  {
    "objectID": "04-tables/index.html#find-table-dimensions",
    "href": "04-tables/index.html#find-table-dimensions",
    "title": "Table Fundamentals",
    "section": "Find Table Dimensions",
    "text": "Find Table Dimensions\nFirst off: How many rows and columns are in our schools table?\n\nprint(schools.num_rows)\nprint(schools.num_columns)\n\n32\n6\n\n\nWhat variables are being recorded?\n\nprint(schools.labels)\n\n('Name', 'Institution', 'City', 'County', 'Enrollment', 'Founded')\n\n\nWe didn’t conjure these expressions out of nowhere. Instead, we:\n\nLooked at the Data 6 Python Reference page\nScrolled down to the “Tables and Table Methods” section\nSkimmed the reference until we found documentation that seemed close to what we want\nTranslated the name tbl into schools.\nTried it out\n\nBonus: You’ll notice the “dot” syntax for accessing these values, also known as table attributes. See the Bonus last section for a more detailed explanation of this programming terminology.",
    "crumbs": [
      "L04: Table Fundamentals"
    ]
  },
  {
    "objectID": "04-tables/index.html#column-first-paradigm",
    "href": "04-tables/index.html#column-first-paradigm",
    "title": "Table Fundamentals",
    "section": "Column-First Paradigm",
    "text": "Column-First Paradigm\nBecause columns represent variables, we will take a column-first approach to tables.\nTo extract, delete, or make columns from a table named tbl:\n\ntbl.select(...) returns a new table with a subset of columns.\ntbl.drop(...) and returns a new table without a subset of columns\ntbl.with_columns(...) returns a new table with additional new column(s).\n\n\nschools.select('Name', 'Enrollment')\n\n\n\n\nName\nEnrollment\n\n\n\n\nCalifornia State Polytechnic University, Humboldt\n6025\n\n\nCalifornia State University, Bakersfield\n9613\n\n\nUniversity of California, Berkeley\n45307\n\n\nCalifornia State University Channel Islands\n6128\n\n\nCalifornia State University, Dominguez Hills\n16426\n\n\nCalifornia State University, Chico\n14183\n\n\nUniversity of California, Davis\n39679\n\n\nCalifornia State University, Fresno\n23999\n\n\nCalifornia State University, Fullerton\n40386\n\n\nCalifornia State University, East Bay\n13673\n\n\n\n\n... (22 rows omitted)\n\n\n\nschools.drop('Founded', 'County')\n\n\n\n\nName\nInstitution\nCity\nEnrollment\n\n\n\n\nCalifornia State Polytechnic University, Humboldt\nCSU\nArcata\n6025\n\n\nCalifornia State University, Bakersfield\nCSU\nBakersfield\n9613\n\n\nUniversity of California, Berkeley\nUC\nBerkeley\n45307\n\n\nCalifornia State University Channel Islands\nCSU\nCamarillo\n6128\n\n\nCalifornia State University, Dominguez Hills\nCSU\nCarson\n16426\n\n\nCalifornia State University, Chico\nCSU\nChico\n14183\n\n\nUniversity of California, Davis\nUC\nDavis\n39679\n\n\nCalifornia State University, Fresno\nCSU\nFresno\n23999\n\n\nCalifornia State University, Fullerton\nCSU\nFullerton\n40386\n\n\nCalifornia State University, East Bay\nCSU\nHayward\n13673\n\n\n\n\n... (22 rows omitted)\n\n\nNote: The above two cells were run in sequence. Each table method returns a new table, so our original table schools is unchanged.\n\nModifying Tables\n\n\n\n\n\n\nTable methods return copies\n\n\n\nAll table methods return copies of information from the original table! This paradigm is quite useful for data analysis. From Inferential Thinking:\n\n[Table methods] create new smaller tables that share the same data. The fact that the original table is preserved is useful! You can generate multiple different tables that only consider certain columns without worrying that one analysis will affect the other.\n\n\n\nIf we would like to modify the original table, then we must re-assign schools to the new return value:\n\nschools = schools.with_columns(\n    \"Years since founding\",\n    2025 - schools.column(\"Founded\")\n)\nschools\n\n\n\n\nName\nInstitution\nCity\nCounty\nEnrollment\nFounded\nYears since founding\n\n\n\n\nCalifornia State Polytechnic University, Humboldt\nCSU\nArcata\nHumboldt\n6025\n1913\n112\n\n\nCalifornia State University, Bakersfield\nCSU\nBakersfield\nKern\n9613\n1965\n60\n\n\nUniversity of California, Berkeley\nUC\nBerkeley\nAlameda\n45307\n1869\n156\n\n\nCalifornia State University Channel Islands\nCSU\nCamarillo\nVentura\n6128\n2002\n23\n\n\nCalifornia State University, Dominguez Hills\nCSU\nCarson\nLos Angeles\n16426\n1960\n65\n\n\nCalifornia State University, Chico\nCSU\nChico\nButte\n14183\n1887\n138\n\n\nUniversity of California, Davis\nUC\nDavis\nYolo\n39679\n1905\n120\n\n\nCalifornia State University, Fresno\nCSU\nFresno\nFresno\n23999\n1911\n114\n\n\nCalifornia State University, Fullerton\nCSU\nFullerton\nOrange\n40386\n1957\n68\n\n\nCalifornia State University, East Bay\nCSU\nHayward\nAlameda\n13673\n1957\n68\n\n\n\n\n... (22 rows omitted)",
    "crumbs": [
      "L04: Table Fundamentals"
    ]
  },
  {
    "objectID": "04-tables/index.html#filtering-rows",
    "href": "04-tables/index.html#filtering-rows",
    "title": "Table Fundamentals",
    "section": "Filtering Rows",
    "text": "Filtering Rows\nOften we would like to perform row filtering, where we only extract row entries that match a specific feature.\nBy exact match: tbl.where(column, value). Create a new table of only the rows where column column matches the value value.\n\nschools.where(\"Institution\", \"UC\")\n\n\n\n\nName\nInstitution\nCity\nCounty\nEnrollment\nFounded\nYears since founding\n\n\n\n\nUniversity of California, Berkeley\nUC\nBerkeley\nAlameda\n45307\n1869\n156\n\n\nUniversity of California, Davis\nUC\nDavis\nYolo\n39679\n1905\n120\n\n\nUniversity of California, Irvine\nUC\nIrvine\nOrange\n35937\n1965\n60\n\n\nUniversity of California, Los Angeles\nUC\nLos Angeles\nLos Angeles\n46430\n1882\n143\n\n\nUniversity of California, Merced\nUC\nMerced\nMerced\n9110\n2005\n20\n\n\nUniversity of California, Riverside\nUC\nRiverside\nRiverside\n26809\n1954\n71\n\n\nUniversity of California, San Diego\nUC\nSan Diego\nSan Diego\n42006\n1960\n65\n\n\nUniversity of California, Santa Barbara\nUC\nSanta Barbara\nSanta Barbara\n26420\n1891\n134\n\n\nUniversity of California, Santa Cruz\nUC\nSanta Cruz\nSanta Cruz\n19478\n1965\n60\n\n\n\n\n\nBy index: tbl.take(row_indices). Create a new table of only the rows with an index specified in row_indices.\n\nschools.take(1, 3, 5)\n\n\n\n\nName\nInstitution\nCity\nCounty\nEnrollment\nFounded\nYears since founding\n\n\n\n\nCalifornia State University, Bakersfield\nCSU\nBakersfield\nKern\n9613\n1965\n60\n\n\nCalifornia State University Channel Islands\nCSU\nCamarillo\nVentura\n6128\n2002\n23\n\n\nCalifornia State University, Chico\nCSU\nChico\nButte\n14183\n1887\n138\n\n\n\n\n\nAre rows zero-indexed or one-indexed? Why?",
    "crumbs": [
      "L04: Table Fundamentals"
    ]
  },
  {
    "objectID": "04-tables/index.html#creating-new-tables",
    "href": "04-tables/index.html#creating-new-tables",
    "title": "Table Fundamentals",
    "section": "Creating New Tables",
    "text": "Creating New Tables\nSo far we’ve used a table with pre-existing data. We can also make new Tables with a special function: Table().\n\nTable()\n\n\n\n\n\n\n\nCheck it out!!!\n\nstates = Table().with_columns('State', np.array(['California', 'New York', 'Florida', 'Texas', 'Pennsylvania']),'Code', np.array(['CA', 'NY', 'FL', 'TX', 'PA']), 'Population (millions)', np.array([39.3, 19.3, 21.7, 29.3, 12.8]))\nstates\n\n\n\n\nState\nCode\nPopulation (millions)\n\n\n\n\nCalifornia\nCA\n39.3\n\n\nNew York\nNY\n19.3\n\n\nFlorida\nFL\n21.7\n\n\nTexas\nTX\n29.3\n\n\nPennsylvania\nPA\n12.8\n\n\n\n\n\n…unfortunately, due to poor coding style, the above code is quite unreadable. Let’s use whitespace (new lines and indents) to delineate what we are doing:\n\nstates = Table().with_columns(\n  'State', make_array('California', 'New York', 'Florida', 'Texas', 'Pennsylvania'),\n  'Code', make_array('CA', 'NY', 'FL', 'TX', 'PA'),\n  'Population (millions)', make_array(39.3, 19.3, 21.7, 29.3, 12.8)\n)\nstates\n\n\n\n\nState\nCode\nPopulation (millions)\n\n\n\n\nCalifornia\nCA\n39.3\n\n\nNew York\nNY\n19.3\n\n\nFlorida\nFL\n21.7\n\n\nTexas\nTX\n29.3\n\n\nPennsylvania\nPA\n12.8\n\n\n\n\n\n\nMethod Chaining\nMethod chaining in Python is when the object returned from one method becomes the object to use in the next method. In the above case:\n\nCalling the Table returns an empty table.\nThe method with_columns is called on the empty table object, returning a table with the columns State, Code, and Population.\nThis return value is then assigned to states.\n\n\n\n\n\n\n\nWhitespace formatting\n\n\n\nNote the closed parenthesis on the final line. This helps “match” parentheses together.",
    "crumbs": [
      "L04: Table Fundamentals"
    ]
  },
  {
    "objectID": "04-tables/index.html#bonus-methods-vs.-attributes",
    "href": "04-tables/index.html#bonus-methods-vs.-attributes",
    "title": "Table Fundamentals",
    "section": "Bonus: Methods vs. Attributes",
    "text": "Bonus: Methods vs. Attributes\nReturn to the third focus question from the Inferential Thinking reading.\n\nWhat Python expression gets you the number of rows? a specific column? (bonus) How does the syntax differ between these two cases?\n\nThe textbook wording “overloads” two different Python syntax constructs. From the Python glossary:\n\n\n\n\n\n\nAttribute\n\n\n\nAttribute: A value associated with an object which is usually referenced by name using dotted expressions. For example, if an object o has an attribute a it would be referenced as o.a.\nIn other words, attributes are named values tied to specific objects. To get these values, we must refer to them by their name using “dot” syntax.\n\n\n\nschools.num_rows\n\n32\n\n\n\n\n\n\n\n\nMethod\n\n\n\nMethod A function which is defined inside a class body.\nThe Python glossary definition above is a more opaque definition than we would like. But you can think of the methods we study in this class as functions that take into account the attributes and values of specific objects. In order to call them on a specific operation, we also use “dot” syntax. Because they are functions, we must use call expression syntax with parenthesis, and provide arguments as needed.\n\n\n\nschools.column(\"Enrollment\")\n\narray([ 6025,  9613, 45307,  6128, 16426, 14183, 39679, 23999, 40386,\n       13673, 35937, 38973, 46430, 26460,  9110, 37579, 27503, 26809,\n        6637, 31818, 19803, 42006, 37402, 25282, 35751, 22000, 15109,\n       26420, 19478,  7045, 10154,  1017])\n\n\nWhich to syntax use? To determine which “dot” syntax to use, read the documentation. The entire Table class has been defined for us already, and the designers of the datascience package have predetermined which table features make sense to have as attributes, and which features make sense to return as values from a method call. But as a rule of thumb, if you need to specify any additional detail to get what you want, you will likely need to call a function: use table methods and pass in arguments. See the column method call above.\nAnother key indicator is what happens when you use incorrect syntax:\n\nschools.num_rows()\n\n\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\nCell In[16], line 1\n----&gt; 1 schools.num_rows()\n\nTypeError: 'int' object is not callable\n\n\n\nThe above error message means that Python assumed you wanted to call a function num_rows (specifically, a method of the Table schools); however, when run, num_rows was actually an int data type attribute, and ints are not callable. Similarly, below:\n\nschools.column\n\n&lt;bound method Table.column of Name                                              | Institution | City        | County      | Enrollment | Founded | Years since founding\nCalifornia State Polytechnic University, Humboldt | CSU         | Arcata      | Humboldt    | 6025       | 1913    | 112\nCalifornia State University, Bakersfield          | CSU         | Bakersfield | Kern        | 9613       | 1965    | 60\nUniversity of California, Berkeley                | UC          | Berkeley    | Alameda     | 45307      | 1869    | 156\nCalifornia State University Channel Islands       | CSU         | Camarillo   | Ventura     | 6128       | 2002    | 23\nCalifornia State University, Dominguez Hills      | CSU         | Carson      | Los Angeles | 16426      | 1960    | 65\nCalifornia State University, Chico                | CSU         | Chico       | Butte       | 14183      | 1887    | 138\nUniversity of California, Davis                   | UC          | Davis       | Yolo        | 39679      | 1905    | 120\nCalifornia State University, Fresno               | CSU         | Fresno      | Fresno      | 23999      | 1911    | 114\nCalifornia State University, Fullerton            | CSU         | Fullerton   | Orange      | 40386      | 1957    | 68\nCalifornia State University, East Bay             | CSU         | Hayward     | Alameda     | 13673      | 1957    | 68\n... (22 rows omitted)&gt;\n\n\nThe above statement did not error, but it did not output a column, either. Rather, it output a method of a table, but it didn’t call this method.",
    "crumbs": [
      "L04: Table Fundamentals"
    ]
  },
  {
    "objectID": "04-tables/none-print.html",
    "href": "04-tables/none-print.html",
    "title": "None and Print",
    "section": "",
    "text": "We have covered a few data types so far. There are infinitely many integers, floating point numbers, and strings. (Actually finite, because of how computers store information. Take CS61C to learn more.)\nHowever, for the NoneType data type, there is only one value: None.\n\nmy_var = None\ntype(my_var)\n\nNoneType\n\n\nNone is strange: Cells will not output expressions that evaluate to None.\nNone is also referred to as the null value.",
    "crumbs": [
      "L04: Table Fundamentals",
      "None and Print"
    ]
  },
  {
    "objectID": "04-tables/none-print.html#none-type",
    "href": "04-tables/none-print.html#none-type",
    "title": "None and Print",
    "section": "",
    "text": "We have covered a few data types so far. There are infinitely many integers, floating point numbers, and strings. (Actually finite, because of how computers store information. Take CS61C to learn more.)\nHowever, for the NoneType data type, there is only one value: None.\n\nmy_var = None\ntype(my_var)\n\nNoneType\n\n\nNone is strange: Cells will not output expressions that evaluate to None.\nNone is also referred to as the null value.",
    "crumbs": [
      "L04: Table Fundamentals",
      "None and Print"
    ]
  },
  {
    "objectID": "04-tables/none-print.html#the-print-function",
    "href": "04-tables/none-print.html#the-print-function",
    "title": "None and Print",
    "section": "The print function",
    "text": "The print function\nThe print function displays values to the screen (in this case, our Jupyter notebook). Each call to print displays information on a new line.\n\nprint(2)\nprint(\"Hello, world!\")\n\n2\nHello, world!\n\n\nprint lets us to see information about executed statements that are not just the last line of the cell. Could you see why this would be a useful feature for debugging?\nprint is ultra-convenient because it can take as many arguments as you want.\n\nx = 3\ny = 4\nprint(x, \"+\", y, \"is equal to\", x + y)\n\n3 + 4 is equal to 7\n\n\nTrace through the above program. Do you see how expressions are evaluated before printing?",
    "crumbs": [
      "L04: Table Fundamentals",
      "None and Print"
    ]
  },
  {
    "objectID": "04-tables/none-print.html#notebooks-cell-output-vs.-print",
    "href": "04-tables/none-print.html#notebooks-cell-output-vs.-print",
    "title": "None and Print",
    "section": "Notebooks: Cell Output vs. print",
    "text": "Notebooks: Cell Output vs. print\nCell output and print output seem very closely related:\n\nBoth evaluate expressions\nBoth display something in the notebook\n\nHowever, they have subtle differences. We won’t expect you to know all of them. Instead, the purpose of this section is to get you used to tracing programs, where you closely consider Python’s order of execution of each statement, expression, function call, and so on.\nBecause the print output is intended for human view, it displays strings without quotes. Contrast this with the cell output, which includes the quotes.\n\nprint(2)\n\"Hello, world!\"\n\n2\n\n\n'Hello, world!'\n\n\n\nExercise 1\nThis is now super pedantic, but consider the following cells. Can you explain what is happening?\n\nmy_var\n\n\nprint(my_var)\n\nNone\n\n\n\n\n\n\n\n\nExplanation\n\n\n\n\n\nWhen print is evaluated as the last line in a cell, it displays the value of the evaluated argument (here, None). print returns None, so the cell does not additionally output anything,\n\n\n\n\n\nExercise 2\nTry this challenge on for size.\n\nprint(my_var)\nprint(3)\n45\n\nNone\n3\n\n\n45\n\n\n\n\n\n\n\n\nExplanation\n\n\n\n\n\nEach line explained:\n\nEvaluate the first print call expression. This prints the value of my_var to the screen, which evaluates to None. print returns None, but this second None is not output to the sceen because it is not the last line.\nEvaluate the second print call expression. This prints the value of 3 to the screen. print returns None, but this second None is not output to the sceen because it is not the last line.\nEvaluate the third expression, 45; because it is the last line, output to screen.\n\n\n\n\nYou’re thinking like a computer scientist now!",
    "crumbs": [
      "L04: Table Fundamentals",
      "None and Print"
    ]
  },
  {
    "objectID": "08-histograms/exercises.html",
    "href": "08-histograms/exercises.html",
    "title": "Histogram Exercises",
    "section": "",
    "text": "This is an export of the lecture notebook for today. Pay special attention to the Histogram section, where we demo the optional density argument to the hist Table method.",
    "crumbs": [
      "L08: Histograms",
      "Exercises"
    ]
  },
  {
    "objectID": "08-histograms/exercises.html#ranges-are-sequences-of-consecutive-numbers",
    "href": "08-histograms/exercises.html#ranges-are-sequences-of-consecutive-numbers",
    "title": "Histogram Exercises",
    "section": "Ranges are sequences of consecutive numbers",
    "text": "Ranges are sequences of consecutive numbers\nEquivalent:\n\nmake_array(0,1,2,3,4,5,6)\n\narray([0, 1, 2, 3, 4, 5, 6])\n\n\n\nnp.arange(7)\n\narray([0, 1, 2, 3, 4, 5, 6])\n\n\nnp.arange can take one, two, or three arguments. From the docstring, with some light editing:\n    arange([start,] stop[, step,])\n    \n    Return evenly spaced values within a given interval.\n    \n    ``arange`` can be called with a varying number of positional arguments:\n    \n    * ``arange(stop)``: Values are generated within the half-open interval\n      ``[0, stop)`` (in other words, the interval including `start` but\n      excluding `stop`).\n    * ``arange(start, stop)``: Values are generated within the half-open\n      interval ``[start, stop)``.\n    * ``arange(start, stop, step)`` Values are generated within the half-open\n      interval ``[start, stop)``, with spacing between values given by\n      ``step``.\n    \n    Parameters\n    ----------\n    start : integer or real, optional\n        Start of interval.  The interval includes this value.  The default \n        start value is 0.\n    stop : integer or real\n        End of interval.  The interval does not include this value, except \n        in some cases where `step` is not an integer and floating point\n        round-off affects the length of `out`.\n    step : integer or real, optional\n        Spacing between values.  For any output `out`, this is the distance \n        between two adjacent values, ``out[i+1] - out[i]``.  The default \n        step size is 1.  If `step` is specified as a position argument, \n        `start` must also be given.\n    \n    Returns\n    -------\n    arange : ndarray\n        Array of evenly spaced values.\n    \n        For floating point arguments, the length of the result is \n        ``ceil((stop - start)/step)``.  Because of floating point overflow,\n        this rule may result in the last element of `out` being greater \n        than `stop`.\nTo read the above documentation in a Jupyter Notebook, run np.arange? in a code cell.\n\nWhat Will Python Do? (WWPD) - 5 minutes\n\nnp.arange(9)\n\narray([0, 1, 2, 3, 4, 5, 6, 7, 8])\n\n\n\nnp.arange(0, 9, 3)\n\narray([0, 3, 6])\n\n\n\nnp.arange(5, 11)\n\narray([ 5,  6,  7,  8,  9, 10])\n\n\n\nnp.arange(0, 1, 0.1)\n\narray([ 0. ,  0.1,  0.2,  0.3,  0.4,  0.5,  0.6,  0.7,  0.8,  0.9])\n\n\n\nnp.arange(20, 0, -2)\n\narray([20, 18, 16, 14, 12, 10,  8,  6,  4,  2])",
    "crumbs": [
      "L08: Histograms",
      "Exercises"
    ]
  },
  {
    "objectID": "08-histograms/exercises.html#distributions",
    "href": "08-histograms/exercises.html#distributions",
    "title": "Histogram Exercises",
    "section": "Distributions",
    "text": "Distributions\n\nEvery variable has a distribution\n\nTitle: title of the movie\nStudio: name of the studio that produced the movie\nGross: domestic box office gross in dollars\nGross (Adjusted): the gross amount that would have been earned from ticket sales at 2016 prices\nYear: release year of the movie.\n\n\ntop_movies = Table.read_table('data/top_movies_2017.csv')\ntop_movies.show(6)\n\n\n\n\nTitle\nStudio\nGross\nGross (Adjusted)\nYear\n\n\n\n\nGone with the Wind\nMGM\n198676459\n1796176700\n1939\n\n\nStar Wars\nFox\n460998007\n1583483200\n1977\n\n\nThe Sound of Music\nFox\n158671368\n1266072700\n1965\n\n\nE.T.: The Extra-Terrestrial\nUniversal\n435110554\n1261085000\n1982\n\n\nTitanic\nParamount\n658672302\n1204368000\n1997\n\n\nThe Ten Commandments\nParamount\n65500000\n1164590000\n1956\n\n\n\n\n... (194 rows omitted)\n\n\nVisualize the distribution of studios responsible for the highest grossing movies as of 2017.\n\nstudio_distribution = top_movies.group('Studio')\nstudio_distribution.show(6)\n\n\n\n\nStudio\ncount\n\n\n\n\nAVCO\n1\n\n\nBuena Vista\n35\n\n\nColumbia\n9\n\n\nDisney\n11\n\n\nDreamworks\n3\n\n\nFox\n24\n\n\n\n\n... (17 rows omitted)\n\n\n\nstudio_distribution.barh('Studio')\n\n\n\n\n\n\n\n\nLet’s revisualize this barchart to display just the top five studios. In the below code, note how .take is used with np.arange:\n\nstudio_distribution.sort('count', descending=True).take(np.arange(5)).barh('Studio')\nprint(\"Five studios are largely responsible for the highest grossing movies\")\n\nFive studios are largely responsible for the highest grossing movies\n\n\n\n\n\n\n\n\n\nNote that the above bar chart does not display the entire distribution of movies and studios—just the top five.",
    "crumbs": [
      "L08: Histograms",
      "Exercises"
    ]
  },
  {
    "objectID": "08-histograms/exercises.html#histograms-the-area-principle",
    "href": "08-histograms/exercises.html#histograms-the-area-principle",
    "title": "Histogram Exercises",
    "section": "Histograms: The Area Principle",
    "text": "Histograms: The Area Principle\nVisualize the distribution of how long the highest grossing movies as of 2017 have been out (in years).\n\nages = 2025 - top_movies.column('Year')\ntop_movies = top_movies.with_column('Age', ages)\ntop_movies\n\n\n\n\nTitle\nStudio\nGross\nGross (Adjusted)\nYear\nAge\n\n\n\n\nGone with the Wind\nMGM\n198676459\n1796176700\n1939\n86\n\n\nStar Wars\nFox\n460998007\n1583483200\n1977\n48\n\n\nThe Sound of Music\nFox\n158671368\n1266072700\n1965\n60\n\n\nE.T.: The Extra-Terrestrial\nUniversal\n435110554\n1261085000\n1982\n43\n\n\nTitanic\nParamount\n658672302\n1204368000\n1997\n28\n\n\nThe Ten Commandments\nParamount\n65500000\n1164590000\n1956\n69\n\n\nJaws\nUniversal\n260000000\n1138620700\n1975\n50\n\n\nDoctor Zhivago\nMGM\n111721910\n1103564200\n1965\n60\n\n\nThe Exorcist\nWarner Brothers\n232906145\n983226600\n1973\n52\n\n\nSnow White and the Seven Dwarves\nDisney\n184925486\n969010000\n1937\n88\n\n\n\n\n... (190 rows omitted)\n\n\nBefore visualizing anything, let’s look at the table itself.\n\ntop_movies.select('Title', 'Age').show(6)\n\n\n\n\nTitle\nAge\n\n\n\n\nGone with the Wind\n86\n\n\nStar Wars\n48\n\n\nThe Sound of Music\n60\n\n\nE.T.: The Extra-Terrestrial\n43\n\n\nTitanic\n28\n\n\nThe Ten Commandments\n69\n\n\n\n\n... (194 rows omitted)\n\n\n\nmin(ages), max(ages)\n\n(8, 104)",
    "crumbs": [
      "L08: Histograms",
      "Exercises"
    ]
  },
  {
    "objectID": "08-histograms/exercises.html#histogram-counts",
    "href": "08-histograms/exercises.html#histogram-counts",
    "title": "Histogram Exercises",
    "section": "Histogram: Counts",
    "text": "Histogram: Counts\nIf you want to make equally sized bins, np.arange() is a great tool to help you.\n\ntop_movies.hist('Age', bins = np.arange(0, 110, 10), unit = 'Year', density=False)",
    "crumbs": [
      "L08: Histograms",
      "Exercises"
    ]
  },
  {
    "objectID": "08-histograms/exercises.html#histograms-density",
    "href": "08-histograms/exercises.html#histograms-density",
    "title": "Histogram Exercises",
    "section": "Histograms: Density",
    "text": "Histograms: Density\n\n# default is density=True\ntop_movies.hist('Age', bins = np.arange(0, 110, 10), unit = 'Year')\n\n\n\n\n\n\n\n\nHm…what is this density parameter? This is our first instance of a Boolean data type, which takes on the values of True or False.\nVerify that the bar areas are proportional to the counts in each bin:\n\ntop_movies_binned = top_movies.bin('Age', bins=np.arange(0, 110, 10))\ntop_movies_binned.show()\n\n\n\n\nbin\nAge count\n\n\n\n\n0\n12\n\n\n10\n35\n\n\n20\n41\n\n\n30\n28\n\n\n40\n25\n\n\n50\n23\n\n\n60\n18\n\n\n70\n10\n\n\n80\n7\n\n\n90\n0\n\n\n100\n0\n\n\n\n\n\n\nCustom bins\nYou can also pick your own bins. These are just bins that we picked out:\n\nmy_bins = make_array(0, 5, 10, 15, 25, 40, 65, 101)\n\nYou may then use the bin table method to make a table having your bins, along with the number of observations within each.\n\nbinned_data = top_movies.bin('Age', bins = my_bins)\nbinned_data\n\n\n\n\nbin\nAge count\n\n\n\n\n0\n0\n\n\n5\n12\n\n\n10\n18\n\n\n15\n42\n\n\n25\n44\n\n\n40\n59\n\n\n65\n24\n\n\n101\n0\n\n\n\n\n\nNote: The last “bin” does not include any observations!!\n\n\nNow, plot the histogram!\n\ntop_movies.hist('Age', bins = my_bins, unit = 'Year')\n\n\n\n\n\n\n\n\n\nDiscussion Question (1 min): Compare the bins \\([25, 40)\\) and \\([40, 65)\\).\n\nWhich one has more movies?\nWhich one is more crowded?",
    "crumbs": [
      "L08: Histograms",
      "Exercises"
    ]
  },
  {
    "objectID": "08-histograms/exercises.html#practice-histogram-challenge-tasks",
    "href": "08-histograms/exercises.html#practice-histogram-challenge-tasks",
    "title": "Histogram Exercises",
    "section": "[Practice] Histogram Challenge Tasks",
    "text": "[Practice] Histogram Challenge Tasks\nI would not worry about the technical details of the code until next week! Right now, I just want you to see the different styles of bar chart that we might use.\n\nTask: Find the height of the \\([40,65)\\) bin in the histogram above.\n\\[\\text{height} = \\frac{\\text{percent}}{\\text{width}}\\]\nAdd a column containing what percent of movies are in each bin (the area of each bin)\n\nnum_rows = top_movies.num_rows\nbinned_data = binned_data.with_column(\n                'Percent',\n                100*binned_data.column('Age count')/num_rows)\nbinned_data.show()\n\n\n\n\nbin\nAge count\nPercent\n\n\n\n\n0\n0\n0\n\n\n5\n12\n6\n\n\n10\n18\n9\n\n\n15\n42\n21\n\n\n25\n44\n22\n\n\n40\n59\n29.5\n\n\n65\n24\n12\n\n\n101\n0\n0\n\n\n\n\n\n\npercent = binned_data.where('bin', 40).column('Percent').item(0)\n\n\nwidth = 65 - 40\nheight = percent / width\nheight\n\n1.18\n\n\n\n\nTask: Find the heights of the (rest of the) bins.\n\\[\\text{height} = \\frac{\\text{percent}}{\\text{width}}\\]\nRemember that the last row in the table does not represent a bin!\n\nheight_table = binned_data.take(np.arange(binned_data.num_rows - 1))\nheight_table \n\n\n\n\nbin\nAge count\nPercent\n\n\n\n\n0\n0\n0\n\n\n5\n12\n6\n\n\n10\n18\n9\n\n\n15\n42\n21\n\n\n25\n44\n22\n\n\n40\n59\n29.5\n\n\n65\n24\n12\n\n\n\n\n\nRemember np.diff?\n\nbin_widths = np.diff(binned_data.column('bin'))\n\n\nbin_widths\n\narray([ 5,  5,  5, 10, 15, 25, 36])\n\n\n\nheight_table = height_table.with_column('Width', bin_widths)\nheight_table\n\n\n\n\nbin\nAge count\nPercent\nWidth\n\n\n\n\n0\n0\n0\n5\n\n\n5\n12\n6\n5\n\n\n10\n18\n9\n5\n\n\n15\n42\n21\n10\n\n\n25\n44\n22\n15\n\n\n40\n59\n29.5\n25\n\n\n65\n24\n12\n36\n\n\n\n\n\n\nheight_table = height_table.with_column('Height',\n                                        height_table.column('Percent')/height_table.column('Width'))\nheight_table\n\n\n\n\nbin\nAge count\nPercent\nWidth\nHeight\n\n\n\n\n0\n0\n0\n5\n0\n\n\n5\n12\n6\n5\n1.2\n\n\n10\n18\n9\n5\n1.8\n\n\n15\n42\n21\n10\n2.1\n\n\n25\n44\n22\n15\n1.46667\n\n\n40\n59\n29.5\n25\n1.18\n\n\n65\n24\n12\n36\n0.333333\n\n\n\n\n\nTo check our work one last time, let’s see if the numbers in the last column match the heights of the histogram:\n\ntop_movies.hist('Age', bins = my_bins, unit = 'Year')",
    "crumbs": [
      "L08: Histograms",
      "Exercises"
    ]
  },
  {
    "objectID": "08-histograms/exercises.html#practice-bar-chart-variants",
    "href": "08-histograms/exercises.html#practice-bar-chart-variants",
    "title": "Histogram Exercises",
    "section": "[Practice] Bar chart variants",
    "text": "[Practice] Bar chart variants\n\nOne categorical attribute\n\ncones = Table.read_table('data/cones.csv')\ncones\n\n\n\n\nFlavor\nColor\nPrice\n\n\n\n\nstrawberry\npink\n3.55\n\n\nchocolate\nlight brown\n4.75\n\n\nchocolate\ndark brown\n5.25\n\n\nstrawberry\npink\n5.25\n\n\nchocolate\ndark brown\n5.25\n\n\nbubblegum\npink\n4.75\n\n\n\n\n\n\nflavor_table = cones.group('Flavor')\nflavor_table\n\n\n\n\nFlavor\ncount\n\n\n\n\nbubblegum\n1\n\n\nchocolate\n3\n\n\nstrawberry\n2\n\n\n\n\n\n\nflavor_table.barh('Flavor')\n\n\n\n\n\n\n\n\n\n\nOne categorical attribute, one numerical attribute\n\ncone_average_price_table = cones.drop('Color').group('Flavor', np.average)\ncone_average_price_table\n\n\n\n\nFlavor\nPrice average\n\n\n\n\nbubblegum\n4.75\n\n\nchocolate\n5.08333\n\n\nstrawberry\n4.4\n\n\n\n\n\n\ncone_average_price_table.barh('Flavor')\n\n\n\n\n\n\n\n\n\n\nTwo categorical attributes\n(We will cover pivot in more detail next week)\n\ncones_pivot_table = cones.pivot('Flavor','Color')\ncones_pivot_table\n\n\n\n\nColor\nbubblegum\nchocolate\nstrawberry\n\n\n\n\ndark brown\n0\n2\n0\n\n\nlight brown\n0\n1\n0\n\n\npink\n1\n0\n2\n\n\n\n\n\n\ncones_pivot_table.barh('Color')",
    "crumbs": [
      "L08: Histograms",
      "Exercises"
    ]
  },
  {
    "objectID": "02-datatypes/index.html",
    "href": "02-datatypes/index.html",
    "title": "Data Types",
    "section": "",
    "text": "Read Inferential Thinking\n\n\n\nRead Ch 4 intro and Ch 4.1, which describes in detail how Python evaluates expressions involving numeric data types.\nBefore continuing, make sure you understand the following:\n\nEvery value has a type (data type), and the built-in type function returns the type of the result of any expression.\nIn Python, integers are called int values. Real numbers are called float values. These are flexible but have some computational limitations.\nThe type of an expression is the type of its final value.\nWhen a float value is combined with an int value using some arithmetic operator, then the result is always a float value.\n\n\n\n\n\nYou have seen this table before.\n\nCommon Python operators for numeric data types\n\n\n\n\n\n\n\n\nOperator\nSymbol\nExample Expression\nExpression Value\n\n\n\n\nAddition\n+\n2 + 3\n5\n\n\nSubtraction\n-\n15 - 4\n11\n\n\nMultiplication\n*\n-2 * 9\n-18\n\n\nDivision\n/\n15 / 2\n7.5\n\n\nInteger division(Cuts off remainder)\n//\n15 // 2\n7\n\n\nRemainder/Modulo\n%\n19 % 3\n1  (19 ÷ 3 = 6 Remainder 1)\n\n\nExponentiation\n**\n3 ** 2\n9",
    "crumbs": [
      "L02: Data Types"
    ]
  },
  {
    "objectID": "02-datatypes/index.html#numeric-data-types",
    "href": "02-datatypes/index.html#numeric-data-types",
    "title": "Data Types",
    "section": "",
    "text": "Read Inferential Thinking\n\n\n\nRead Ch 4 intro and Ch 4.1, which describes in detail how Python evaluates expressions involving numeric data types.\nBefore continuing, make sure you understand the following:\n\nEvery value has a type (data type), and the built-in type function returns the type of the result of any expression.\nIn Python, integers are called int values. Real numbers are called float values. These are flexible but have some computational limitations.\nThe type of an expression is the type of its final value.\nWhen a float value is combined with an int value using some arithmetic operator, then the result is always a float value.\n\n\n\n\n\nYou have seen this table before.\n\nCommon Python operators for numeric data types\n\n\n\n\n\n\n\n\nOperator\nSymbol\nExample Expression\nExpression Value\n\n\n\n\nAddition\n+\n2 + 3\n5\n\n\nSubtraction\n-\n15 - 4\n11\n\n\nMultiplication\n*\n-2 * 9\n-18\n\n\nDivision\n/\n15 / 2\n7.5\n\n\nInteger division(Cuts off remainder)\n//\n15 // 2\n7\n\n\nRemainder/Modulo\n%\n19 % 3\n1  (19 ÷ 3 = 6 Remainder 1)\n\n\nExponentiation\n**\n3 ** 2\n9",
    "crumbs": [
      "L02: Data Types"
    ]
  },
  {
    "objectID": "02-datatypes/index.html#strings",
    "href": "02-datatypes/index.html#strings",
    "title": "Data Types",
    "section": "Strings",
    "text": "Strings\n\n\n\n\n\n\nRead Inferential Thinking\n\n\n\nRead Ch 4.2 which describes the string data type.\nBefore continuing, make sure you understand the following:\n\nA string is a text data type. It can use single quotes or double quotes.\nThe meaning of an expression depends both upon its structure and the types of values that are being combined.\n\n\n\nConcatenation operation: The + operator works differently on string data types. Instead of adding numerically, it “adds textually,” which is more formally called concatenation:\n\n2 + 3  # addition\n\n5\n\n\n\n'hello' + \"donuts\"\n\n'hellodonuts'\n\n\nLength function: There is one function not shown above that would be useful to you know, and that is len(s), which takes a string argument and returns its length.\n\ns = \"hello world\"\nlen(s)\n\n11",
    "crumbs": [
      "L02: Data Types"
    ]
  },
  {
    "objectID": "02-datatypes/index.html#boolean-data-type",
    "href": "02-datatypes/index.html#boolean-data-type",
    "title": "Data Types",
    "section": "Boolean Data Type",
    "text": "Boolean Data Type\nThe Boolean data type (bool) has exactly two values: True and False. Note that boolean values are not strings!\n\nb = True\nb\n\nTrue\n\n\n\nb = False\ntype(b)\n\nbool\n\n\nIn our current view of Python as an advanced calculator, it may be unclear why such a special data type is needed. We will find soon that it is very useful to have a special data type to represent whether something is true or false.",
    "crumbs": [
      "L02: Data Types"
    ]
  },
  {
    "objectID": "02-datatypes/index.html#typecasting",
    "href": "02-datatypes/index.html#typecasting",
    "title": "Data Types",
    "section": "Typecasting",
    "text": "Typecasting\nWe can also typecast, or convert values between data types. These typecasting functions take in one typed argument and return another typed argument, then return that value as a different type. The function name is generally the type. Note that data type conversion is only valid “when it makes sense.” We’ll talk about this more later.\n\nx = 3       # what type is x?\nstr(x)      # returns a value of type string\n\n'3'\n\n\n\ns = \"5\"       # what type is x?\nfloat(s)      # what type is returned?\n\n5.0",
    "crumbs": [
      "L02: Data Types"
    ]
  },
  {
    "objectID": "02-datatypes/index.html#external-reading",
    "href": "02-datatypes/index.html#external-reading",
    "title": "Data Types",
    "section": "External Reading",
    "text": "External Reading\n\n(mentioned in notes) Computational and Inferential Thinking, Ch 4 intro, Ch 4.1, Ch 4.2\n(optional) Tomas Beuzen. Python Programming for Data Science Ch 1.2.",
    "crumbs": [
      "L02: Data Types"
    ]
  },
  {
    "objectID": "03-arrays/index.html",
    "href": "03-arrays/index.html",
    "title": "Arrays",
    "section": "",
    "text": "This note has the following goals:\nWe will first learn arrays through analyzing data; then, we will drill into array internals and the nitty-gritty of Python modules and methods. Finally, we will summarize array operations.",
    "crumbs": [
      "L03: Arrays"
    ]
  },
  {
    "objectID": "03-arrays/index.html#definitions",
    "href": "03-arrays/index.html#definitions",
    "title": "Arrays",
    "section": "Definitions",
    "text": "Definitions\nLet us discuss our first data structure in this course: arrays. An array is a sequential collection of values of a given data type:\n\nsequential: arranged like a line/queue\ncollection: multiple values organized together.\n\nIn arrays, each value is called an array element.\nWe have previously discussed the idea of tables: a rectangular data structure with rows and columns. We will see today that arrays are a concise way to manipulate table columns, because arrays facilitate common data processing that we may want to perform on columns.\n\n\n\n\n\n\nRead Inferential Thinking\n\n\n\nRead Ch 5.1, which describes in detail how arrays can be used in arithmetic expressions to compute over their contents.\nBefore continuing, make sure that:\n\nYou understand the figure that shows how to convert an array of Celsius temperatures to an array of Farenheit temperatures.\n\n\n\n\nToday’s dataset\nThe following table is drawn from the American Community Survey (ACS) of 2020. It shows education levels of adults 25 years or higher by state.\n\n\n\n\n\n\n\n\n\nState\nEstimated total state population\nEstimated high school graduate or higher (%)\nEstimated bachelor’s degree or higher (%)\n\n\n\n\nAlabama\n3,344,006\n86.9\n26.2\n\n\nCalifornia\n26,665,143\n83.9\n34.7\n\n\nFlorida\n15,255,326\n88.5\n30.5\n\n\nNew York\n13,649,157\n87.2\n37.5\n\n\nTexas\n18,449,851\n84.4\n30.7",
    "crumbs": [
      "L03: Arrays"
    ]
  },
  {
    "objectID": "03-arrays/index.html#creating-arrays",
    "href": "03-arrays/index.html#creating-arrays",
    "title": "Arrays",
    "section": "Creating arrays",
    "text": "Creating arrays\nEach of these table columns can be represented by an array.\nBelow, we create a new array for the column “Estimated high school graduate or higher (%)” and assign the returned array to a single name, hs_or_higher. This simple assignment statement is abstraction at work! Also note that the import statement gives us access to array functions with the datascience module, including make_array, which returns a new array with the provided argument values.\n\nfrom datascience import *\n\nhs_or_higher = make_array(86.9, 83.9, 88.5, 87.2, 84.4)\nhs_or_higher\n\narray([ 86.9,  83.9,  88.5,  87.2,  84.4])\n\n\nLet’s make a few more arrays.\nThe array data type (as shown below) is a bit esoteric for now; we will discuss what NumPy (np) is very soon.\n\nbs_or_higher = make_array(26.2, 34.7, 30.5, 37.5, 30.7)\ntype(bs_or_higher)\n\nnumpy.ndarray\n\n\nWhen creating the state names array of strings below, what do you observe about the datatype, dtype? Hint: Count the number of characters in each string.\n\nstates = make_array(\"Alabama\", \"California\", \"Florida\", \"New York\", \"Texas\")\nstates\n\narray(['Alabama', 'California', 'Florida', 'New York', 'Texas'],\n      dtype='&lt;U10')\n\n\nWhen creating the state population array below, why might we decide to make an integer array, as opposed to a string array?\n\nstate_pop = make_array(3344006, 26665143, 15255326, 13649157, 18449851)\nstate_pop\n\narray([ 3344006, 26665143, 15255326, 13649157, 18449851])\n\n\n\n\n\n\n\n\nMore array details\n\n\n\n\n\nThe order of an array is fixed (i.e., they will be arranged in the order specified when building the array), and values can be repeated.\nArray with 4 ints:\n\nmake_array(5, -1, 0.3, 5)\n\narray([ 5. , -1. ,  0.3,  5. ])\n\n\nValues in an array must all be of the same data type, and the make_array function will cast appropriately. Below, all values can be represented by strings:\n\nmake_array(4, -4.5, \"not a number\")\n\narray(['4', '-4.5', 'not a number'],\n      dtype='&lt;U32')\n\n\nIncidentally, we can clean up our code stylistically by makine line breaks after each argument:\n\nmake_array(\"hello\",\n           \"world\",\n           \"!\")\n\narray(['hello', 'world', '!'],\n      dtype='&lt;U5')",
    "crumbs": [
      "L03: Arrays"
    ]
  },
  {
    "objectID": "03-arrays/index.html#element-wise-arithmetic",
    "href": "03-arrays/index.html#element-wise-arithmetic",
    "title": "Arrays",
    "section": "Element-wise arithmetic",
    "text": "Element-wise arithmetic\nArrays allow us to write code that performs the same operation on many pieces of data at once. We can therefore easily use arithmetic operations on elements of numeric arrays where it “makes sense” (see sidenote).\nTo compute the estimated percentage by state of adults 25 years or higher that have not graduated high school, we can create a new array by performing arithmetic with an array and a numeric value:\n\n100 - hs_or_higher\n\narray([ 13.1,  16.1,  11.5,  12.8,  15.6])\n\n\nTo compute the estimated number by state of adults 25 years or higher with bachelor’s degrees, we can create a new array by performing arithmetic with two arrays:\n\nbs_or_higher / 100 * state_pop\n\narray([  876129.572,  9252804.621,  4652874.43 ,  5118433.875,  5664104.257])\n\n\nSidenote: What do I mean by “makes sense”? Linear Algebra is a broad mathematical field that forms the foundations of much of data science and tabular data analysis. This element-wise array functionality is derived from the mathematical definitions of vectors and scalars. Take a linear algebra class if you want to learn more!",
    "crumbs": [
      "L03: Arrays"
    ]
  },
  {
    "objectID": "03-arrays/index.html#indexing",
    "href": "03-arrays/index.html#indexing",
    "title": "Arrays",
    "section": "Indexing",
    "text": "Indexing\nWhen people stand in a line, each person has a position. Similarly, each element (i.e., value) of an array has a position – called its index. Python, like many programming languages, is zero-indexed. This means that in an array, the first element has index 0, not 1.\nIn the int_arr array below, the first element (3) has index 0; the last element (2) has index 4.\n\nint_arr = make_array(3, -4, 0, 5, 2)\nint_arr\n\narray([ 3, -4,  0,  5,  2])\n\n\n\nThe Array Method item()\nAn array method is just like a function, but it must operate on an array using “dot” syntax. So the call looks like:\nname_of_array.method(arguments)\nWe will discuss many more methods once we introduce tables, but for now let’s learn our first method to index arrays.\nWe can access an element in an array by using its index and the item() method:\n\nint_arr.item(0)\n\n3\n\n\n\nint_arr.item(3)\n\n5\n\n\nBecause of zero-indexing, the largest valid index is 4 for the five-element int_arr array:\n\nint_arr.item(5)\n\n\n---------------------------------------------------------------------------\nIndexError                                Traceback (most recent call last)\nCell In[13], line 1\n----&gt; 1 int_arr.item(5)\n\nIndexError: index 5 is out of bounds for axis 0 with size 5\n\n\n\nIn Python, we can also “count backwards” using negative indexes. -1 corresponds to the last element in an array; -2 corresponds to the second to last element in a array; and so on.\n\n# functionally equivalent to int_arr.item(4)\nint_arr.item(-1)\n\n2",
    "crumbs": [
      "L03: Arrays"
    ]
  },
  {
    "objectID": "03-arrays/index.html#external-reading",
    "href": "03-arrays/index.html#external-reading",
    "title": "Arrays",
    "section": "External Reading",
    "text": "External Reading\n\n(mentioned in notes) Computational and Inferential Thinking, Ch 5.1\n(optional) Tomas Beuzen. Python Programming for Data Science Ch 1.2.",
    "crumbs": [
      "L03: Arrays"
    ]
  },
  {
    "objectID": "03-arrays/index.html#references",
    "href": "03-arrays/index.html#references",
    "title": "Arrays",
    "section": "References",
    "text": "References\nU.S. Census Bureau, “EDUCATIONAL ATTAINMENT,” American Community Survey 5-Year Estimates Subject Tables, Table S1501, 2020, https://data.census.gov/table/ACSST5Y2020.S1501?q=2020+education&t=Age+and+Sex:Educational+Attainment&g=010XX00US$0400000, accessed on August 24, 2025.",
    "crumbs": [
      "L03: Arrays"
    ]
  }
]